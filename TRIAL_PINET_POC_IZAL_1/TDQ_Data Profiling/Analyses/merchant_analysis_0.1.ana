<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:dataquality.analysis="http://dataquality.analysis" xmlns:dataquality.domain="http://dataquality.domain" xmlns:dataquality.indicators="http://dataquality.indicators" xmlns:dataquality.reports="http://dataquality.reports" xmlns:orgomg.cwm.objectmodel.core="http:///orgomg/cwm/objectmodel/core.ecore" xmlns:relational="http://www.talend.org/cwm/resource/relational/2010">
  <dataquality.analysis:Analysis xmi:id="_ficX0H4eEei25uY0cniCVg" name="merchant_analysis" supplierDependency="_nVo8cH4gEei25uY0cniCVg" creationDate="2018-07-03T01:06:46.518+0800" defaultContext="Default">
    <clientDependency href="../../metadata/connections/oracle_133_0.1.item#_5Wrx8H4eEei25uY0cniCVg"/>
    <taggedValue xmi:id="_ficX0X4eEei25uY0cniCVg" tag="Status" value="development"/>
    <taggedValue xmi:id="_ficX0n4eEei25uY0cniCVg" tag="Author" value="mczal@cdttech.com"/>
    <taggedValue xmi:id="_ficX034eEei25uY0cniCVg" tag="Purpose" value=""/>
    <taggedValue xmi:id="_ficX1H4eEei25uY0cniCVg" tag="Description" value=""/>
    <taggedValue xmi:id="_ficX1X4eEei25uY0cniCVg" tag="Version" value="0.1"/>
    <taggedValue xmi:id="_5WioAX4eEei25uY0cniCVg" tag="ANA_LAST_RUN_CONTEXT" value="Default"/>
    <taggedValue xmi:id="_5WioAn4eEei25uY0cniCVg" tag="PREVIEW_ROW_NUMBER" value="50"/>
    <taggedValue xmi:id="_5WioA34eEei25uY0cniCVg" tag="NUMBER_OF_CONNECTIONS_PER_ANALYSIS" value="5"/>
    <taggedValue xmi:id="_5WwqcH4eEei25uY0cniCVg" tag="Is Use Sample Data" value="false"/>
    <context xmi:id="_ficX1n4eEei25uY0cniCVg">
      <connection href="../../metadata/connections/oracle_133_0.1.item#_UkINwH3qEeiI6dEXDZHd4Q"/>
      <analysedElements xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om768X4IEei25uY0cniCVg"/>
      <analysedElements xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om769X4IEei25uY0cniCVg"/>
      <analysedElements xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om76-X4IEei25uY0cniCVg"/>
      <analysedElements xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om76_X4IEei25uY0cniCVg"/>
      <analysedElements xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om77AX4IEei25uY0cniCVg"/>
      <analysedElements xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om77BX4IEei25uY0cniCVg"/>
      <analysedElements xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om77CX4IEei25uY0cniCVg"/>
    </context>
    <results xmi:id="_ficX134eEei25uY0cniCVg">
      <resultMetadata xmi:id="_ficX2H4eEei25uY0cniCVg" executionDate="2018-07-03T01:30:28.862+0800" executionDuration="834" message="" executionNumber="2" lastRunOk="true" lastExecutionNumberOk="2"/>
      <indicators xsi:type="dataquality.indicators:RowCountIndicator" xmi:id="_5WmSYH4eEei25uY0cniCVg" count="1901" computed="true">
        <parameters xmi:id="_5WmSYX4eEei25uY0cniCVg"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om768X4IEei25uY0cniCVg"/>
        <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Row_Count_0.1.definition#_ccFOkBF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_50TiEH4eEei25uY0cniCVg" body="SELECT COUNT(*) FROM &quot;ORACLE&quot;.&quot;MERCHANT_TABLE&quot; " language="Oracle"/>
        <builtInIndicatorDefinition xmi:id="_5qL8wH4eEei25uY0cniCVg" name="Row Count" label="Row Count">
          <taggedValue xmi:id="_5qL8wX4eEei25uY0cniCVg" tag="Description" value="counts the number of rows"/>
          <taggedValue xmi:id="_5qL8wn4eEei25uY0cniCVg" tag="Purpose" value="evaluates the number of records"/>
          <sqlGenericExpression xmi:id="_5qL8w34eEei25uY0cniCVg" body="SELECT COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:NullCountIndicator" xmi:id="_5WmSYn4eEei25uY0cniCVg" count="1901" computed="true">
        <parameters xmi:id="_5WmSY34eEei25uY0cniCVg"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om768X4IEei25uY0cniCVg"/>
        <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Null_Count_0.1.definition#_GrAeADh9Ed2XmO7pl5Yuyg"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_50TiF34eEei25uY0cniCVg" body="SELECT COUNT(*) FROM &quot;ORACLE&quot;.&quot;MERCHANT_TABLE&quot; WHERE &quot;MERCHANT_TYPE_ID&quot; IS NULL " language="Oracle"/>
        <builtInIndicatorDefinition xmi:id="_5qRcUH4eEei25uY0cniCVg" name="Null Count" label="Null Count">
          <taggedValue xmi:id="_5qRcUX4eEei25uY0cniCVg" tag="Purpose" value="evaluate the number of missing data (null records)"/>
          <taggedValue xmi:id="_5qRcUn4eEei25uY0cniCVg" tag="Description" value="counts the number of null rows"/>
          <sqlGenericExpression xmi:id="_5qRcU34eEei25uY0cniCVg" body="SELECT COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE &lt;%=__COLUMN_NAMES__%> IS NULL &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:DistinctCountIndicator" xmi:id="_5WmSZH4eEei25uY0cniCVg" count="1901" computed="true" distinctValueCount="15">
        <parameters xmi:id="_5WmSZX4eEei25uY0cniCVg"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om768X4IEei25uY0cniCVg"/>
        <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Distinct_Count_0.1.definition#_ccHq0BF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_50TiGH4eEei25uY0cniCVg" body="SELECT COUNT(*) FROM (SELECT DISTINCT &quot;MERCHANT_TYPE_ID&quot; FROM &quot;ORACLE&quot;.&quot;MERCHANT_TABLE&quot; ) A" language="Oracle"/>
        <builtInIndicatorDefinition xmi:id="_5qVGsH4eEei25uY0cniCVg" name="Distinct Count" label="Distinct Count">
          <taggedValue xmi:id="_5qVGsX4eEei25uY0cniCVg" tag="Description" value="counts the number of distinct rows (like a &quot;SELECT DISTINCT&quot; SQL statement)"/>
          <taggedValue xmi:id="_5qVGsn4eEei25uY0cniCVg" tag="Purpose" value="evaluates the number of distinct records"/>
          <sqlGenericExpression xmi:id="_5qVGs34eEei25uY0cniCVg" body="SELECT COUNT(*) FROM (SELECT DISTINCT &lt;%=__COLUMN_NAMES__%> FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>) A" language="SQL"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:UniqueCountIndicator" xmi:id="_5WmSZn4eEei25uY0cniCVg" count="1901" computed="true" uniqueValueCount="0">
        <parameters xmi:id="_5WmSZ34eEei25uY0cniCVg"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om768X4IEei25uY0cniCVg"/>
        <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Unique_Count_0.1.definition#_ccHq0RF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_50TiGX4eEei25uY0cniCVg" body="SELECT COUNT(*) FROM (SELECT &quot;MERCHANT_TYPE_ID&quot;, COUNT(*) FROM &quot;ORACLE&quot;.&quot;MERCHANT_TABLE&quot;  GROUP BY &quot;MERCHANT_TYPE_ID&quot; HAVING COUNT(*) = 1) myquery" language="Oracle"/>
        <builtInIndicatorDefinition xmi:id="_5qb0YH4eEei25uY0cniCVg" name="Unique Count" label="Unique Count">
          <taggedValue xmi:id="_5qb0YX4eEei25uY0cniCVg" tag="Description" value="counts the number of unique rows (i.e. distinct rows with only one instance: rows that are not duplicated)"/>
          <taggedValue xmi:id="_5qb0Yn4eEei25uY0cniCVg" tag="Purpose" value="evaluates the number of unique records"/>
          <sqlGenericExpression xmi:id="_5qb0Y34eEei25uY0cniCVg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) AS myquery" language="SQL"/>
          <sqlGenericExpression xmi:id="_5qb0ZH4eEei25uY0cniCVg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount = 1) AS myquery" language="MySQL"/>
          <sqlGenericExpression xmi:id="_5qb0ZX4eEei25uY0cniCVg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) myquery" language="Oracle"/>
          <sqlGenericExpression xmi:id="_5qb0Zn4eEei25uY0cniCVg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount = 1) AS myquery" language="Teradata"/>
          <sqlGenericExpression xmi:id="_5qb0Z34eEei25uY0cniCVg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) AS myquery" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_5qb0aH4eEei25uY0cniCVg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) AS myquery" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
          <sqlGenericExpression xmi:id="_5qb0aX4eEei25uY0cniCVg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1)  myquery" language="Hive" version=""/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:DuplicateCountIndicator" xmi:id="_5WmSaH4eEei25uY0cniCVg" count="1901" computed="true" duplicateValueCount="15">
        <parameters xmi:id="_5WmSaX4eEei25uY0cniCVg"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om768X4IEei25uY0cniCVg"/>
        <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Duplicate_Count_0.1.definition#_ccHq0hF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_50TiGn4eEei25uY0cniCVg" body="SELECT COUNT(*) FROM (SELECT &quot;MERCHANT_TYPE_ID&quot;, COUNT(*) mycount FROM &quot;ORACLE&quot;.&quot;MERCHANT_TABLE&quot;  m  GROUP BY &quot;MERCHANT_TYPE_ID&quot; HAVING COUNT(*) > 1) myquery" language="Oracle"/>
        <builtInIndicatorDefinition xmi:id="_5qe3sH4eEei25uY0cniCVg" name="Duplicate Count" label="Duplicate Count">
          <taggedValue xmi:id="_5qe3sX4eEei25uY0cniCVg" tag="Description" value="counts the number of duplicate rows. This number and the number of unique data equals the number of distinct rows"/>
          <taggedValue xmi:id="_5qe3sn4eEei25uY0cniCVg" tag="Purpose" value="evaluates the number of duplicated records"/>
          <sqlGenericExpression xmi:id="_5qe3s34eEei25uY0cniCVg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) AS myquery" language="SQL"/>
          <sqlGenericExpression xmi:id="_5qe3tH4eEei25uY0cniCVg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount > 1) AS myquery" language="MySQL"/>
          <sqlGenericExpression xmi:id="_5qe3tX4eEei25uY0cniCVg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) myquery" language="Oracle"/>
          <sqlGenericExpression xmi:id="_5qe3tn4eEei25uY0cniCVg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount > 1) AS myquery" language="Teradata"/>
          <sqlGenericExpression xmi:id="_5qe3t34eEei25uY0cniCVg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) myquery" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_5qe3uH4eEei25uY0cniCVg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) AS myquery" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
          <sqlGenericExpression xmi:id="_5qe3uX4eEei25uY0cniCVg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) myquery" language="Hive"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:BlankCountIndicator" xmi:id="_5WmSan4eEei25uY0cniCVg" count="1901" computed="true">
        <parameters xmi:id="_5WmSa34eEei25uY0cniCVg"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om768X4IEei25uY0cniCVg"/>
        <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Blank_Count_0.1.definition#_ccHq0xF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_50TiG34eEei25uY0cniCVg" body="SELECT COUNT(&quot;MERCHANT_TYPE_ID&quot;) FROM &quot;ORACLE&quot;.&quot;MERCHANT_TABLE&quot;  WHERE TRIM(&quot;MERCHANT_TYPE_ID&quot;) IS NULL " language="Oracle"/>
        <builtInIndicatorDefinition xmi:id="_5qhT8H4eEei25uY0cniCVg" name="Blank Count" label="Blank Count">
          <taggedValue xmi:id="_5qhT8X4eEei25uY0cniCVg" tag="Description" value="counts the number of blank rows. A blank is a non null textual data that contains only white spaces (or nothing). Note that Oracle does not distinguish between the empty string and the null value"/>
          <taggedValue xmi:id="_5qhT8n4eEei25uY0cniCVg" tag="Purpose" value="evaluates the number of blank records"/>
          <sqlGenericExpression xmi:id="_5qhT834eEei25uY0cniCVg" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE TRIM(&lt;%=__COLUMN_NAMES__%>) = '' &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
          <sqlGenericExpression xmi:id="_5qhT9H4eEei25uY0cniCVg" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE TRIM(&lt;%=__COLUMN_NAMES__%>) IS NULL &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
          <sqlGenericExpression xmi:id="_5qhT9X4eEei25uY0cniCVg" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE LTRIM(RTRIM(&lt;%=__COLUMN_NAMES__%>)) = '' &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
          <sqlGenericExpression xmi:id="_5qhT9n4eEei25uY0cniCVg" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE LTRIM(RTRIM(&lt;%=__COLUMN_NAMES__%>)) = '' &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_5qhT934eEei25uY0cniCVg" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> = '' or RTRIM(LTRIM(&lt;%=__COLUMN_NAMES__%>)) = '') &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:TextIndicator" xmi:id="_5WmSbH4eEei25uY0cniCVg">
        <parameters xmi:id="_5WmSbX4eEei25uY0cniCVg"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om768X4IEei25uY0cniCVg"/>
        <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Text_Statistics_0.1.definition#_yb9x0zh8Ed2XmO7pl5Yuyg"/>
        <averageLengthIndicator xmi:id="_5WmSbn4eEei25uY0cniCVg" count="1901" computed="true" sumLength="3303.0">
          <parameters xmi:id="_5WmSb34eEei25uY0cniCVg">
            <textParameter xmi:id="_5WmScH4eEei25uY0cniCVg" useBlank="false"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om768X4IEei25uY0cniCVg"/>
          <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Average_Length_0.1.definition#_ccIR4BF2Ed2PKb6nEJEvhw"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_50TiHH4eEei25uY0cniCVg" body="SELECT SUM(LENGTH(&quot;MERCHANT_TYPE_ID&quot;)), COUNT(&quot;MERCHANT_TYPE_ID&quot;) FROM &quot;ORACLE&quot;.&quot;MERCHANT_TABLE&quot; WHERE (&quot;MERCHANT_TYPE_ID&quot; IS NOT NULL ) AND (TRIM(NVL(&quot;MERCHANT_TYPE_ID&quot;,'NULL TALEND')) IS NOT NULL) " language="Oracle"/>
          <builtInIndicatorDefinition xmi:id="_5qjwMH4eEei25uY0cniCVg" name="Average Length" label="Average Length">
            <taggedValue xmi:id="_5qjwMX4eEei25uY0cniCVg" tag="Description" value="computes the average length of the field. Does not take into account the null values when computing the average."/>
            <taggedValue xmi:id="_5qjwMn4eEei25uY0cniCVg" tag="Purpose" value="evaluates the average length of the textual record"/>
            <sqlGenericExpression xmi:id="_5qjwM34eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_5qjwNH4eEei25uY0cniCVg" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_5qjwNX4eEei25uY0cniCVg" body="SELECT SUM(LEN(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_5qjwNn4eEei25uY0cniCVg" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_5qjwN34eEei25uY0cniCVg" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_5qjwOH4eEei25uY0cniCVg" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_5qjwOX4eEei25uY0cniCVg" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_5qjwOn4eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_5qjwO34eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_5qjwPH4eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )), COUNT( &lt;%=__COLUMN_NAMES__%> ) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) AND ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_5qjwPX4eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_5qjwPn4eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
          </builtInIndicatorDefinition>
        </averageLengthIndicator>
        <maxLengthIndicator xmi:id="_5WmScX4eEei25uY0cniCVg" computed="true" length="2">
          <parameters xmi:id="_5WmScn4eEei25uY0cniCVg">
            <textParameter xmi:id="_5WmSc34eEei25uY0cniCVg" useBlank="false"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om768X4IEei25uY0cniCVg"/>
          <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Maximal_Length_0.1.definition#_ccHq1RF2Ed2PKb6nEJEvhw"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_50TiHX4eEei25uY0cniCVg" body="SELECT MAX( LENGTH(&quot;MERCHANT_TYPE_ID&quot;) ) FROM &quot;ORACLE&quot;.&quot;MERCHANT_TABLE&quot; WHERE (&quot;MERCHANT_TYPE_ID&quot; IS NOT NULL ) AND (TRIM(NVL(&quot;MERCHANT_TYPE_ID&quot;,'NULL TALEND')) IS NOT NULL) " language="Oracle"/>
          <builtInIndicatorDefinition xmi:id="_5qmMcH4eEei25uY0cniCVg" name="Maximal Length" label="Maximal Length">
            <taggedValue xmi:id="_5qmMcX4eEei25uY0cniCVg" tag="Description" value="computes the maximal length of a text field."/>
            <taggedValue xmi:id="_5qmMcn4eEei25uY0cniCVg" tag="Purpose" value="evaluates the length of the longest textual record"/>
            <sqlGenericExpression xmi:id="_5qmMc34eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_5qmMdH4eEei25uY0cniCVg" body="SELECT MAX( LENGTH(&lt;%=__COLUMN_NAMES__%>) ) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle" modificationDate=""/>
            <sqlGenericExpression xmi:id="_5qmMdX4eEei25uY0cniCVg" body="SELECT MAX(LEN(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_5qmMdn4eEei25uY0cniCVg" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_5qmMd34eEei25uY0cniCVg" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_5qmMeH4eEei25uY0cniCVg" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_5qmMeX4eEei25uY0cniCVg" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive" modificationDate=""/>
            <sqlGenericExpression xmi:id="_5qmMen4eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_5qmMe34eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' )  &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_5qmMfH4eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) AND ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_5qmMfX4eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_5qmMfn4eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
          </builtInIndicatorDefinition>
        </maxLengthIndicator>
        <minLengthIndicator xmi:id="_5WmSdH4eEei25uY0cniCVg" computed="true" length="1">
          <parameters xmi:id="_5WmSdX4eEei25uY0cniCVg">
            <textParameter xmi:id="_5WmSdn4eEei25uY0cniCVg" useBlank="false"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om768X4IEei25uY0cniCVg"/>
          <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Minimal_Length_0.1.definition#_ccHq1BF2Ed2PKb6nEJEvhw"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_50UJIH4eEei25uY0cniCVg" body="SELECT MIN( LENGTH(&quot;MERCHANT_TYPE_ID&quot;) ) FROM &quot;ORACLE&quot;.&quot;MERCHANT_TABLE&quot; WHERE (&quot;MERCHANT_TYPE_ID&quot; IS NOT NULL ) AND (TRIM(NVL(&quot;MERCHANT_TYPE_ID&quot;,'NULL TALEND')) IS NOT NULL) " language="Oracle"/>
          <builtInIndicatorDefinition xmi:id="_5qoosH4eEei25uY0cniCVg" name="Minimal Length" label="Minimal Length">
            <taggedValue xmi:id="_5qoosX4eEei25uY0cniCVg" tag="Description" value="computes the minimal length of a text field. Does not take into account the null values when computing the minimal length."/>
            <taggedValue xmi:id="_5qoosn4eEei25uY0cniCVg" tag="Purpose" value="evaluates the length of the smallest textual record"/>
            <sqlGenericExpression xmi:id="_5qoos34eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_5qootH4eEei25uY0cniCVg" body="SELECT MIN( LENGTH(&lt;%=__COLUMN_NAMES__%>) ) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_5qootX4eEei25uY0cniCVg" body="SELECT MIN(LEN(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_5qootn4eEei25uY0cniCVg" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_5qoot34eEei25uY0cniCVg" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_5qoouH4eEei25uY0cniCVg" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_5qoouX4eEei25uY0cniCVg" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_5qooun4eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_5qoou34eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_5qoovH4eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) AND ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_5qoovX4eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (1=1) AND (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_5qoovn4eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
          </builtInIndicatorDefinition>
        </minLengthIndicator>
        <minLengthWithBlankIndicator xmi:id="_5WmSd34eEei25uY0cniCVg" computed="true" length="1">
          <parameters xmi:id="_5WmSeH4eEei25uY0cniCVg">
            <textParameter xmi:id="_5WmSeX4eEei25uY0cniCVg"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om768X4IEei25uY0cniCVg"/>
          <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Minimal_Length_With_Blank_0.1.definition#_G4EzQZU9Ed-Y15ulK_jijQ"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_50UJJ34eEei25uY0cniCVg" body="SELECT MIN( LENGTH(&quot;MERCHANT_TYPE_ID&quot;) ) FROM &quot;ORACLE&quot;.&quot;MERCHANT_TABLE&quot; WHERE (&quot;MERCHANT_TYPE_ID&quot; IS NOT NULL ) " language="Oracle"/>
          <builtInIndicatorDefinition xmi:id="_5q8KsH4eEei25uY0cniCVg" name="Minimal Length With Blank" label="Minimal Length With Blank">
            <taggedValue xmi:id="_5q8KsX4eEei25uY0cniCVg" tag="Description" value="computes the minimal length of a text field, counting blank as zero length values."/>
            <taggedValue xmi:id="_5q8Ksn4eEei25uY0cniCVg" tag="Purpose" value="evaluates the length of the smallest textual record"/>
            <sqlGenericExpression xmi:id="_5q8Ks34eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_5q8KtH4eEei25uY0cniCVg" body="SELECT MIN( LENGTH(&lt;%=__COLUMN_NAMES__%>) ) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_5q8KtX4eEei25uY0cniCVg" body="SELECT MIN(LEN(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_5q8Ktn4eEei25uY0cniCVg" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_5q8Kt34eEei25uY0cniCVg" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_5q8KuH4eEei25uY0cniCVg" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_5q8KuX4eEei25uY0cniCVg" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_5q8Kun4eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_5q8Ku34eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_5q8KvH4eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_5q8KvX4eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
          </builtInIndicatorDefinition>
        </minLengthWithBlankIndicator>
        <minLengthWithNullIndicator xmi:id="_5WmSen4eEei25uY0cniCVg" computed="true" length="1">
          <parameters xmi:id="_5WmSe34eEei25uY0cniCVg">
            <textParameter xmi:id="_5WmSfH4eEei25uY0cniCVg" useBlank="false" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om768X4IEei25uY0cniCVg"/>
          <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Minimal_Length_With_Null_0.1.definition#_a4KsoI1qEd-xwI2imLgHRA"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_50UJKH4eEei25uY0cniCVg" body="SELECT MIN(CASE WHEN &quot;MERCHANT_TYPE_ID&quot; IS NULL THEN 0 ELSE LENGTH(&quot;MERCHANT_TYPE_ID&quot;) END) FROM &quot;ORACLE&quot;.&quot;MERCHANT_TABLE&quot; WHERE (TRIM(NVL(&quot;MERCHANT_TYPE_ID&quot;,'NULL TALEND')) IS NOT NULL) " language="Oracle"/>
          <builtInIndicatorDefinition xmi:id="_5q_OAH4eEei25uY0cniCVg" name="Minimal Length With Null" label="Minimal Length With Null">
            <taggedValue xmi:id="_5q_OAX4eEei25uY0cniCVg" tag="Description" value="computes the minimal length of a text field, counting null as zero length values."/>
            <taggedValue xmi:id="_5q_OAn4eEei25uY0cniCVg" tag="Purpose" value="evaluates the length of the smallest textual record"/>
            <sqlGenericExpression xmi:id="_5q_OA34eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_5q_OBH4eEei25uY0cniCVg" body="SELECT MIN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_5q_OBX4eEei25uY0cniCVg" body="SELECT MIN(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_5q_OBn4eEei25uY0cniCVg" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_5q_OB34eEei25uY0cniCVg" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_5q_OCH4eEei25uY0cniCVg" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_5q_OCX4eEei25uY0cniCVg" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_5q_OCn4eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_5q_OC34eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_5q_ODH4eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_5q_ODX4eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_5q_ODn4eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
          </builtInIndicatorDefinition>
        </minLengthWithNullIndicator>
        <minLengthWithBlankNullIndicator xmi:id="_5WmSfX4eEei25uY0cniCVg" computed="true" length="1">
          <parameters xmi:id="_5WmSfn4eEei25uY0cniCVg">
            <textParameter xmi:id="_5WmSf34eEei25uY0cniCVg" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om768X4IEei25uY0cniCVg"/>
          <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Minimal_Length_With_Blank_and_Null_0.1.definition#_9HDjMJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_50UJKX4eEei25uY0cniCVg" body="SELECT MIN(CASE WHEN &quot;MERCHANT_TYPE_ID&quot; IS NULL  THEN 0 ELSE LENGTH(&quot;MERCHANT_TYPE_ID&quot;) END) FROM &quot;ORACLE&quot;.&quot;MERCHANT_TABLE&quot; " language="Oracle"/>
          <builtInIndicatorDefinition xmi:id="_5rC4YH4eEei25uY0cniCVg" name="Minimal Length With Blank and Null" label="Minimal Length With Blank and Null">
            <taggedValue xmi:id="_5rC4YX4eEei25uY0cniCVg" tag="Description" value="computes the minimal length of a text field, counting blank and null as zero length values."/>
            <taggedValue xmi:id="_5rC4Yn4eEei25uY0cniCVg" tag="Purpose" value="evaluates the length of the smallest textual record"/>
            <sqlGenericExpression xmi:id="_5rC4Y34eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_5rC4ZH4eEei25uY0cniCVg" body="SELECT MIN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_5rC4ZX4eEei25uY0cniCVg" body="SELECT MIN(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_5rC4Zn4eEei25uY0cniCVg" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_5rC4Z34eEei25uY0cniCVg" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_5rC4aH4eEei25uY0cniCVg" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_5rC4aX4eEei25uY0cniCVg" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_5rC4an4eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_5rC4a34eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_5rC4bH4eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END )) FROM  &lt;%=__TABLE_NAME__%>   &lt;%=__WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_5rC4bX4eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_5rC4bn4eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Netezza"/>
          </builtInIndicatorDefinition>
        </minLengthWithBlankNullIndicator>
        <maxLengthWithBlankIndicator xmi:id="_5WmSgH4eEei25uY0cniCVg" computed="true" length="2">
          <parameters xmi:id="_5WmSgX4eEei25uY0cniCVg">
            <textParameter xmi:id="_5WmSgn4eEei25uY0cniCVg"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om768X4IEei25uY0cniCVg"/>
          <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Maximal_Length_With_Blank_0.1.definition#_-xmZcJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_50UJJH4eEei25uY0cniCVg" body="SELECT MAX( LENGTH(&quot;MERCHANT_TYPE_ID&quot;) ) FROM &quot;ORACLE&quot;.&quot;MERCHANT_TABLE&quot; WHERE (&quot;MERCHANT_TYPE_ID&quot; IS NOT NULL ) " language="Oracle"/>
          <builtInIndicatorDefinition xmi:id="_5q0O4H4eEei25uY0cniCVg" name="Maximal Length With Blank" label="Maximal Length With Blank">
            <taggedValue xmi:id="_5q0O4X4eEei25uY0cniCVg" tag="Description" value="computes the maximal length of a text field, counting blank data  as zero length values."/>
            <taggedValue xmi:id="_5q0O4n4eEei25uY0cniCVg" tag="Purpose" value="evaluates the length of the longest textual record"/>
            <sqlGenericExpression xmi:id="_5q0O434eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_5q0O5H4eEei25uY0cniCVg" body="SELECT MAX( LENGTH(&lt;%=__COLUMN_NAMES__%>) ) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_5q0O5X4eEei25uY0cniCVg" body="SELECT MAX(LEN(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_5q0O5n4eEei25uY0cniCVg" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_5q0O534eEei25uY0cniCVg" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_5q0O6H4eEei25uY0cniCVg" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_5q0O6X4eEei25uY0cniCVg" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_5q0O6n4eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_5q0O634eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_5q0O7H4eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_5q0O7X4eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
          </builtInIndicatorDefinition>
        </maxLengthWithBlankIndicator>
        <maxLengthWithNullIndicator xmi:id="_5WmSg34eEei25uY0cniCVg" computed="true" length="2">
          <parameters xmi:id="_5WmShH4eEei25uY0cniCVg">
            <textParameter xmi:id="_5WmShX4eEei25uY0cniCVg" useBlank="false" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om768X4IEei25uY0cniCVg"/>
          <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Maximal_Length_With_Null_0.1.definition#_-_UFUJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_50UJJX4eEei25uY0cniCVg" body="SELECT MAX(CASE WHEN &quot;MERCHANT_TYPE_ID&quot; IS NULL THEN 0 ELSE LENGTH(&quot;MERCHANT_TYPE_ID&quot;) END) FROM &quot;ORACLE&quot;.&quot;MERCHANT_TABLE&quot; WHERE (TRIM(NVL(&quot;MERCHANT_TYPE_ID&quot;,'NULL TALEND')) IS NOT NULL) " language="Oracle"/>
          <builtInIndicatorDefinition xmi:id="_5q2rIH4eEei25uY0cniCVg" name="Maximal Length With Null" label="Maximal Length With Null">
            <taggedValue xmi:id="_5q3SMH4eEei25uY0cniCVg" tag="Description" value="computes the maximal length of a text field, counting null data as zero length values."/>
            <taggedValue xmi:id="_5q3SMX4eEei25uY0cniCVg" tag="Purpose" value="evaluates the length of the longest textual record"/>
            <sqlGenericExpression xmi:id="_5q3SMn4eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_5q3SM34eEei25uY0cniCVg" body="SELECT MAX(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_5q3SNH4eEei25uY0cniCVg" body="SELECT MAX(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_5q3SNX4eEei25uY0cniCVg" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_5q3SNn4eEei25uY0cniCVg" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_5q3SN34eEei25uY0cniCVg" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_5q3SOH4eEei25uY0cniCVg" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive" version=""/>
            <sqlGenericExpression xmi:id="_5q3SOX4eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_5q3SOn4eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_5q3SO34eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_5q3SPH4eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_5q3SPX4eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
          </builtInIndicatorDefinition>
        </maxLengthWithNullIndicator>
        <maxLengthWithBlankNullIndicator xmi:id="_5WmShn4eEei25uY0cniCVg" computed="true" length="2">
          <parameters xmi:id="_5WmSh34eEei25uY0cniCVg">
            <textParameter xmi:id="_5WmSiH4eEei25uY0cniCVg" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om768X4IEei25uY0cniCVg"/>
          <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Maximal_Length_With_Blank_and_Null_0.1.definition#_-hzp8JSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_50UJJn4eEei25uY0cniCVg" body="SELECT MAX(CASE WHEN &quot;MERCHANT_TYPE_ID&quot; IS NULL  THEN 0 ELSE LENGTH(&quot;MERCHANT_TYPE_ID&quot;) END) FROM &quot;ORACLE&quot;.&quot;MERCHANT_TABLE&quot; " language="Oracle"/>
          <builtInIndicatorDefinition xmi:id="_5q5ucH4eEei25uY0cniCVg" name="Maximal Length With Blank and Null" label="Maximal Length With Blank and Null">
            <taggedValue xmi:id="_5q5ucX4eEei25uY0cniCVg" tag="Description" value="computes the maximal length of a text field, counting null and blank data as zero length values."/>
            <taggedValue xmi:id="_5q5ucn4eEei25uY0cniCVg" tag="Purpose" value="evaluates the length of the longest textual record"/>
            <sqlGenericExpression xmi:id="_5q5uc34eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_5q5udH4eEei25uY0cniCVg" body="SELECT MAX(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_5q5udX4eEei25uY0cniCVg" body="SELECT MAX(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_5q5udn4eEei25uY0cniCVg" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_5q5ud34eEei25uY0cniCVg" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_5q5ueH4eEei25uY0cniCVg" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_5q5ueX4eEei25uY0cniCVg" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_5q5uen4eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_5q5ue34eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_5q5ufH4eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END )) FROM  &lt;%=__TABLE_NAME__%>   &lt;%=__WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_5q5ufX4eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_5q5ufn4eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Netezza"/>
          </builtInIndicatorDefinition>
        </maxLengthWithBlankNullIndicator>
        <avgLengthWithBlankIndicator xmi:id="_5WmSiX4eEei25uY0cniCVg" count="1901" computed="true" sumLength="3303.0">
          <parameters xmi:id="_5WmSin4eEei25uY0cniCVg">
            <textParameter xmi:id="_5WmSi34eEei25uY0cniCVg"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om768X4IEei25uY0cniCVg"/>
          <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Average_Length_With_Blank_0.1.definition#__gPoIJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_50UJIX4eEei25uY0cniCVg" body="SELECT SUM(CASE WHEN &quot;MERCHANT_TYPE_ID&quot; IS NOT NULL AND  TRIM(&quot;MERCHANT_TYPE_ID&quot;) IS NULL THEN 0 ELSE  LENGTH(&quot;MERCHANT_TYPE_ID&quot;)END), COUNT(*) FROM &quot;ORACLE&quot;.&quot;MERCHANT_TABLE&quot; WHERE (&quot;MERCHANT_TYPE_ID&quot; IS NOT NULL ) " language="Oracle"/>
          <builtInIndicatorDefinition xmi:id="_5qrsAH4eEei25uY0cniCVg" name="Average Length With Blank" label="Average Length With Blank">
            <taggedValue xmi:id="_5qrsAX4eEei25uY0cniCVg" tag="Description" value="computes the average length of the field, counting blank data as zero length values."/>
            <taggedValue xmi:id="_5qrsAn4eEei25uY0cniCVg" tag="Purpose" value="evaluates the average length of the textual record"/>
            <sqlGenericExpression xmi:id="_5qrsA34eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH(CASE WHEN   CHAR_LENGTH( TRIM(&lt;%=__COLUMN_NAMES__%>) ) =0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_5qrsBH4eEei25uY0cniCVg" body="SELECT SUM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NOT NULL AND  TRIM(&lt;%=__COLUMN_NAMES__%>) IS NULL THEN 0 ELSE  LENGTH(&lt;%=__COLUMN_NAMES__%>)END), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_5qrsBX4eEei25uY0cniCVg" body="SELECT SUM(LEN(CASE WHEN  LEN( LTRIM(RTRIM(&lt;%=__COLUMN_NAMES__%>)) )=0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_5qrsBn4eEei25uY0cniCVg" body="SELECT SUM(LENGTH(CASE WHEN   LENGTH( TRIM(&lt;%=__COLUMN_NAMES__%>) ) =0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_5qrsB34eEei25uY0cniCVg" body="SELECT SUM(LENGTH(CASE WHEN   LENGTH( TRIM(&lt;%=__COLUMN_NAMES__%>) ) =0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_5qrsCH4eEei25uY0cniCVg" body="SELECT SUM(LENGTH(CASE WHEN   LENGTH( TRIM(&lt;%=__COLUMN_NAMES__%>) ) =0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_5qrsCX4eEei25uY0cniCVg" body="SELECT SUM(LENGTH(CASE WHEN   LENGTH( TRIM(&lt;%=__COLUMN_NAMES__%>) ) =0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_5qrsCn4eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( TRIM(&lt;%=__COLUMN_NAMES__%>) ) =0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_5qrsC34eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( LTRIM(RTRIM(&lt;%=__COLUMN_NAMES__%>)) ) =0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_5qrsDH4eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( TRIM( &lt;%=__COLUMN_NAMES__%> ) ) =0  THEN '' ELSE   &lt;%=__COLUMN_NAMES__%>  END)), COUNT(*) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_5qrsDX4eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( TRIM(&lt;%=__COLUMN_NAMES__%>) ) =0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
          </builtInIndicatorDefinition>
        </avgLengthWithBlankIndicator>
        <avgLengthWithNullIndicator xmi:id="_5WmSjH4eEei25uY0cniCVg" count="1901" computed="true" sumLength="3303.0">
          <parameters xmi:id="_5WmSjX4eEei25uY0cniCVg">
            <textParameter xmi:id="_5WmSjn4eEei25uY0cniCVg" useBlank="false" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om768X4IEei25uY0cniCVg"/>
          <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Average_Length_With_Null_0.1.definition#__vI_wJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_50UJIn4eEei25uY0cniCVg" body="SELECT SUM(CASE WHEN &quot;MERCHANT_TYPE_ID&quot; IS NULL THEN 0 ELSE LENGTH(&quot;MERCHANT_TYPE_ID&quot;) END), COUNT(*) FROM &quot;ORACLE&quot;.&quot;MERCHANT_TABLE&quot; WHERE (TRIM(NVL(&quot;MERCHANT_TYPE_ID&quot;,'NULL TALEND')) IS NOT NULL) " language="Oracle"/>
          <builtInIndicatorDefinition xmi:id="_5quIQH4eEei25uY0cniCVg" name="Average Length With Null" label="Average Length With Null">
            <taggedValue xmi:id="_5quIQX4eEei25uY0cniCVg" tag="Description" value="computes the average length of the field, counting null data as zero length values."/>
            <taggedValue xmi:id="_5quIQn4eEei25uY0cniCVg" tag="Purpose" value="evaluates the average length of the textual record"/>
            <sqlGenericExpression xmi:id="_5quIQ34eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_5quIRH4eEei25uY0cniCVg" body="SELECT SUM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_5quIRX4eEei25uY0cniCVg" body="SELECT SUM(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_5quIRn4eEei25uY0cniCVg" body="SELECT SUM(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_5quIR34eEei25uY0cniCVg" body="SELECT SUM(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_5quISH4eEei25uY0cniCVg" body="SELECT SUM(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_5quISX4eEei25uY0cniCVg" body="SELECT SUM(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_5quISn4eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_5quIS34eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_5quITH4eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_5quITX4eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_5quITn4eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
          </builtInIndicatorDefinition>
        </avgLengthWithNullIndicator>
        <avgLengthWithBlankNullIndicator xmi:id="_5WmSj34eEei25uY0cniCVg" count="1901" computed="true" sumLength="3303.0">
          <parameters xmi:id="_5WmSkH4eEei25uY0cniCVg">
            <textParameter xmi:id="_5WmSkX4eEei25uY0cniCVg" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om768X4IEei25uY0cniCVg"/>
          <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Average_Length_With_Blank_and_Null_0.1.definition#__TbUIJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_50UJI34eEei25uY0cniCVg" body="SELECT SUM(CASE WHEN &quot;MERCHANT_TYPE_ID&quot; IS NOT NULL AND  TRIM(&quot;MERCHANT_TYPE_ID&quot;) IS NULL THEN 0 ELSE CASE WHEN &quot;MERCHANT_TYPE_ID&quot; IS NULL THEN 0 ELSE LENGTH(&quot;MERCHANT_TYPE_ID&quot;) END  END), COUNT(*) FROM &quot;ORACLE&quot;.&quot;MERCHANT_TABLE&quot; " language="Oracle"/>
          <builtInIndicatorDefinition xmi:id="_5qxLkH4eEei25uY0cniCVg" name="Average Length With Blank and Null" label="Average Length With Blank and Null">
            <taggedValue xmi:id="_5qxLkX4eEei25uY0cniCVg" tag="Description" value="computes the average length of the field, counting blank and null data as zero lenght values."/>
            <taggedValue xmi:id="_5qxLkn4eEei25uY0cniCVg" tag="Purpose" value="evaluates the average length of the textual record"/>
            <sqlGenericExpression xmi:id="_5qxLk34eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH(CASE WHEN   CHAR_LENGTH( TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'')) ) =0  THEN '' ELSE  IFNULL(&lt;%=__COLUMN_NAMES__%>,'') END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_5qxLlH4eEei25uY0cniCVg" body="SELECT SUM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NOT NULL AND  TRIM(&lt;%=__COLUMN_NAMES__%>) IS NULL THEN 0 ELSE CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END  END), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_5qxLlX4eEei25uY0cniCVg" body="SELECT SUM(LEN(CASE WHEN  LEN( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) )=0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_5qxLln4eEei25uY0cniCVg" body="SELECT SUM(LENGTH(CASE WHEN   LENGTH( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END ) ) =0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_5qxLl34eEei25uY0cniCVg" body="SELECT SUM(LENGTH(CASE WHEN   LENGTH( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END ) ) =0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_5qxLmH4eEei25uY0cniCVg" body="SELECT SUM(LENGTH(CASE WHEN   LENGTH( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END ) ) =0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_5qxLmX4eEei25uY0cniCVg" body="SELECT SUM(LENGTH(CASE WHEN   LENGTH( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END ) ) =0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_5qxLmn4eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END ) ) =0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_5qxLm34eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) ) =0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_5qxLnH4eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END ) ) =0  THEN '' ELSE   CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END  END)), COUNT(*) FROM  &lt;%=__TABLE_NAME__%>   &lt;%=__WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_5qxLnX4eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END ) ) =0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_5qxLnn4eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH(CASE WHEN   CHAR_LENGTH( TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'')) ) =0  THEN '' ELSE  ISNULL(&lt;%=__COLUMN_NAMES__%>,'') END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Netezza"/>
          </builtInIndicatorDefinition>
        </avgLengthWithBlankNullIndicator>
      </indicators>
      <indicators xsi:type="dataquality.indicators:PatternFreqIndicator" xmi:id="_5WoHkH4eEei25uY0cniCVg" count="1901" computed="true" distinctValueCount="2" valueToFreq="ACED0005737200116A6176612E7574696C2E486173684D61700507DAC1C31660D103000246000A6C6F6164466163746F724900097468726573686F6C6478703F4000000000000C7708000000100000000274000239397372000E6A6176612E6C616E672E4C6F6E673B8BE490CC8F23DF0200014A000576616C7565787200106A6176612E6C616E672E4E756D62657286AC951D0B94E08B0200007870000000000000057A740001397371007E000300000000000001F378">
        <parameters xmi:id="_5WoHkX4eEei25uY0cniCVg"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om768X4IEei25uY0cniCVg"/>
        <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Pattern Frequency Statistics/Pattern_Frequency_Table_0.1.definition#_kQzTsJR-Ed2XO-JvLwVAwg"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_50UwMH4eEei25uY0cniCVg" body="SELECT * FROM (SELECT TRANSLATE(&quot;MERCHANT_TYPE_ID&quot; , 'abcdefghijklmnopqrstuvwxyzçâêîôûéèùïöüABCDEFGHIJKLMNOPQRSTUVWXYZÇÂÊÎÔÛÉÈÙÏÖÜ0123456789' , 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999'), COUNT(*) AS c FROM &quot;ORACLE&quot;.&quot;MERCHANT_TABLE&quot; t  GROUP BY TRANSLATE(&quot;MERCHANT_TYPE_ID&quot; , 'abcdefghijklmnopqrstuvwxyzçâêîôûéèùïöüABCDEFGHIJKLMNOPQRSTUVWXYZÇÂÊÎÔÛÉÈÙÏÖÜ0123456789' , 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999') ORDER BY c DESC) WHERE ROWNUM &lt;= 10" language="Oracle"/>
        <builtInIndicatorDefinition xmi:id="_5rGiwH4eEei25uY0cniCVg" name="Pattern Frequency Table" label="Pattern Frequency Table">
          <taggedValue xmi:id="_5rGiwX4eEei25uY0cniCVg" tag="Description" value="counts the number of records for each distinct pattern"/>
          <taggedValue xmi:id="_5rGiwn4eEei25uY0cniCVg" tag="Purpose" value="evaluates the most frequent patterns"/>
          <sqlGenericExpression xmi:id="_5rGiw34eEei25uY0cniCVg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY c DESC" language="SQL"/>
          <sqlGenericExpression xmi:id="_5rGixH4eEei25uY0cniCVg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY c DESC" language="MySQL"/>
          <sqlGenericExpression xmi:id="_5rGixX4eEei25uY0cniCVg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) AS c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY c DESC" language="Oracle"/>
          <sqlGenericExpression xmi:id="_5rGixn4eEei25uY0cniCVg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) AS c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY c DESC" language="PostgreSQL"/>
          <sqlGenericExpression xmi:id="_5rGix34eEei25uY0cniCVg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY c DESC" language="DB2"/>
          <sqlGenericExpression xmi:id="_5rGiyH4eEei25uY0cniCVg" body="SELECT &lt;%=__COLUMN_NAMES__%> , COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY c DESC" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_5rGiyX4eEei25uY0cniCVg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) AS c FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY c DESC" language="Informix"/>
          <sqlGenericExpression xmi:id="_5rGiyn4eEei25uY0cniCVg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY c DESC" language="AS/400"/>
          <sqlGenericExpression xmi:id="_5rGiy34eEei25uY0cniCVg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY c DESC" language="Teradata"/>
          <sqlGenericExpression xmi:id="_5rGizH4eEei25uY0cniCVg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) AS c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY c DESC" language="Vertica Database"/>
          <sqlGenericExpression xmi:id="_5rGizX4eEei25uY0cniCVg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) AS c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY c DESC" language="Netezza"/>
          <charactersMapping xmi:id="_5rGizn4eEei25uY0cniCVg" language="SQL" charactersToReplace="abcdefghijklmnopqrstuvwxyzçâêîôûéèùïöüABCDEFGHIJKLMNOPQRSTUVWXYZÇÂÊÎÔÛÉÈÙÏÖÜ0123456789" replacementCharacters="aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999"/>
          <charactersMapping xmi:id="_5rGiz34eEei25uY0cniCVg" name="Characters mapping on MySQL" language="MySQL" charactersToReplace="abcdefghijklmnopqrstuvwxyzçâêîôûéèùïöüABCDEFGHIJKLMNOPQRSTUVWXYZÇÂÊÎÔÛÉÈÙÏÖÜ0123456789" replacementCharacters="aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999"/>
          <charactersMapping xmi:id="_5rGi0H4eEei25uY0cniCVg" name="Characters mapping on Oracle" language="Oracle" charactersToReplace="abcdefghijklmnopqrstuvwxyzçâêîôûéèùïöüABCDEFGHIJKLMNOPQRSTUVWXYZÇÂÊÎÔÛÉÈÙÏÖÜ0123456789" replacementCharacters="aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999"/>
          <charactersMapping xmi:id="_5rGi0X4eEei25uY0cniCVg" name="Characters mapping on PostgreSQL" language="PostgreSQL" charactersToReplace="abcdefghijklmnopqrstuvwxyzçâêîôûéèùïöüABCDEFGHIJKLMNOPQRSTUVWXYZÇÂÊÎÔÛÉÈÙÏÖÜ0123456789" replacementCharacters="aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999"/>
          <charactersMapping xmi:id="_5rGi0n4eEei25uY0cniCVg" name="Characters mapping on Microsoft SQL Server" language="Microsoft SQL Server" charactersToReplace="abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789" replacementCharacters="aaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999"/>
          <charactersMapping xmi:id="_5rGi034eEei25uY0cniCVg" name="Characters mapping on DB2" language="DB2" charactersToReplace="abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789" replacementCharacters="aaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999"/>
          <charactersMapping xmi:id="_5rGi1H4eEei25uY0cniCVg" name="Characters mapping on AS/400" language="AS/400" charactersToReplace="abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789" replacementCharacters="aaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999"/>
          <charactersMapping xmi:id="_5rGi1X4eEei25uY0cniCVg" name="Characters mapping on Informix" language="Informix" charactersToReplace="abcdefghijklmnopqrstuvwxyzçâêîôûéèùïöüABCDEFGHIJKLMNOPQRSTUVWXYZÇÂÊÎÔÛÉÈÙÏÖÜ0123456789" replacementCharacters="aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999"/>
          <charactersMapping xmi:id="_5rGi1n4eEei25uY0cniCVg" name="Characters mapping on Teradata" language="Teradata" charactersToReplace="abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789" replacementCharacters="aaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999"/>
          <charactersMapping xmi:id="_5rGi134eEei25uY0cniCVg" name="Characters mapping on Vertica" language="Vertica Database" charactersToReplace="abcdefghijklmnopqrstuvwxyzçâêîôûéèùïöüABCDEFGHIJKLMNOPQRSTUVWXYZÇÂÊÎÔÛÉÈÙÏÖÜ0123456789" replacementCharacters="aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999"/>
          <charactersMapping xmi:id="_5rGi2H4eEei25uY0cniCVg" language="Netezza" charactersToReplace="abcdefghijklmnopqrstuvwxyzçâêîôûéèùïöüABCDEFGHIJKLMNOPQRSTUVWXYZÇÂÊÎÔÛÉÈÙÏÖÜ0123456789" replacementCharacters="aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999"/>
          <charactersMapping xmi:id="_5rGi2X4eEei25uY0cniCVg" name="Characters mapping on Hive" language="Hive" charactersToReplace="0123456789abcdefghijklmnopqrstuvwxyz?aê???éèù??üABCDEFGHIJKLMNOPQRSTUVWXYZ??ê???éèù??ü" replacementCharacters="9999999999aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:SoundexFreqIndicator" xmi:id="_5WoHkn4eEei25uY0cniCVg" count="1901" computed="true" distinctValueCount="1" valueToFreq="ACED0005737200116A6176612E7574696C2E486173684D61700507DAC1C31660D103000246000A6C6F6164466163746F724900097468726573686F6C6478703F4000000000000C77080000001000000001740001387372000E6A6176612E6C616E672E4C6F6E673B8BE490CC8F23DF0200014A000576616C7565787200106A6176612E6C616E672E4E756D62657286AC951D0B94E08B0200007870000000000000076D78" valueToDistinctFreq="ACED0005737200116A6176612E7574696C2E486173684D61700507DAC1C31660D103000246000A6C6F6164466163746F724900097468726573686F6C6478703F4000000000000C77080000001000000001740001387372000E6A6176612E6C616E672E4C6F6E673B8BE490CC8F23DF0200014A000576616C7565787200106A6176612E6C616E672E4E756D62657286AC951D0B94E08B0200007870000000000000000F78">
        <parameters xmi:id="_5WoHk34eEei25uY0cniCVg"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om768X4IEei25uY0cniCVg"/>
        <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Soundex/Soundex_Frequency_Table_0.1.definition#_VGep4Pa7Ed24-N3PsP_o-w"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_50UwMX4eEei25uY0cniCVg" body="SELECT * FROM (SELECT MAX(&quot;MERCHANT_TYPE_ID&quot;), SOUNDEX(&quot;MERCHANT_TYPE_ID&quot;), COUNT(*) c, COUNT(DISTINCT &quot;MERCHANT_TYPE_ID&quot;) d FROM &quot;ORACLE&quot;.&quot;MERCHANT_TABLE&quot; t  GROUP BY SOUNDEX(&quot;MERCHANT_TYPE_ID&quot;) ORDER BY d DESC,c DESC) WHERE ROWNUM &lt;= 10" language="Oracle"/>
        <builtInIndicatorDefinition xmi:id="_5rJmEH4eEei25uY0cniCVg" name="Soundex Frequency Table" label="Soundex Frequency Table">
          <taggedValue xmi:id="_5rJmEX4eEei25uY0cniCVg" tag="Description" value="counts the number of records for each record with a distinct soundex"/>
          <taggedValue xmi:id="_5rJmEn4eEei25uY0cniCVg" tag="Purpose" value="evaluates the most frequent records with respect to their soundex value"/>
          <sqlGenericExpression xmi:id="_5rJmE34eEei25uY0cniCVg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>), COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SOUNDEX(&lt;%=__COLUMN_NAMES__%>) ORDER BY d DESC,c DESC" language="SQL"/>
          <sqlGenericExpression xmi:id="_5rJmFH4eEei25uY0cniCVg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>) , COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY 2 ORDER BY d DESC,c DESC" language="MySQL"/>
          <sqlGenericExpression xmi:id="_5rJmFX4eEei25uY0cniCVg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>), COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SOUNDEX(&lt;%=__COLUMN_NAMES__%>) ORDER BY d DESC,c DESC" language="Oracle"/>
          <sqlGenericExpression xmi:id="_5rJmFn4eEei25uY0cniCVg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>),  COUNT(*), COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SOUNDEX(&lt;%=__COLUMN_NAMES__%>) ORDER BY COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) DESC , COUNT(*) DESC" language="PostgreSQL"/>
          <sqlGenericExpression xmi:id="_5rJmF34eEei25uY0cniCVg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>), COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SOUNDEX(&lt;%=__COLUMN_NAMES__%>) ORDER BY d DESC,c DESC" language="DB2"/>
          <sqlGenericExpression xmi:id="_5rJmGH4eEei25uY0cniCVg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>), COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SOUNDEX(&lt;%=__COLUMN_NAMES__%>) ORDER BY d DESC,c DESC" language="Teradata"/>
          <sqlGenericExpression xmi:id="_5rJmGX4eEei25uY0cniCVg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>), COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SOUNDEX(&lt;%=__COLUMN_NAMES__%>) ORDER BY d DESC,c DESC" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_5rJmGn4eEei25uY0cniCVg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>) , COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY 2 ORDER BY d DESC,c DESC" language="Informix"/>
          <sqlGenericExpression xmi:id="_5rJmG34eEei25uY0cniCVg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>) , COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY 2 ORDER BY d DESC,c DESC" language="Ingres"/>
          <sqlGenericExpression xmi:id="_5rJmHH4eEei25uY0cniCVg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), NYSIIS(&lt;%=__COLUMN_NAMES__%>) , COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY 2 ORDER BY d DESC,c DESC" language="Netezza"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RowCountIndicator" xmi:id="_5Wrx8n4eEei25uY0cniCVg" count="1901" computed="true">
        <parameters xmi:id="_5Wrx834eEei25uY0cniCVg"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om769X4IEei25uY0cniCVg"/>
        <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Row_Count_0.1.definition#_ccFOkBF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_50TiEX4eEei25uY0cniCVg" body="SELECT COUNT(*) FROM &quot;ORACLE&quot;.&quot;MERCHANT_TABLE&quot; " language="Oracle"/>
        <builtInIndicatorDefinition xmi:id="_5rMpYH4eEei25uY0cniCVg" name="Row Count" label="Row Count">
          <taggedValue xmi:id="_5rMpYX4eEei25uY0cniCVg" tag="Description" value="counts the number of rows"/>
          <taggedValue xmi:id="_5rMpYn4eEei25uY0cniCVg" tag="Purpose" value="evaluates the number of records"/>
          <sqlGenericExpression xmi:id="_5rMpY34eEei25uY0cniCVg" body="SELECT COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:NullCountIndicator" xmi:id="_5Wrx9H4eEei25uY0cniCVg" count="1901" computed="true">
        <parameters xmi:id="_5Wrx9X4eEei25uY0cniCVg"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om769X4IEei25uY0cniCVg"/>
        <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Null_Count_0.1.definition#_GrAeADh9Ed2XmO7pl5Yuyg"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_50UwMn4eEei25uY0cniCVg" body="SELECT COUNT(*) FROM &quot;ORACLE&quot;.&quot;MERCHANT_TABLE&quot; WHERE &quot;MERCHANT_ID&quot; IS NULL " language="Oracle"/>
        <builtInIndicatorDefinition xmi:id="_5rPssH4eEei25uY0cniCVg" name="Null Count" label="Null Count">
          <taggedValue xmi:id="_5rPssX4eEei25uY0cniCVg" tag="Purpose" value="evaluate the number of missing data (null records)"/>
          <taggedValue xmi:id="_5rPssn4eEei25uY0cniCVg" tag="Description" value="counts the number of null rows"/>
          <sqlGenericExpression xmi:id="_5rPss34eEei25uY0cniCVg" body="SELECT COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE &lt;%=__COLUMN_NAMES__%> IS NULL &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:DistinctCountIndicator" xmi:id="_5Wrx9n4eEei25uY0cniCVg" count="1901" computed="true" distinctValueCount="1901">
        <parameters xmi:id="_5Wrx934eEei25uY0cniCVg"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om769X4IEei25uY0cniCVg"/>
        <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Distinct_Count_0.1.definition#_ccHq0BF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_50UwM34eEei25uY0cniCVg" body="SELECT COUNT(*) FROM (SELECT DISTINCT &quot;MERCHANT_ID&quot; FROM &quot;ORACLE&quot;.&quot;MERCHANT_TABLE&quot; ) A" language="Oracle"/>
        <builtInIndicatorDefinition xmi:id="_5rSwAH4eEei25uY0cniCVg" name="Distinct Count" label="Distinct Count">
          <taggedValue xmi:id="_5rSwAX4eEei25uY0cniCVg" tag="Description" value="counts the number of distinct rows (like a &quot;SELECT DISTINCT&quot; SQL statement)"/>
          <taggedValue xmi:id="_5rSwAn4eEei25uY0cniCVg" tag="Purpose" value="evaluates the number of distinct records"/>
          <sqlGenericExpression xmi:id="_5rSwA34eEei25uY0cniCVg" body="SELECT COUNT(*) FROM (SELECT DISTINCT &lt;%=__COLUMN_NAMES__%> FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>) A" language="SQL"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:UniqueCountIndicator" xmi:id="_5Wrx-H4eEei25uY0cniCVg" count="1901" computed="true" uniqueValueCount="1901">
        <parameters xmi:id="_5Wrx-X4eEei25uY0cniCVg"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om769X4IEei25uY0cniCVg"/>
        <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Unique_Count_0.1.definition#_ccHq0RF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_50UwNH4eEei25uY0cniCVg" body="SELECT COUNT(*) FROM (SELECT &quot;MERCHANT_ID&quot;, COUNT(*) FROM &quot;ORACLE&quot;.&quot;MERCHANT_TABLE&quot;  GROUP BY &quot;MERCHANT_ID&quot; HAVING COUNT(*) = 1) myquery" language="Oracle"/>
        <builtInIndicatorDefinition xmi:id="_5rVzUH4eEei25uY0cniCVg" name="Unique Count" label="Unique Count">
          <taggedValue xmi:id="_5rVzUX4eEei25uY0cniCVg" tag="Description" value="counts the number of unique rows (i.e. distinct rows with only one instance: rows that are not duplicated)"/>
          <taggedValue xmi:id="_5rVzUn4eEei25uY0cniCVg" tag="Purpose" value="evaluates the number of unique records"/>
          <sqlGenericExpression xmi:id="_5rVzU34eEei25uY0cniCVg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) AS myquery" language="SQL"/>
          <sqlGenericExpression xmi:id="_5rVzVH4eEei25uY0cniCVg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount = 1) AS myquery" language="MySQL"/>
          <sqlGenericExpression xmi:id="_5rVzVX4eEei25uY0cniCVg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) myquery" language="Oracle"/>
          <sqlGenericExpression xmi:id="_5rVzVn4eEei25uY0cniCVg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount = 1) AS myquery" language="Teradata"/>
          <sqlGenericExpression xmi:id="_5rVzV34eEei25uY0cniCVg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) AS myquery" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_5rVzWH4eEei25uY0cniCVg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) AS myquery" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
          <sqlGenericExpression xmi:id="_5rVzWX4eEei25uY0cniCVg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1)  myquery" language="Hive" version=""/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:DuplicateCountIndicator" xmi:id="_5Wrx-n4eEei25uY0cniCVg" count="1901" computed="true" duplicateValueCount="0">
        <parameters xmi:id="_5Wrx-34eEei25uY0cniCVg"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om769X4IEei25uY0cniCVg"/>
        <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Duplicate_Count_0.1.definition#_ccHq0hF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_50UwNX4eEei25uY0cniCVg" body="SELECT COUNT(*) FROM (SELECT &quot;MERCHANT_ID&quot;, COUNT(*) mycount FROM &quot;ORACLE&quot;.&quot;MERCHANT_TABLE&quot;  m  GROUP BY &quot;MERCHANT_ID&quot; HAVING COUNT(*) > 1) myquery" language="Oracle"/>
        <builtInIndicatorDefinition xmi:id="_5rZdsH4eEei25uY0cniCVg" name="Duplicate Count" label="Duplicate Count">
          <taggedValue xmi:id="_5rZdsX4eEei25uY0cniCVg" tag="Description" value="counts the number of duplicate rows. This number and the number of unique data equals the number of distinct rows"/>
          <taggedValue xmi:id="_5rZdsn4eEei25uY0cniCVg" tag="Purpose" value="evaluates the number of duplicated records"/>
          <sqlGenericExpression xmi:id="_5rZds34eEei25uY0cniCVg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) AS myquery" language="SQL"/>
          <sqlGenericExpression xmi:id="_5rZdtH4eEei25uY0cniCVg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount > 1) AS myquery" language="MySQL"/>
          <sqlGenericExpression xmi:id="_5rZdtX4eEei25uY0cniCVg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) myquery" language="Oracle"/>
          <sqlGenericExpression xmi:id="_5rZdtn4eEei25uY0cniCVg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount > 1) AS myquery" language="Teradata"/>
          <sqlGenericExpression xmi:id="_5rZdt34eEei25uY0cniCVg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) myquery" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_5rZduH4eEei25uY0cniCVg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) AS myquery" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
          <sqlGenericExpression xmi:id="_5rZduX4eEei25uY0cniCVg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) myquery" language="Hive"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:BlankCountIndicator" xmi:id="_5Wrx_H4eEei25uY0cniCVg" count="1901" computed="true">
        <parameters xmi:id="_5Wrx_X4eEei25uY0cniCVg"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om769X4IEei25uY0cniCVg"/>
        <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Blank_Count_0.1.definition#_ccHq0xF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_50UwNn4eEei25uY0cniCVg" body="SELECT COUNT(&quot;MERCHANT_ID&quot;) FROM &quot;ORACLE&quot;.&quot;MERCHANT_TABLE&quot;  WHERE TRIM(&quot;MERCHANT_ID&quot;) IS NULL " language="Oracle"/>
        <builtInIndicatorDefinition xmi:id="_5rchAH4eEei25uY0cniCVg" name="Blank Count" label="Blank Count">
          <taggedValue xmi:id="_5rchAX4eEei25uY0cniCVg" tag="Description" value="counts the number of blank rows. A blank is a non null textual data that contains only white spaces (or nothing). Note that Oracle does not distinguish between the empty string and the null value"/>
          <taggedValue xmi:id="_5rchAn4eEei25uY0cniCVg" tag="Purpose" value="evaluates the number of blank records"/>
          <sqlGenericExpression xmi:id="_5rchA34eEei25uY0cniCVg" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE TRIM(&lt;%=__COLUMN_NAMES__%>) = '' &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
          <sqlGenericExpression xmi:id="_5rchBH4eEei25uY0cniCVg" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE TRIM(&lt;%=__COLUMN_NAMES__%>) IS NULL &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
          <sqlGenericExpression xmi:id="_5rchBX4eEei25uY0cniCVg" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE LTRIM(RTRIM(&lt;%=__COLUMN_NAMES__%>)) = '' &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
          <sqlGenericExpression xmi:id="_5rchBn4eEei25uY0cniCVg" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE LTRIM(RTRIM(&lt;%=__COLUMN_NAMES__%>)) = '' &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_5rchB34eEei25uY0cniCVg" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> = '' or RTRIM(LTRIM(&lt;%=__COLUMN_NAMES__%>)) = '') &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:TextIndicator" xmi:id="_5Wrx_n4eEei25uY0cniCVg">
        <parameters xmi:id="_5Wrx_34eEei25uY0cniCVg"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om769X4IEei25uY0cniCVg"/>
        <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Text_Statistics_0.1.definition#_yb9x0zh8Ed2XmO7pl5Yuyg"/>
        <averageLengthIndicator xmi:id="_5WryAH4eEei25uY0cniCVg" count="1901" computed="true" sumLength="6497.0">
          <parameters xmi:id="_5WryAX4eEei25uY0cniCVg">
            <textParameter xmi:id="_5WryAn4eEei25uY0cniCVg" useBlank="false"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om769X4IEei25uY0cniCVg"/>
          <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Average_Length_0.1.definition#_ccIR4BF2Ed2PKb6nEJEvhw"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_50UwN34eEei25uY0cniCVg" body="SELECT SUM(LENGTH(&quot;MERCHANT_ID&quot;)), COUNT(&quot;MERCHANT_ID&quot;) FROM &quot;ORACLE&quot;.&quot;MERCHANT_TABLE&quot; WHERE (&quot;MERCHANT_ID&quot; IS NOT NULL ) AND (TRIM(NVL(&quot;MERCHANT_ID&quot;,'NULL TALEND')) IS NOT NULL) " language="Oracle"/>
          <builtInIndicatorDefinition xmi:id="_5rfkUH4eEei25uY0cniCVg" name="Average Length" label="Average Length">
            <taggedValue xmi:id="_5rfkUX4eEei25uY0cniCVg" tag="Description" value="computes the average length of the field. Does not take into account the null values when computing the average."/>
            <taggedValue xmi:id="_5rfkUn4eEei25uY0cniCVg" tag="Purpose" value="evaluates the average length of the textual record"/>
            <sqlGenericExpression xmi:id="_5rfkU34eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_5rfkVH4eEei25uY0cniCVg" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_5rfkVX4eEei25uY0cniCVg" body="SELECT SUM(LEN(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_5rfkVn4eEei25uY0cniCVg" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_5rfkV34eEei25uY0cniCVg" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_5rfkWH4eEei25uY0cniCVg" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_5rfkWX4eEei25uY0cniCVg" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_5rfkWn4eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_5rfkW34eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_5rfkXH4eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )), COUNT( &lt;%=__COLUMN_NAMES__%> ) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) AND ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_5rfkXX4eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_5rfkXn4eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
          </builtInIndicatorDefinition>
        </averageLengthIndicator>
        <maxLengthIndicator xmi:id="_5WryA34eEei25uY0cniCVg" computed="true" length="4">
          <parameters xmi:id="_5WryBH4eEei25uY0cniCVg">
            <textParameter xmi:id="_5WryBX4eEei25uY0cniCVg" useBlank="false"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om769X4IEei25uY0cniCVg"/>
          <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Maximal_Length_0.1.definition#_ccHq1RF2Ed2PKb6nEJEvhw"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_50UwOH4eEei25uY0cniCVg" body="SELECT MAX( LENGTH(&quot;MERCHANT_ID&quot;) ) FROM &quot;ORACLE&quot;.&quot;MERCHANT_TABLE&quot; WHERE (&quot;MERCHANT_ID&quot; IS NOT NULL ) AND (TRIM(NVL(&quot;MERCHANT_ID&quot;,'NULL TALEND')) IS NOT NULL) " language="Oracle"/>
          <builtInIndicatorDefinition xmi:id="_5rinoH4eEei25uY0cniCVg" name="Maximal Length" label="Maximal Length">
            <taggedValue xmi:id="_5rinoX4eEei25uY0cniCVg" tag="Description" value="computes the maximal length of a text field."/>
            <taggedValue xmi:id="_5rinon4eEei25uY0cniCVg" tag="Purpose" value="evaluates the length of the longest textual record"/>
            <sqlGenericExpression xmi:id="_5rino34eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_5rinpH4eEei25uY0cniCVg" body="SELECT MAX( LENGTH(&lt;%=__COLUMN_NAMES__%>) ) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle" modificationDate=""/>
            <sqlGenericExpression xmi:id="_5rinpX4eEei25uY0cniCVg" body="SELECT MAX(LEN(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_5rinpn4eEei25uY0cniCVg" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_5rinp34eEei25uY0cniCVg" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_5rinqH4eEei25uY0cniCVg" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_5rinqX4eEei25uY0cniCVg" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive" modificationDate=""/>
            <sqlGenericExpression xmi:id="_5rinqn4eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_5rinq34eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' )  &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_5rinrH4eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) AND ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_5rinrX4eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_5rinrn4eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
          </builtInIndicatorDefinition>
        </maxLengthIndicator>
        <minLengthIndicator xmi:id="_5WryBn4eEei25uY0cniCVg" computed="true" length="1">
          <parameters xmi:id="_5WryB34eEei25uY0cniCVg">
            <textParameter xmi:id="_5WryCH4eEei25uY0cniCVg" useBlank="false"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om769X4IEei25uY0cniCVg"/>
          <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Minimal_Length_0.1.definition#_ccHq1BF2Ed2PKb6nEJEvhw"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_50UwOX4eEei25uY0cniCVg" body="SELECT MIN( LENGTH(&quot;MERCHANT_ID&quot;) ) FROM &quot;ORACLE&quot;.&quot;MERCHANT_TABLE&quot; WHERE (&quot;MERCHANT_ID&quot; IS NOT NULL ) AND (TRIM(NVL(&quot;MERCHANT_ID&quot;,'NULL TALEND')) IS NOT NULL) " language="Oracle"/>
          <builtInIndicatorDefinition xmi:id="_5rlq8H4eEei25uY0cniCVg" name="Minimal Length" label="Minimal Length">
            <taggedValue xmi:id="_5rlq8X4eEei25uY0cniCVg" tag="Description" value="computes the minimal length of a text field. Does not take into account the null values when computing the minimal length."/>
            <taggedValue xmi:id="_5rlq8n4eEei25uY0cniCVg" tag="Purpose" value="evaluates the length of the smallest textual record"/>
            <sqlGenericExpression xmi:id="_5rlq834eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_5rlq9H4eEei25uY0cniCVg" body="SELECT MIN( LENGTH(&lt;%=__COLUMN_NAMES__%>) ) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_5rlq9X4eEei25uY0cniCVg" body="SELECT MIN(LEN(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_5rlq9n4eEei25uY0cniCVg" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_5rlq934eEei25uY0cniCVg" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_5rlq-H4eEei25uY0cniCVg" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_5rlq-X4eEei25uY0cniCVg" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_5rlq-n4eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_5rlq-34eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_5rlq_H4eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) AND ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_5rlq_X4eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (1=1) AND (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_5rlq_n4eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
          </builtInIndicatorDefinition>
        </minLengthIndicator>
        <minLengthWithBlankIndicator xmi:id="_5WryCX4eEei25uY0cniCVg" computed="true" length="1">
          <parameters xmi:id="_5WryCn4eEei25uY0cniCVg">
            <textParameter xmi:id="_5WryC34eEei25uY0cniCVg"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om769X4IEei25uY0cniCVg"/>
          <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Minimal_Length_With_Blank_0.1.definition#_G4EzQZU9Ed-Y15ulK_jijQ"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_50VXQ34eEei25uY0cniCVg" body="SELECT MIN( LENGTH(&quot;MERCHANT_ID&quot;) ) FROM &quot;ORACLE&quot;.&quot;MERCHANT_TABLE&quot; WHERE (&quot;MERCHANT_ID&quot; IS NOT NULL ) " language="Oracle"/>
          <builtInIndicatorDefinition xmi:id="_5r6bEH4eEei25uY0cniCVg" name="Minimal Length With Blank" label="Minimal Length With Blank">
            <taggedValue xmi:id="_5r6bEX4eEei25uY0cniCVg" tag="Description" value="computes the minimal length of a text field, counting blank as zero length values."/>
            <taggedValue xmi:id="_5r6bEn4eEei25uY0cniCVg" tag="Purpose" value="evaluates the length of the smallest textual record"/>
            <sqlGenericExpression xmi:id="_5r6bE34eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_5r6bFH4eEei25uY0cniCVg" body="SELECT MIN( LENGTH(&lt;%=__COLUMN_NAMES__%>) ) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_5r6bFX4eEei25uY0cniCVg" body="SELECT MIN(LEN(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_5r6bFn4eEei25uY0cniCVg" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_5r6bF34eEei25uY0cniCVg" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_5r6bGH4eEei25uY0cniCVg" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_5r6bGX4eEei25uY0cniCVg" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_5r6bGn4eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_5r6bG34eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_5r6bHH4eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_5r6bHX4eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
          </builtInIndicatorDefinition>
        </minLengthWithBlankIndicator>
        <minLengthWithNullIndicator xmi:id="_5WryDH4eEei25uY0cniCVg" computed="true" length="1">
          <parameters xmi:id="_5WryDX4eEei25uY0cniCVg">
            <textParameter xmi:id="_5WryDn4eEei25uY0cniCVg" useBlank="false" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om769X4IEei25uY0cniCVg"/>
          <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Minimal_Length_With_Null_0.1.definition#_a4KsoI1qEd-xwI2imLgHRA"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_50VXRH4eEei25uY0cniCVg" body="SELECT MIN(CASE WHEN &quot;MERCHANT_ID&quot; IS NULL THEN 0 ELSE LENGTH(&quot;MERCHANT_ID&quot;) END) FROM &quot;ORACLE&quot;.&quot;MERCHANT_TABLE&quot; WHERE (TRIM(NVL(&quot;MERCHANT_ID&quot;,'NULL TALEND')) IS NOT NULL) " language="Oracle"/>
          <builtInIndicatorDefinition xmi:id="_5r9eYH4eEei25uY0cniCVg" name="Minimal Length With Null" label="Minimal Length With Null">
            <taggedValue xmi:id="_5r9eYX4eEei25uY0cniCVg" tag="Description" value="computes the minimal length of a text field, counting null as zero length values."/>
            <taggedValue xmi:id="_5r9eYn4eEei25uY0cniCVg" tag="Purpose" value="evaluates the length of the smallest textual record"/>
            <sqlGenericExpression xmi:id="_5r9eY34eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_5r9eZH4eEei25uY0cniCVg" body="SELECT MIN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_5r9eZX4eEei25uY0cniCVg" body="SELECT MIN(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_5r9eZn4eEei25uY0cniCVg" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_5r9eZ34eEei25uY0cniCVg" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_5r9eaH4eEei25uY0cniCVg" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_5r9eaX4eEei25uY0cniCVg" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_5r9ean4eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_5r9ea34eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_5r9ebH4eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_5r9ebX4eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_5r9ebn4eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
          </builtInIndicatorDefinition>
        </minLengthWithNullIndicator>
        <minLengthWithBlankNullIndicator xmi:id="_5WryD34eEei25uY0cniCVg" computed="true" length="1">
          <parameters xmi:id="_5WryEH4eEei25uY0cniCVg">
            <textParameter xmi:id="_5WryEX4eEei25uY0cniCVg" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om769X4IEei25uY0cniCVg"/>
          <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Minimal_Length_With_Blank_and_Null_0.1.definition#_9HDjMJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_50VXRX4eEei25uY0cniCVg" body="SELECT MIN(CASE WHEN &quot;MERCHANT_ID&quot; IS NULL  THEN 0 ELSE LENGTH(&quot;MERCHANT_ID&quot;) END) FROM &quot;ORACLE&quot;.&quot;MERCHANT_TABLE&quot; " language="Oracle"/>
          <builtInIndicatorDefinition xmi:id="_5sAhsH4eEei25uY0cniCVg" name="Minimal Length With Blank and Null" label="Minimal Length With Blank and Null">
            <taggedValue xmi:id="_5sAhsX4eEei25uY0cniCVg" tag="Description" value="computes the minimal length of a text field, counting blank and null as zero length values."/>
            <taggedValue xmi:id="_5sAhsn4eEei25uY0cniCVg" tag="Purpose" value="evaluates the length of the smallest textual record"/>
            <sqlGenericExpression xmi:id="_5sAhs34eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_5sAhtH4eEei25uY0cniCVg" body="SELECT MIN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_5sAhtX4eEei25uY0cniCVg" body="SELECT MIN(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_5sAhtn4eEei25uY0cniCVg" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_5sAht34eEei25uY0cniCVg" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_5sAhuH4eEei25uY0cniCVg" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_5sAhuX4eEei25uY0cniCVg" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_5sAhun4eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_5sAhu34eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_5sAhvH4eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END )) FROM  &lt;%=__TABLE_NAME__%>   &lt;%=__WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_5sAhvX4eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_5sAhvn4eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Netezza"/>
          </builtInIndicatorDefinition>
        </minLengthWithBlankNullIndicator>
        <maxLengthWithBlankIndicator xmi:id="_5WryEn4eEei25uY0cniCVg" computed="true" length="4">
          <parameters xmi:id="_5WryE34eEei25uY0cniCVg">
            <textParameter xmi:id="_5WryFH4eEei25uY0cniCVg"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om769X4IEei25uY0cniCVg"/>
          <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Maximal_Length_With_Blank_0.1.definition#_-xmZcJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_50VXQH4eEei25uY0cniCVg" body="SELECT MAX( LENGTH(&quot;MERCHANT_ID&quot;) ) FROM &quot;ORACLE&quot;.&quot;MERCHANT_TABLE&quot; WHERE (&quot;MERCHANT_ID&quot; IS NOT NULL ) " language="Oracle"/>
          <builtInIndicatorDefinition xmi:id="_5rxRIH4eEei25uY0cniCVg" name="Maximal Length With Blank" label="Maximal Length With Blank">
            <taggedValue xmi:id="_5rxRIX4eEei25uY0cniCVg" tag="Description" value="computes the maximal length of a text field, counting blank data  as zero length values."/>
            <taggedValue xmi:id="_5rxRIn4eEei25uY0cniCVg" tag="Purpose" value="evaluates the length of the longest textual record"/>
            <sqlGenericExpression xmi:id="_5rxRI34eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_5rxRJH4eEei25uY0cniCVg" body="SELECT MAX( LENGTH(&lt;%=__COLUMN_NAMES__%>) ) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_5rxRJX4eEei25uY0cniCVg" body="SELECT MAX(LEN(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_5rxRJn4eEei25uY0cniCVg" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_5rxRJ34eEei25uY0cniCVg" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_5rxRKH4eEei25uY0cniCVg" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_5rxRKX4eEei25uY0cniCVg" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_5rxRKn4eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_5rxRK34eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_5rxRLH4eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_5rxRLX4eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
          </builtInIndicatorDefinition>
        </maxLengthWithBlankIndicator>
        <maxLengthWithNullIndicator xmi:id="_5WryFX4eEei25uY0cniCVg" computed="true" length="4">
          <parameters xmi:id="_5WryFn4eEei25uY0cniCVg">
            <textParameter xmi:id="_5WryF34eEei25uY0cniCVg" useBlank="false" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om769X4IEei25uY0cniCVg"/>
          <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Maximal_Length_With_Null_0.1.definition#_-_UFUJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_50VXQX4eEei25uY0cniCVg" body="SELECT MAX(CASE WHEN &quot;MERCHANT_ID&quot; IS NULL THEN 0 ELSE LENGTH(&quot;MERCHANT_ID&quot;) END) FROM &quot;ORACLE&quot;.&quot;MERCHANT_TABLE&quot; WHERE (TRIM(NVL(&quot;MERCHANT_ID&quot;,'NULL TALEND')) IS NOT NULL) " language="Oracle"/>
          <builtInIndicatorDefinition xmi:id="_5r0UcH4eEei25uY0cniCVg" name="Maximal Length With Null" label="Maximal Length With Null">
            <taggedValue xmi:id="_5r0UcX4eEei25uY0cniCVg" tag="Description" value="computes the maximal length of a text field, counting null data as zero length values."/>
            <taggedValue xmi:id="_5r0Ucn4eEei25uY0cniCVg" tag="Purpose" value="evaluates the length of the longest textual record"/>
            <sqlGenericExpression xmi:id="_5r0Uc34eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_5r0UdH4eEei25uY0cniCVg" body="SELECT MAX(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_5r0UdX4eEei25uY0cniCVg" body="SELECT MAX(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_5r0Udn4eEei25uY0cniCVg" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_5r0Ud34eEei25uY0cniCVg" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_5r0UeH4eEei25uY0cniCVg" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_5r0UeX4eEei25uY0cniCVg" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive" version=""/>
            <sqlGenericExpression xmi:id="_5r0Uen4eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_5r0Ue34eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_5r0UfH4eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_5r0UfX4eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_5r0Ufn4eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
          </builtInIndicatorDefinition>
        </maxLengthWithNullIndicator>
        <maxLengthWithBlankNullIndicator xmi:id="_5WryGH4eEei25uY0cniCVg" computed="true" length="4">
          <parameters xmi:id="_5WryGX4eEei25uY0cniCVg">
            <textParameter xmi:id="_5WryGn4eEei25uY0cniCVg" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om769X4IEei25uY0cniCVg"/>
          <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Maximal_Length_With_Blank_and_Null_0.1.definition#_-hzp8JSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_50VXQn4eEei25uY0cniCVg" body="SELECT MAX(CASE WHEN &quot;MERCHANT_ID&quot; IS NULL  THEN 0 ELSE LENGTH(&quot;MERCHANT_ID&quot;) END) FROM &quot;ORACLE&quot;.&quot;MERCHANT_TABLE&quot; " language="Oracle"/>
          <builtInIndicatorDefinition xmi:id="_5r3XwH4eEei25uY0cniCVg" name="Maximal Length With Blank and Null" label="Maximal Length With Blank and Null">
            <taggedValue xmi:id="_5r3XwX4eEei25uY0cniCVg" tag="Description" value="computes the maximal length of a text field, counting null and blank data as zero length values."/>
            <taggedValue xmi:id="_5r3Xwn4eEei25uY0cniCVg" tag="Purpose" value="evaluates the length of the longest textual record"/>
            <sqlGenericExpression xmi:id="_5r3Xw34eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_5r3XxH4eEei25uY0cniCVg" body="SELECT MAX(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_5r3XxX4eEei25uY0cniCVg" body="SELECT MAX(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_5r3Xxn4eEei25uY0cniCVg" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_5r3Xx34eEei25uY0cniCVg" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_5r3XyH4eEei25uY0cniCVg" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_5r3XyX4eEei25uY0cniCVg" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_5r3Xyn4eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_5r3Xy34eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_5r3XzH4eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END )) FROM  &lt;%=__TABLE_NAME__%>   &lt;%=__WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_5r3XzX4eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_5r3Xzn4eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Netezza"/>
          </builtInIndicatorDefinition>
        </maxLengthWithBlankNullIndicator>
        <avgLengthWithBlankIndicator xmi:id="_5WryG34eEei25uY0cniCVg" count="1901" computed="true" sumLength="6497.0">
          <parameters xmi:id="_5WryHH4eEei25uY0cniCVg">
            <textParameter xmi:id="_5WryHX4eEei25uY0cniCVg"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om769X4IEei25uY0cniCVg"/>
          <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Average_Length_With_Blank_0.1.definition#__gPoIJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_50UwOn4eEei25uY0cniCVg" body="SELECT SUM(CASE WHEN &quot;MERCHANT_ID&quot; IS NOT NULL AND  TRIM(&quot;MERCHANT_ID&quot;) IS NULL THEN 0 ELSE  LENGTH(&quot;MERCHANT_ID&quot;)END), COUNT(*) FROM &quot;ORACLE&quot;.&quot;MERCHANT_TABLE&quot; WHERE (&quot;MERCHANT_ID&quot; IS NOT NULL ) " language="Oracle"/>
          <builtInIndicatorDefinition xmi:id="_5rouQH4eEei25uY0cniCVg" name="Average Length With Blank" label="Average Length With Blank">
            <taggedValue xmi:id="_5rouQX4eEei25uY0cniCVg" tag="Description" value="computes the average length of the field, counting blank data as zero length values."/>
            <taggedValue xmi:id="_5rouQn4eEei25uY0cniCVg" tag="Purpose" value="evaluates the average length of the textual record"/>
            <sqlGenericExpression xmi:id="_5rouQ34eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH(CASE WHEN   CHAR_LENGTH( TRIM(&lt;%=__COLUMN_NAMES__%>) ) =0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_5rouRH4eEei25uY0cniCVg" body="SELECT SUM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NOT NULL AND  TRIM(&lt;%=__COLUMN_NAMES__%>) IS NULL THEN 0 ELSE  LENGTH(&lt;%=__COLUMN_NAMES__%>)END), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_5rouRX4eEei25uY0cniCVg" body="SELECT SUM(LEN(CASE WHEN  LEN( LTRIM(RTRIM(&lt;%=__COLUMN_NAMES__%>)) )=0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_5rouRn4eEei25uY0cniCVg" body="SELECT SUM(LENGTH(CASE WHEN   LENGTH( TRIM(&lt;%=__COLUMN_NAMES__%>) ) =0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_5rouR34eEei25uY0cniCVg" body="SELECT SUM(LENGTH(CASE WHEN   LENGTH( TRIM(&lt;%=__COLUMN_NAMES__%>) ) =0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_5rouSH4eEei25uY0cniCVg" body="SELECT SUM(LENGTH(CASE WHEN   LENGTH( TRIM(&lt;%=__COLUMN_NAMES__%>) ) =0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_5rouSX4eEei25uY0cniCVg" body="SELECT SUM(LENGTH(CASE WHEN   LENGTH( TRIM(&lt;%=__COLUMN_NAMES__%>) ) =0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_5rouSn4eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( TRIM(&lt;%=__COLUMN_NAMES__%>) ) =0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_5rouS34eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( LTRIM(RTRIM(&lt;%=__COLUMN_NAMES__%>)) ) =0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_5rouTH4eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( TRIM( &lt;%=__COLUMN_NAMES__%> ) ) =0  THEN '' ELSE   &lt;%=__COLUMN_NAMES__%>  END)), COUNT(*) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_5rouTX4eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( TRIM(&lt;%=__COLUMN_NAMES__%>) ) =0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
          </builtInIndicatorDefinition>
        </avgLengthWithBlankIndicator>
        <avgLengthWithNullIndicator xmi:id="_5WryHn4eEei25uY0cniCVg" count="1901" computed="true" sumLength="6497.0">
          <parameters xmi:id="_5WryH34eEei25uY0cniCVg">
            <textParameter xmi:id="_5WryIH4eEei25uY0cniCVg" useBlank="false" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om769X4IEei25uY0cniCVg"/>
          <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Average_Length_With_Null_0.1.definition#__vI_wJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_50UwO34eEei25uY0cniCVg" body="SELECT SUM(CASE WHEN &quot;MERCHANT_ID&quot; IS NULL THEN 0 ELSE LENGTH(&quot;MERCHANT_ID&quot;) END), COUNT(*) FROM &quot;ORACLE&quot;.&quot;MERCHANT_TABLE&quot; WHERE (TRIM(NVL(&quot;MERCHANT_ID&quot;,'NULL TALEND')) IS NOT NULL) " language="Oracle"/>
          <builtInIndicatorDefinition xmi:id="_5rrxkH4eEei25uY0cniCVg" name="Average Length With Null" label="Average Length With Null">
            <taggedValue xmi:id="_5rrxkX4eEei25uY0cniCVg" tag="Description" value="computes the average length of the field, counting null data as zero length values."/>
            <taggedValue xmi:id="_5rrxkn4eEei25uY0cniCVg" tag="Purpose" value="evaluates the average length of the textual record"/>
            <sqlGenericExpression xmi:id="_5rrxk34eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_5rrxlH4eEei25uY0cniCVg" body="SELECT SUM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_5rrxlX4eEei25uY0cniCVg" body="SELECT SUM(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_5rrxln4eEei25uY0cniCVg" body="SELECT SUM(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_5rrxl34eEei25uY0cniCVg" body="SELECT SUM(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_5rrxmH4eEei25uY0cniCVg" body="SELECT SUM(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_5rrxmX4eEei25uY0cniCVg" body="SELECT SUM(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_5rrxmn4eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_5rrxm34eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_5rrxnH4eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_5rrxnX4eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_5rrxnn4eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
          </builtInIndicatorDefinition>
        </avgLengthWithNullIndicator>
        <avgLengthWithBlankNullIndicator xmi:id="_5WryIX4eEei25uY0cniCVg" count="1901" computed="true" sumLength="6497.0">
          <parameters xmi:id="_5WryIn4eEei25uY0cniCVg">
            <textParameter xmi:id="_5WryI34eEei25uY0cniCVg" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om769X4IEei25uY0cniCVg"/>
          <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Average_Length_With_Blank_and_Null_0.1.definition#__TbUIJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_50UwPH4eEei25uY0cniCVg" body="SELECT SUM(CASE WHEN &quot;MERCHANT_ID&quot; IS NOT NULL AND  TRIM(&quot;MERCHANT_ID&quot;) IS NULL THEN 0 ELSE CASE WHEN &quot;MERCHANT_ID&quot; IS NULL THEN 0 ELSE LENGTH(&quot;MERCHANT_ID&quot;) END  END), COUNT(*) FROM &quot;ORACLE&quot;.&quot;MERCHANT_TABLE&quot; " language="Oracle"/>
          <builtInIndicatorDefinition xmi:id="_5ru04H4eEei25uY0cniCVg" name="Average Length With Blank and Null" label="Average Length With Blank and Null">
            <taggedValue xmi:id="_5ru04X4eEei25uY0cniCVg" tag="Description" value="computes the average length of the field, counting blank and null data as zero lenght values."/>
            <taggedValue xmi:id="_5ru04n4eEei25uY0cniCVg" tag="Purpose" value="evaluates the average length of the textual record"/>
            <sqlGenericExpression xmi:id="_5ru0434eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH(CASE WHEN   CHAR_LENGTH( TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'')) ) =0  THEN '' ELSE  IFNULL(&lt;%=__COLUMN_NAMES__%>,'') END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_5ru05H4eEei25uY0cniCVg" body="SELECT SUM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NOT NULL AND  TRIM(&lt;%=__COLUMN_NAMES__%>) IS NULL THEN 0 ELSE CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END  END), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_5ru05X4eEei25uY0cniCVg" body="SELECT SUM(LEN(CASE WHEN  LEN( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) )=0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_5ru05n4eEei25uY0cniCVg" body="SELECT SUM(LENGTH(CASE WHEN   LENGTH( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END ) ) =0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_5ru0534eEei25uY0cniCVg" body="SELECT SUM(LENGTH(CASE WHEN   LENGTH( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END ) ) =0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_5ru06H4eEei25uY0cniCVg" body="SELECT SUM(LENGTH(CASE WHEN   LENGTH( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END ) ) =0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_5ru06X4eEei25uY0cniCVg" body="SELECT SUM(LENGTH(CASE WHEN   LENGTH( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END ) ) =0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_5ru06n4eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END ) ) =0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_5ru0634eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) ) =0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_5ru07H4eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END ) ) =0  THEN '' ELSE   CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END  END)), COUNT(*) FROM  &lt;%=__TABLE_NAME__%>   &lt;%=__WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_5ru07X4eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END ) ) =0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_5ru07n4eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH(CASE WHEN   CHAR_LENGTH( TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'')) ) =0  THEN '' ELSE  ISNULL(&lt;%=__COLUMN_NAMES__%>,'') END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Netezza"/>
          </builtInIndicatorDefinition>
        </avgLengthWithBlankNullIndicator>
      </indicators>
      <indicators xsi:type="dataquality.indicators:PatternFreqIndicator" xmi:id="_5WryJH4eEei25uY0cniCVg" count="1901" computed="true" distinctValueCount="4" valueToFreq="ACED0005737200116A6176612E7574696C2E486173684D61700507DAC1C31660D103000246000A6C6F6164466163746F724900097468726573686F6C6478703F4000000000000C7708000000100000000474000239397372000E6A6176612E6C616E672E4C6F6E673B8BE490CC8F23DF0200014A000576616C7565787200106A6176612E6C616E672E4E756D62657286AC951D0B94E08B0200007870000000000000005A7400033939397371007E00030000000000000384740001397371007E00030000000000000009740004393939397371007E0003000000000000038678">
        <parameters xmi:id="_5WryJX4eEei25uY0cniCVg"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om769X4IEei25uY0cniCVg"/>
        <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Pattern Frequency Statistics/Pattern_Frequency_Table_0.1.definition#_kQzTsJR-Ed2XO-JvLwVAwg"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_50VXRn4eEei25uY0cniCVg" body="SELECT * FROM (SELECT TRANSLATE(&quot;MERCHANT_ID&quot; , 'abcdefghijklmnopqrstuvwxyzçâêîôûéèùïöüABCDEFGHIJKLMNOPQRSTUVWXYZÇÂÊÎÔÛÉÈÙÏÖÜ0123456789' , 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999'), COUNT(*) AS c FROM &quot;ORACLE&quot;.&quot;MERCHANT_TABLE&quot; t  GROUP BY TRANSLATE(&quot;MERCHANT_ID&quot; , 'abcdefghijklmnopqrstuvwxyzçâêîôûéèùïöüABCDEFGHIJKLMNOPQRSTUVWXYZÇÂÊÎÔÛÉÈÙÏÖÜ0123456789' , 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999') ORDER BY c DESC) WHERE ROWNUM &lt;= 10" language="Oracle"/>
        <builtInIndicatorDefinition xmi:id="_5sDlAH4eEei25uY0cniCVg" name="Pattern Frequency Table" label="Pattern Frequency Table">
          <taggedValue xmi:id="_5sDlAX4eEei25uY0cniCVg" tag="Description" value="counts the number of records for each distinct pattern"/>
          <taggedValue xmi:id="_5sDlAn4eEei25uY0cniCVg" tag="Purpose" value="evaluates the most frequent patterns"/>
          <sqlGenericExpression xmi:id="_5sDlA34eEei25uY0cniCVg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY c DESC" language="SQL"/>
          <sqlGenericExpression xmi:id="_5sDlBH4eEei25uY0cniCVg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY c DESC" language="MySQL"/>
          <sqlGenericExpression xmi:id="_5sDlBX4eEei25uY0cniCVg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) AS c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY c DESC" language="Oracle"/>
          <sqlGenericExpression xmi:id="_5sDlBn4eEei25uY0cniCVg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) AS c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY c DESC" language="PostgreSQL"/>
          <sqlGenericExpression xmi:id="_5sDlB34eEei25uY0cniCVg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY c DESC" language="DB2"/>
          <sqlGenericExpression xmi:id="_5sDlCH4eEei25uY0cniCVg" body="SELECT &lt;%=__COLUMN_NAMES__%> , COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY c DESC" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_5sDlCX4eEei25uY0cniCVg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) AS c FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY c DESC" language="Informix"/>
          <sqlGenericExpression xmi:id="_5sDlCn4eEei25uY0cniCVg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY c DESC" language="AS/400"/>
          <sqlGenericExpression xmi:id="_5sDlC34eEei25uY0cniCVg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY c DESC" language="Teradata"/>
          <sqlGenericExpression xmi:id="_5sDlDH4eEei25uY0cniCVg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) AS c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY c DESC" language="Vertica Database"/>
          <sqlGenericExpression xmi:id="_5sDlDX4eEei25uY0cniCVg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) AS c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY c DESC" language="Netezza"/>
          <charactersMapping xmi:id="_5sDlDn4eEei25uY0cniCVg" language="SQL" charactersToReplace="abcdefghijklmnopqrstuvwxyzçâêîôûéèùïöüABCDEFGHIJKLMNOPQRSTUVWXYZÇÂÊÎÔÛÉÈÙÏÖÜ0123456789" replacementCharacters="aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999"/>
          <charactersMapping xmi:id="_5sDlD34eEei25uY0cniCVg" name="Characters mapping on MySQL" language="MySQL" charactersToReplace="abcdefghijklmnopqrstuvwxyzçâêîôûéèùïöüABCDEFGHIJKLMNOPQRSTUVWXYZÇÂÊÎÔÛÉÈÙÏÖÜ0123456789" replacementCharacters="aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999"/>
          <charactersMapping xmi:id="_5sDlEH4eEei25uY0cniCVg" name="Characters mapping on Oracle" language="Oracle" charactersToReplace="abcdefghijklmnopqrstuvwxyzçâêîôûéèùïöüABCDEFGHIJKLMNOPQRSTUVWXYZÇÂÊÎÔÛÉÈÙÏÖÜ0123456789" replacementCharacters="aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999"/>
          <charactersMapping xmi:id="_5sDlEX4eEei25uY0cniCVg" name="Characters mapping on PostgreSQL" language="PostgreSQL" charactersToReplace="abcdefghijklmnopqrstuvwxyzçâêîôûéèùïöüABCDEFGHIJKLMNOPQRSTUVWXYZÇÂÊÎÔÛÉÈÙÏÖÜ0123456789" replacementCharacters="aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999"/>
          <charactersMapping xmi:id="_5sDlEn4eEei25uY0cniCVg" name="Characters mapping on Microsoft SQL Server" language="Microsoft SQL Server" charactersToReplace="abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789" replacementCharacters="aaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999"/>
          <charactersMapping xmi:id="_5sDlE34eEei25uY0cniCVg" name="Characters mapping on DB2" language="DB2" charactersToReplace="abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789" replacementCharacters="aaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999"/>
          <charactersMapping xmi:id="_5sDlFH4eEei25uY0cniCVg" name="Characters mapping on AS/400" language="AS/400" charactersToReplace="abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789" replacementCharacters="aaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999"/>
          <charactersMapping xmi:id="_5sDlFX4eEei25uY0cniCVg" name="Characters mapping on Informix" language="Informix" charactersToReplace="abcdefghijklmnopqrstuvwxyzçâêîôûéèùïöüABCDEFGHIJKLMNOPQRSTUVWXYZÇÂÊÎÔÛÉÈÙÏÖÜ0123456789" replacementCharacters="aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999"/>
          <charactersMapping xmi:id="_5sDlFn4eEei25uY0cniCVg" name="Characters mapping on Teradata" language="Teradata" charactersToReplace="abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789" replacementCharacters="aaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999"/>
          <charactersMapping xmi:id="_5sDlF34eEei25uY0cniCVg" name="Characters mapping on Vertica" language="Vertica Database" charactersToReplace="abcdefghijklmnopqrstuvwxyzçâêîôûéèùïöüABCDEFGHIJKLMNOPQRSTUVWXYZÇÂÊÎÔÛÉÈÙÏÖÜ0123456789" replacementCharacters="aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999"/>
          <charactersMapping xmi:id="_5sDlGH4eEei25uY0cniCVg" language="Netezza" charactersToReplace="abcdefghijklmnopqrstuvwxyzçâêîôûéèùïöüABCDEFGHIJKLMNOPQRSTUVWXYZÇÂÊÎÔÛÉÈÙÏÖÜ0123456789" replacementCharacters="aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999"/>
          <charactersMapping xmi:id="_5sDlGX4eEei25uY0cniCVg" name="Characters mapping on Hive" language="Hive" charactersToReplace="0123456789abcdefghijklmnopqrstuvwxyz?aê???éèù??üABCDEFGHIJKLMNOPQRSTUVWXYZ??ê???éèù??ü" replacementCharacters="9999999999aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:SoundexFreqIndicator" xmi:id="_5WryJn4eEei25uY0cniCVg" count="1901" computed="true" distinctValueCount="1" valueToFreq="ACED0005737200116A6176612E7574696C2E486173684D61700507DAC1C31660D103000246000A6C6F6164466163746F724900097468726573686F6C6478703F4000000000000C770800000010000000017400033939397372000E6A6176612E6C616E672E4C6F6E673B8BE490CC8F23DF0200014A000576616C7565787200106A6176612E6C616E672E4E756D62657286AC951D0B94E08B0200007870000000000000076D78" valueToDistinctFreq="ACED0005737200116A6176612E7574696C2E486173684D61700507DAC1C31660D103000246000A6C6F6164466163746F724900097468726573686F6C6478703F4000000000000C770800000010000000017400033939397372000E6A6176612E6C616E672E4C6F6E673B8BE490CC8F23DF0200014A000576616C7565787200106A6176612E6C616E672E4E756D62657286AC951D0B94E08B0200007870000000000000076D78">
        <parameters xmi:id="_5WryJ34eEei25uY0cniCVg"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om769X4IEei25uY0cniCVg"/>
        <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Soundex/Soundex_Frequency_Table_0.1.definition#_VGep4Pa7Ed24-N3PsP_o-w"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_50VXR34eEei25uY0cniCVg" body="SELECT * FROM (SELECT MAX(&quot;MERCHANT_ID&quot;), SOUNDEX(&quot;MERCHANT_ID&quot;), COUNT(*) c, COUNT(DISTINCT &quot;MERCHANT_ID&quot;) d FROM &quot;ORACLE&quot;.&quot;MERCHANT_TABLE&quot; t  GROUP BY SOUNDEX(&quot;MERCHANT_ID&quot;) ORDER BY d DESC,c DESC) WHERE ROWNUM &lt;= 10" language="Oracle"/>
        <builtInIndicatorDefinition xmi:id="_5sGoUH4eEei25uY0cniCVg" name="Soundex Frequency Table" label="Soundex Frequency Table">
          <taggedValue xmi:id="_5sGoUX4eEei25uY0cniCVg" tag="Description" value="counts the number of records for each record with a distinct soundex"/>
          <taggedValue xmi:id="_5sGoUn4eEei25uY0cniCVg" tag="Purpose" value="evaluates the most frequent records with respect to their soundex value"/>
          <sqlGenericExpression xmi:id="_5sGoU34eEei25uY0cniCVg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>), COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SOUNDEX(&lt;%=__COLUMN_NAMES__%>) ORDER BY d DESC,c DESC" language="SQL"/>
          <sqlGenericExpression xmi:id="_5sGoVH4eEei25uY0cniCVg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>) , COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY 2 ORDER BY d DESC,c DESC" language="MySQL"/>
          <sqlGenericExpression xmi:id="_5sGoVX4eEei25uY0cniCVg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>), COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SOUNDEX(&lt;%=__COLUMN_NAMES__%>) ORDER BY d DESC,c DESC" language="Oracle"/>
          <sqlGenericExpression xmi:id="_5sGoVn4eEei25uY0cniCVg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>),  COUNT(*), COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SOUNDEX(&lt;%=__COLUMN_NAMES__%>) ORDER BY COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) DESC , COUNT(*) DESC" language="PostgreSQL"/>
          <sqlGenericExpression xmi:id="_5sGoV34eEei25uY0cniCVg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>), COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SOUNDEX(&lt;%=__COLUMN_NAMES__%>) ORDER BY d DESC,c DESC" language="DB2"/>
          <sqlGenericExpression xmi:id="_5sGoWH4eEei25uY0cniCVg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>), COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SOUNDEX(&lt;%=__COLUMN_NAMES__%>) ORDER BY d DESC,c DESC" language="Teradata"/>
          <sqlGenericExpression xmi:id="_5sGoWX4eEei25uY0cniCVg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>), COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SOUNDEX(&lt;%=__COLUMN_NAMES__%>) ORDER BY d DESC,c DESC" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_5sGoWn4eEei25uY0cniCVg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>) , COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY 2 ORDER BY d DESC,c DESC" language="Informix"/>
          <sqlGenericExpression xmi:id="_5sGoW34eEei25uY0cniCVg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>) , COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY 2 ORDER BY d DESC,c DESC" language="Ingres"/>
          <sqlGenericExpression xmi:id="_5sGoXH4eEei25uY0cniCVg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), NYSIIS(&lt;%=__COLUMN_NAMES__%>) , COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY 2 ORDER BY d DESC,c DESC" language="Netezza"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RowCountIndicator" xmi:id="_5WryKX4eEei25uY0cniCVg" count="1901" computed="true">
        <parameters xmi:id="_5WryKn4eEei25uY0cniCVg"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om76-X4IEei25uY0cniCVg"/>
        <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Row_Count_0.1.definition#_ccFOkBF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_50TiEn4eEei25uY0cniCVg" body="SELECT COUNT(*) FROM &quot;ORACLE&quot;.&quot;MERCHANT_TABLE&quot; " language="Oracle"/>
        <builtInIndicatorDefinition xmi:id="_5sJroH4eEei25uY0cniCVg" name="Row Count" label="Row Count">
          <taggedValue xmi:id="_5sJroX4eEei25uY0cniCVg" tag="Description" value="counts the number of rows"/>
          <taggedValue xmi:id="_5sJron4eEei25uY0cniCVg" tag="Purpose" value="evaluates the number of records"/>
          <sqlGenericExpression xmi:id="_5sJro34eEei25uY0cniCVg" body="SELECT COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:NullCountIndicator" xmi:id="_5WryK34eEei25uY0cniCVg" count="1901" computed="true">
        <parameters xmi:id="_5WryLH4eEei25uY0cniCVg"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om76-X4IEei25uY0cniCVg"/>
        <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Null_Count_0.1.definition#_GrAeADh9Ed2XmO7pl5Yuyg"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_50VXSH4eEei25uY0cniCVg" body="SELECT COUNT(*) FROM &quot;ORACLE&quot;.&quot;MERCHANT_TABLE&quot; WHERE &quot;MERCHANT_NAME&quot; IS NULL " language="Oracle"/>
        <builtInIndicatorDefinition xmi:id="_5sMu8H4eEei25uY0cniCVg" name="Null Count" label="Null Count">
          <taggedValue xmi:id="_5sMu8X4eEei25uY0cniCVg" tag="Purpose" value="evaluate the number of missing data (null records)"/>
          <taggedValue xmi:id="_5sMu8n4eEei25uY0cniCVg" tag="Description" value="counts the number of null rows"/>
          <sqlGenericExpression xmi:id="_5sMu834eEei25uY0cniCVg" body="SELECT COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE &lt;%=__COLUMN_NAMES__%> IS NULL &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:DistinctCountIndicator" xmi:id="_5WryLX4eEei25uY0cniCVg" count="1901" computed="true" distinctValueCount="1900">
        <parameters xmi:id="_5WryLn4eEei25uY0cniCVg"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om76-X4IEei25uY0cniCVg"/>
        <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Distinct_Count_0.1.definition#_ccHq0BF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_50VXSX4eEei25uY0cniCVg" body="SELECT COUNT(*) FROM (SELECT DISTINCT &quot;MERCHANT_NAME&quot; FROM &quot;ORACLE&quot;.&quot;MERCHANT_TABLE&quot; ) A" language="Oracle"/>
        <builtInIndicatorDefinition xmi:id="_5sPyQH4eEei25uY0cniCVg" name="Distinct Count" label="Distinct Count">
          <taggedValue xmi:id="_5sPyQX4eEei25uY0cniCVg" tag="Description" value="counts the number of distinct rows (like a &quot;SELECT DISTINCT&quot; SQL statement)"/>
          <taggedValue xmi:id="_5sPyQn4eEei25uY0cniCVg" tag="Purpose" value="evaluates the number of distinct records"/>
          <sqlGenericExpression xmi:id="_5sPyQ34eEei25uY0cniCVg" body="SELECT COUNT(*) FROM (SELECT DISTINCT &lt;%=__COLUMN_NAMES__%> FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>) A" language="SQL"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:UniqueCountIndicator" xmi:id="_5WryL34eEei25uY0cniCVg" count="1901" computed="true" uniqueValueCount="1899">
        <parameters xmi:id="_5WryMH4eEei25uY0cniCVg"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om76-X4IEei25uY0cniCVg"/>
        <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Unique_Count_0.1.definition#_ccHq0RF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_50VXSn4eEei25uY0cniCVg" body="SELECT COUNT(*) FROM (SELECT &quot;MERCHANT_NAME&quot;, COUNT(*) FROM &quot;ORACLE&quot;.&quot;MERCHANT_TABLE&quot;  GROUP BY &quot;MERCHANT_NAME&quot; HAVING COUNT(*) = 1) myquery" language="Oracle"/>
        <builtInIndicatorDefinition xmi:id="_5sS1kH4eEei25uY0cniCVg" name="Unique Count" label="Unique Count">
          <taggedValue xmi:id="_5sS1kX4eEei25uY0cniCVg" tag="Description" value="counts the number of unique rows (i.e. distinct rows with only one instance: rows that are not duplicated)"/>
          <taggedValue xmi:id="_5sS1kn4eEei25uY0cniCVg" tag="Purpose" value="evaluates the number of unique records"/>
          <sqlGenericExpression xmi:id="_5sS1k34eEei25uY0cniCVg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) AS myquery" language="SQL"/>
          <sqlGenericExpression xmi:id="_5sS1lH4eEei25uY0cniCVg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount = 1) AS myquery" language="MySQL"/>
          <sqlGenericExpression xmi:id="_5sS1lX4eEei25uY0cniCVg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) myquery" language="Oracle"/>
          <sqlGenericExpression xmi:id="_5sS1ln4eEei25uY0cniCVg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount = 1) AS myquery" language="Teradata"/>
          <sqlGenericExpression xmi:id="_5sS1l34eEei25uY0cniCVg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) AS myquery" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_5sS1mH4eEei25uY0cniCVg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) AS myquery" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
          <sqlGenericExpression xmi:id="_5sS1mX4eEei25uY0cniCVg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1)  myquery" language="Hive" version=""/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:DuplicateCountIndicator" xmi:id="_5WryMX4eEei25uY0cniCVg" count="1901" computed="true" duplicateValueCount="1">
        <parameters xmi:id="_5WryMn4eEei25uY0cniCVg"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om76-X4IEei25uY0cniCVg"/>
        <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Duplicate_Count_0.1.definition#_ccHq0hF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_50VXS34eEei25uY0cniCVg" body="SELECT COUNT(*) FROM (SELECT &quot;MERCHANT_NAME&quot;, COUNT(*) mycount FROM &quot;ORACLE&quot;.&quot;MERCHANT_TABLE&quot;  m  GROUP BY &quot;MERCHANT_NAME&quot; HAVING COUNT(*) > 1) myquery" language="Oracle"/>
        <builtInIndicatorDefinition xmi:id="_5sV44H4eEei25uY0cniCVg" name="Duplicate Count" label="Duplicate Count">
          <taggedValue xmi:id="_5sV44X4eEei25uY0cniCVg" tag="Description" value="counts the number of duplicate rows. This number and the number of unique data equals the number of distinct rows"/>
          <taggedValue xmi:id="_5sV44n4eEei25uY0cniCVg" tag="Purpose" value="evaluates the number of duplicated records"/>
          <sqlGenericExpression xmi:id="_5sV4434eEei25uY0cniCVg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) AS myquery" language="SQL"/>
          <sqlGenericExpression xmi:id="_5sV45H4eEei25uY0cniCVg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount > 1) AS myquery" language="MySQL"/>
          <sqlGenericExpression xmi:id="_5sV45X4eEei25uY0cniCVg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) myquery" language="Oracle"/>
          <sqlGenericExpression xmi:id="_5sV45n4eEei25uY0cniCVg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount > 1) AS myquery" language="Teradata"/>
          <sqlGenericExpression xmi:id="_5sV4534eEei25uY0cniCVg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) myquery" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_5sV46H4eEei25uY0cniCVg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) AS myquery" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
          <sqlGenericExpression xmi:id="_5sV46X4eEei25uY0cniCVg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) myquery" language="Hive"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:BlankCountIndicator" xmi:id="_5WryM34eEei25uY0cniCVg" count="1901" computed="true">
        <parameters xmi:id="_5WryNH4eEei25uY0cniCVg"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om76-X4IEei25uY0cniCVg"/>
        <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Blank_Count_0.1.definition#_ccHq0xF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_50VXTH4eEei25uY0cniCVg" body="SELECT COUNT(&quot;MERCHANT_NAME&quot;) FROM &quot;ORACLE&quot;.&quot;MERCHANT_TABLE&quot;  WHERE TRIM(&quot;MERCHANT_NAME&quot;) IS NULL " language="Oracle"/>
        <builtInIndicatorDefinition xmi:id="_5sY8MH4eEei25uY0cniCVg" name="Blank Count" label="Blank Count">
          <taggedValue xmi:id="_5sY8MX4eEei25uY0cniCVg" tag="Description" value="counts the number of blank rows. A blank is a non null textual data that contains only white spaces (or nothing). Note that Oracle does not distinguish between the empty string and the null value"/>
          <taggedValue xmi:id="_5sY8Mn4eEei25uY0cniCVg" tag="Purpose" value="evaluates the number of blank records"/>
          <sqlGenericExpression xmi:id="_5sY8M34eEei25uY0cniCVg" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE TRIM(&lt;%=__COLUMN_NAMES__%>) = '' &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
          <sqlGenericExpression xmi:id="_5sY8NH4eEei25uY0cniCVg" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE TRIM(&lt;%=__COLUMN_NAMES__%>) IS NULL &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
          <sqlGenericExpression xmi:id="_5sY8NX4eEei25uY0cniCVg" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE LTRIM(RTRIM(&lt;%=__COLUMN_NAMES__%>)) = '' &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
          <sqlGenericExpression xmi:id="_5sY8Nn4eEei25uY0cniCVg" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE LTRIM(RTRIM(&lt;%=__COLUMN_NAMES__%>)) = '' &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_5sY8N34eEei25uY0cniCVg" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> = '' or RTRIM(LTRIM(&lt;%=__COLUMN_NAMES__%>)) = '') &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:TextIndicator" xmi:id="_5WryNX4eEei25uY0cniCVg">
        <parameters xmi:id="_5WryNn4eEei25uY0cniCVg"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om76-X4IEei25uY0cniCVg"/>
        <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Text_Statistics_0.1.definition#_yb9x0zh8Ed2XmO7pl5Yuyg"/>
        <averageLengthIndicator xmi:id="_5WryN34eEei25uY0cniCVg" count="1901" computed="true" sumLength="38227.0">
          <parameters xmi:id="_5WryOH4eEei25uY0cniCVg">
            <textParameter xmi:id="_5WryOX4eEei25uY0cniCVg" useBlank="false"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om76-X4IEei25uY0cniCVg"/>
          <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Average_Length_0.1.definition#_ccIR4BF2Ed2PKb6nEJEvhw"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_50VXTX4eEei25uY0cniCVg" body="SELECT SUM(LENGTH(&quot;MERCHANT_NAME&quot;)), COUNT(&quot;MERCHANT_NAME&quot;) FROM &quot;ORACLE&quot;.&quot;MERCHANT_TABLE&quot; WHERE (&quot;MERCHANT_NAME&quot; IS NOT NULL ) AND (TRIM(NVL(&quot;MERCHANT_NAME&quot;,'NULL TALEND')) IS NOT NULL) " language="Oracle"/>
          <builtInIndicatorDefinition xmi:id="_5scmkH4eEei25uY0cniCVg" name="Average Length" label="Average Length">
            <taggedValue xmi:id="_5scmkX4eEei25uY0cniCVg" tag="Description" value="computes the average length of the field. Does not take into account the null values when computing the average."/>
            <taggedValue xmi:id="_5scmkn4eEei25uY0cniCVg" tag="Purpose" value="evaluates the average length of the textual record"/>
            <sqlGenericExpression xmi:id="_5scmk34eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_5scmlH4eEei25uY0cniCVg" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_5scmlX4eEei25uY0cniCVg" body="SELECT SUM(LEN(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_5scmln4eEei25uY0cniCVg" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_5scml34eEei25uY0cniCVg" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_5scmmH4eEei25uY0cniCVg" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_5scmmX4eEei25uY0cniCVg" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_5scmmn4eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_5scmm34eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_5scmnH4eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )), COUNT( &lt;%=__COLUMN_NAMES__%> ) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) AND ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_5scmnX4eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_5scmnn4eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
          </builtInIndicatorDefinition>
        </averageLengthIndicator>
        <maxLengthIndicator xmi:id="_5WryOn4eEei25uY0cniCVg" computed="true" length="35">
          <parameters xmi:id="_5WryO34eEei25uY0cniCVg">
            <textParameter xmi:id="_5WryPH4eEei25uY0cniCVg" useBlank="false"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om76-X4IEei25uY0cniCVg"/>
          <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Maximal_Length_0.1.definition#_ccHq1RF2Ed2PKb6nEJEvhw"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_50V-UH4eEei25uY0cniCVg" body="SELECT MAX( LENGTH(&quot;MERCHANT_NAME&quot;) ) FROM &quot;ORACLE&quot;.&quot;MERCHANT_TABLE&quot; WHERE (&quot;MERCHANT_NAME&quot; IS NOT NULL ) AND (TRIM(NVL(&quot;MERCHANT_NAME&quot;,'NULL TALEND')) IS NOT NULL) " language="Oracle"/>
          <builtInIndicatorDefinition xmi:id="_5sgQ8H4eEei25uY0cniCVg" name="Maximal Length" label="Maximal Length">
            <taggedValue xmi:id="_5sgQ8X4eEei25uY0cniCVg" tag="Description" value="computes the maximal length of a text field."/>
            <taggedValue xmi:id="_5sgQ8n4eEei25uY0cniCVg" tag="Purpose" value="evaluates the length of the longest textual record"/>
            <sqlGenericExpression xmi:id="_5sgQ834eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_5sgQ9H4eEei25uY0cniCVg" body="SELECT MAX( LENGTH(&lt;%=__COLUMN_NAMES__%>) ) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle" modificationDate=""/>
            <sqlGenericExpression xmi:id="_5sgQ9X4eEei25uY0cniCVg" body="SELECT MAX(LEN(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_5sgQ9n4eEei25uY0cniCVg" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_5sgQ934eEei25uY0cniCVg" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_5sgQ-H4eEei25uY0cniCVg" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_5sgQ-X4eEei25uY0cniCVg" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive" modificationDate=""/>
            <sqlGenericExpression xmi:id="_5sgQ-n4eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_5sgQ-34eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' )  &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_5sgQ_H4eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) AND ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_5sgQ_X4eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_5sgQ_n4eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
          </builtInIndicatorDefinition>
        </maxLengthIndicator>
        <minLengthIndicator xmi:id="_5WsZAH4eEei25uY0cniCVg" computed="true" length="5">
          <parameters xmi:id="_5WsZAX4eEei25uY0cniCVg">
            <textParameter xmi:id="_5WsZAn4eEei25uY0cniCVg" useBlank="false"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om76-X4IEei25uY0cniCVg"/>
          <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Minimal_Length_0.1.definition#_ccHq1BF2Ed2PKb6nEJEvhw"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_50V-UX4eEei25uY0cniCVg" body="SELECT MIN( LENGTH(&quot;MERCHANT_NAME&quot;) ) FROM &quot;ORACLE&quot;.&quot;MERCHANT_TABLE&quot; WHERE (&quot;MERCHANT_NAME&quot; IS NOT NULL ) AND (TRIM(NVL(&quot;MERCHANT_NAME&quot;,'NULL TALEND')) IS NOT NULL) " language="Oracle"/>
          <builtInIndicatorDefinition xmi:id="_5sjUQH4eEei25uY0cniCVg" name="Minimal Length" label="Minimal Length">
            <taggedValue xmi:id="_5sjUQX4eEei25uY0cniCVg" tag="Description" value="computes the minimal length of a text field. Does not take into account the null values when computing the minimal length."/>
            <taggedValue xmi:id="_5sjUQn4eEei25uY0cniCVg" tag="Purpose" value="evaluates the length of the smallest textual record"/>
            <sqlGenericExpression xmi:id="_5sjUQ34eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_5sjURH4eEei25uY0cniCVg" body="SELECT MIN( LENGTH(&lt;%=__COLUMN_NAMES__%>) ) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_5sjURX4eEei25uY0cniCVg" body="SELECT MIN(LEN(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_5sjURn4eEei25uY0cniCVg" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_5sjUR34eEei25uY0cniCVg" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_5sjUSH4eEei25uY0cniCVg" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_5sjUSX4eEei25uY0cniCVg" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_5sjUSn4eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_5sjUS34eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_5sjUTH4eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) AND ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_5sjUTX4eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (1=1) AND (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_5sjUTn4eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
          </builtInIndicatorDefinition>
        </minLengthIndicator>
        <minLengthWithBlankIndicator xmi:id="_5WsZA34eEei25uY0cniCVg" computed="true" length="5">
          <parameters xmi:id="_5WsZBH4eEei25uY0cniCVg">
            <textParameter xmi:id="_5WsZBX4eEei25uY0cniCVg"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om76-X4IEei25uY0cniCVg"/>
          <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Minimal_Length_With_Blank_0.1.definition#_G4EzQZU9Ed-Y15ulK_jijQ"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_50V-WH4eEei25uY0cniCVg" body="SELECT MIN( LENGTH(&quot;MERCHANT_NAME&quot;) ) FROM &quot;ORACLE&quot;.&quot;MERCHANT_TABLE&quot; WHERE (&quot;MERCHANT_NAME&quot; IS NOT NULL ) " language="Oracle"/>
          <builtInIndicatorDefinition xmi:id="_5s7uwH4eEei25uY0cniCVg" name="Minimal Length With Blank" label="Minimal Length With Blank">
            <taggedValue xmi:id="_5s7uwX4eEei25uY0cniCVg" tag="Description" value="computes the minimal length of a text field, counting blank as zero length values."/>
            <taggedValue xmi:id="_5s7uwn4eEei25uY0cniCVg" tag="Purpose" value="evaluates the length of the smallest textual record"/>
            <sqlGenericExpression xmi:id="_5s7uw34eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_5s7uxH4eEei25uY0cniCVg" body="SELECT MIN( LENGTH(&lt;%=__COLUMN_NAMES__%>) ) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_5s7uxX4eEei25uY0cniCVg" body="SELECT MIN(LEN(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_5s7uxn4eEei25uY0cniCVg" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_5s7ux34eEei25uY0cniCVg" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_5s7uyH4eEei25uY0cniCVg" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_5s7uyX4eEei25uY0cniCVg" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_5s7uyn4eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_5s7uy34eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_5s7uzH4eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_5s7uzX4eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
          </builtInIndicatorDefinition>
        </minLengthWithBlankIndicator>
        <minLengthWithNullIndicator xmi:id="_5WsZBn4eEei25uY0cniCVg" computed="true" length="5">
          <parameters xmi:id="_5WsZB34eEei25uY0cniCVg">
            <textParameter xmi:id="_5WsZCH4eEei25uY0cniCVg" useBlank="false" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om76-X4IEei25uY0cniCVg"/>
          <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Minimal_Length_With_Null_0.1.definition#_a4KsoI1qEd-xwI2imLgHRA"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_50V-WX4eEei25uY0cniCVg" body="SELECT MIN(CASE WHEN &quot;MERCHANT_NAME&quot; IS NULL THEN 0 ELSE LENGTH(&quot;MERCHANT_NAME&quot;) END) FROM &quot;ORACLE&quot;.&quot;MERCHANT_TABLE&quot; WHERE (TRIM(NVL(&quot;MERCHANT_NAME&quot;,'NULL TALEND')) IS NOT NULL) " language="Oracle"/>
          <builtInIndicatorDefinition xmi:id="_5s_ZIH4eEei25uY0cniCVg" name="Minimal Length With Null" label="Minimal Length With Null">
            <taggedValue xmi:id="_5s_ZIX4eEei25uY0cniCVg" tag="Description" value="computes the minimal length of a text field, counting null as zero length values."/>
            <taggedValue xmi:id="_5s_ZIn4eEei25uY0cniCVg" tag="Purpose" value="evaluates the length of the smallest textual record"/>
            <sqlGenericExpression xmi:id="_5s_ZI34eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_5s_ZJH4eEei25uY0cniCVg" body="SELECT MIN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_5s_ZJX4eEei25uY0cniCVg" body="SELECT MIN(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_5s_ZJn4eEei25uY0cniCVg" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_5s_ZJ34eEei25uY0cniCVg" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_5s_ZKH4eEei25uY0cniCVg" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_5s_ZKX4eEei25uY0cniCVg" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_5s_ZKn4eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_5s_ZK34eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_5s_ZLH4eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_5s_ZLX4eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_5s_ZLn4eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
          </builtInIndicatorDefinition>
        </minLengthWithNullIndicator>
        <minLengthWithBlankNullIndicator xmi:id="_5WsZCX4eEei25uY0cniCVg" computed="true" length="5">
          <parameters xmi:id="_5WsZCn4eEei25uY0cniCVg">
            <textParameter xmi:id="_5WsZC34eEei25uY0cniCVg" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om76-X4IEei25uY0cniCVg"/>
          <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Minimal_Length_With_Blank_and_Null_0.1.definition#_9HDjMJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_50V-Wn4eEei25uY0cniCVg" body="SELECT MIN(CASE WHEN &quot;MERCHANT_NAME&quot; IS NULL  THEN 0 ELSE LENGTH(&quot;MERCHANT_NAME&quot;) END) FROM &quot;ORACLE&quot;.&quot;MERCHANT_TABLE&quot; " language="Oracle"/>
          <builtInIndicatorDefinition xmi:id="_5tDDgH4eEei25uY0cniCVg" name="Minimal Length With Blank and Null" label="Minimal Length With Blank and Null">
            <taggedValue xmi:id="_5tDDgX4eEei25uY0cniCVg" tag="Description" value="computes the minimal length of a text field, counting blank and null as zero length values."/>
            <taggedValue xmi:id="_5tDDgn4eEei25uY0cniCVg" tag="Purpose" value="evaluates the length of the smallest textual record"/>
            <sqlGenericExpression xmi:id="_5tDDg34eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_5tDDhH4eEei25uY0cniCVg" body="SELECT MIN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_5tDDhX4eEei25uY0cniCVg" body="SELECT MIN(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_5tDDhn4eEei25uY0cniCVg" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_5tDDh34eEei25uY0cniCVg" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_5tDDiH4eEei25uY0cniCVg" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_5tDDiX4eEei25uY0cniCVg" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_5tDDin4eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_5tDDi34eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_5tDDjH4eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END )) FROM  &lt;%=__TABLE_NAME__%>   &lt;%=__WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_5tDDjX4eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_5tDDjn4eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Netezza"/>
          </builtInIndicatorDefinition>
        </minLengthWithBlankNullIndicator>
        <maxLengthWithBlankIndicator xmi:id="_5WsZDH4eEei25uY0cniCVg" computed="true" length="35">
          <parameters xmi:id="_5WsZDX4eEei25uY0cniCVg">
            <textParameter xmi:id="_5WsZDn4eEei25uY0cniCVg"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om76-X4IEei25uY0cniCVg"/>
          <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Maximal_Length_With_Blank_0.1.definition#_-xmZcJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_50V-VX4eEei25uY0cniCVg" body="SELECT MAX( LENGTH(&quot;MERCHANT_NAME&quot;) ) FROM &quot;ORACLE&quot;.&quot;MERCHANT_TABLE&quot; WHERE (&quot;MERCHANT_NAME&quot; IS NOT NULL ) " language="Oracle"/>
          <builtInIndicatorDefinition xmi:id="_5sxWsH4eEei25uY0cniCVg" name="Maximal Length With Blank" label="Maximal Length With Blank">
            <taggedValue xmi:id="_5sxWsX4eEei25uY0cniCVg" tag="Description" value="computes the maximal length of a text field, counting blank data  as zero length values."/>
            <taggedValue xmi:id="_5sxWsn4eEei25uY0cniCVg" tag="Purpose" value="evaluates the length of the longest textual record"/>
            <sqlGenericExpression xmi:id="_5sxWs34eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_5sxWtH4eEei25uY0cniCVg" body="SELECT MAX( LENGTH(&lt;%=__COLUMN_NAMES__%>) ) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_5sxWtX4eEei25uY0cniCVg" body="SELECT MAX(LEN(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_5sxWtn4eEei25uY0cniCVg" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_5sxWt34eEei25uY0cniCVg" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_5sxWuH4eEei25uY0cniCVg" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_5sxWuX4eEei25uY0cniCVg" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_5sxWun4eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_5sxWu34eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_5sxWvH4eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_5sxWvX4eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
          </builtInIndicatorDefinition>
        </maxLengthWithBlankIndicator>
        <maxLengthWithNullIndicator xmi:id="_5WsZD34eEei25uY0cniCVg" computed="true" length="35">
          <parameters xmi:id="_5WsZEH4eEei25uY0cniCVg">
            <textParameter xmi:id="_5WsZEX4eEei25uY0cniCVg" useBlank="false" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om76-X4IEei25uY0cniCVg"/>
          <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Maximal_Length_With_Null_0.1.definition#_-_UFUJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_50V-Vn4eEei25uY0cniCVg" body="SELECT MAX(CASE WHEN &quot;MERCHANT_NAME&quot; IS NULL THEN 0 ELSE LENGTH(&quot;MERCHANT_NAME&quot;) END) FROM &quot;ORACLE&quot;.&quot;MERCHANT_TABLE&quot; WHERE (TRIM(NVL(&quot;MERCHANT_NAME&quot;,'NULL TALEND')) IS NOT NULL) " language="Oracle"/>
          <builtInIndicatorDefinition xmi:id="_5s1BEH4eEei25uY0cniCVg" name="Maximal Length With Null" label="Maximal Length With Null">
            <taggedValue xmi:id="_5s1BEX4eEei25uY0cniCVg" tag="Description" value="computes the maximal length of a text field, counting null data as zero length values."/>
            <taggedValue xmi:id="_5s1BEn4eEei25uY0cniCVg" tag="Purpose" value="evaluates the length of the longest textual record"/>
            <sqlGenericExpression xmi:id="_5s1BE34eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_5s1BFH4eEei25uY0cniCVg" body="SELECT MAX(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_5s1BFX4eEei25uY0cniCVg" body="SELECT MAX(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_5s1BFn4eEei25uY0cniCVg" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_5s1BF34eEei25uY0cniCVg" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_5s1BGH4eEei25uY0cniCVg" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_5s1BGX4eEei25uY0cniCVg" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive" version=""/>
            <sqlGenericExpression xmi:id="_5s1BGn4eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_5s1BG34eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_5s1BHH4eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_5s1BHX4eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_5s1BHn4eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
          </builtInIndicatorDefinition>
        </maxLengthWithNullIndicator>
        <maxLengthWithBlankNullIndicator xmi:id="_5WsZEn4eEei25uY0cniCVg" computed="true" length="35">
          <parameters xmi:id="_5WsZE34eEei25uY0cniCVg">
            <textParameter xmi:id="_5WsZFH4eEei25uY0cniCVg" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om76-X4IEei25uY0cniCVg"/>
          <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Maximal_Length_With_Blank_and_Null_0.1.definition#_-hzp8JSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_50V-V34eEei25uY0cniCVg" body="SELECT MAX(CASE WHEN &quot;MERCHANT_NAME&quot; IS NULL  THEN 0 ELSE LENGTH(&quot;MERCHANT_NAME&quot;) END) FROM &quot;ORACLE&quot;.&quot;MERCHANT_TABLE&quot; " language="Oracle"/>
          <builtInIndicatorDefinition xmi:id="_5s4EYH4eEei25uY0cniCVg" name="Maximal Length With Blank and Null" label="Maximal Length With Blank and Null">
            <taggedValue xmi:id="_5s4EYX4eEei25uY0cniCVg" tag="Description" value="computes the maximal length of a text field, counting null and blank data as zero length values."/>
            <taggedValue xmi:id="_5s4EYn4eEei25uY0cniCVg" tag="Purpose" value="evaluates the length of the longest textual record"/>
            <sqlGenericExpression xmi:id="_5s4EY34eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_5s4EZH4eEei25uY0cniCVg" body="SELECT MAX(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_5s4EZX4eEei25uY0cniCVg" body="SELECT MAX(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_5s4EZn4eEei25uY0cniCVg" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_5s4EZ34eEei25uY0cniCVg" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_5s4EaH4eEei25uY0cniCVg" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_5s4EaX4eEei25uY0cniCVg" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_5s4Ean4eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_5s4Ea34eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_5s4EbH4eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END )) FROM  &lt;%=__TABLE_NAME__%>   &lt;%=__WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_5s4EbX4eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_5s4Ebn4eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Netezza"/>
          </builtInIndicatorDefinition>
        </maxLengthWithBlankNullIndicator>
        <avgLengthWithBlankIndicator xmi:id="_5WsZFX4eEei25uY0cniCVg" count="1901" computed="true" sumLength="38227.0">
          <parameters xmi:id="_5WsZFn4eEei25uY0cniCVg">
            <textParameter xmi:id="_5WsZF34eEei25uY0cniCVg"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om76-X4IEei25uY0cniCVg"/>
          <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Average_Length_With_Blank_0.1.definition#__gPoIJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_50V-Un4eEei25uY0cniCVg" body="SELECT SUM(CASE WHEN &quot;MERCHANT_NAME&quot; IS NOT NULL AND  TRIM(&quot;MERCHANT_NAME&quot;) IS NULL THEN 0 ELSE  LENGTH(&quot;MERCHANT_NAME&quot;)END), COUNT(*) FROM &quot;ORACLE&quot;.&quot;MERCHANT_TABLE&quot; WHERE (&quot;MERCHANT_NAME&quot; IS NOT NULL ) " language="Oracle"/>
          <builtInIndicatorDefinition xmi:id="_5smXkH4eEei25uY0cniCVg" name="Average Length With Blank" label="Average Length With Blank">
            <taggedValue xmi:id="_5smXkX4eEei25uY0cniCVg" tag="Description" value="computes the average length of the field, counting blank data as zero length values."/>
            <taggedValue xmi:id="_5smXkn4eEei25uY0cniCVg" tag="Purpose" value="evaluates the average length of the textual record"/>
            <sqlGenericExpression xmi:id="_5smXk34eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH(CASE WHEN   CHAR_LENGTH( TRIM(&lt;%=__COLUMN_NAMES__%>) ) =0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_5smXlH4eEei25uY0cniCVg" body="SELECT SUM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NOT NULL AND  TRIM(&lt;%=__COLUMN_NAMES__%>) IS NULL THEN 0 ELSE  LENGTH(&lt;%=__COLUMN_NAMES__%>)END), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_5smXlX4eEei25uY0cniCVg" body="SELECT SUM(LEN(CASE WHEN  LEN( LTRIM(RTRIM(&lt;%=__COLUMN_NAMES__%>)) )=0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_5smXln4eEei25uY0cniCVg" body="SELECT SUM(LENGTH(CASE WHEN   LENGTH( TRIM(&lt;%=__COLUMN_NAMES__%>) ) =0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_5smXl34eEei25uY0cniCVg" body="SELECT SUM(LENGTH(CASE WHEN   LENGTH( TRIM(&lt;%=__COLUMN_NAMES__%>) ) =0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_5smXmH4eEei25uY0cniCVg" body="SELECT SUM(LENGTH(CASE WHEN   LENGTH( TRIM(&lt;%=__COLUMN_NAMES__%>) ) =0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_5smXmX4eEei25uY0cniCVg" body="SELECT SUM(LENGTH(CASE WHEN   LENGTH( TRIM(&lt;%=__COLUMN_NAMES__%>) ) =0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_5smXmn4eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( TRIM(&lt;%=__COLUMN_NAMES__%>) ) =0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_5smXm34eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( LTRIM(RTRIM(&lt;%=__COLUMN_NAMES__%>)) ) =0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_5smXnH4eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( TRIM( &lt;%=__COLUMN_NAMES__%> ) ) =0  THEN '' ELSE   &lt;%=__COLUMN_NAMES__%>  END)), COUNT(*) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_5smXnX4eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( TRIM(&lt;%=__COLUMN_NAMES__%>) ) =0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
          </builtInIndicatorDefinition>
        </avgLengthWithBlankIndicator>
        <avgLengthWithNullIndicator xmi:id="_5WsZGH4eEei25uY0cniCVg" count="1901" computed="true" sumLength="38227.0">
          <parameters xmi:id="_5WsZGX4eEei25uY0cniCVg">
            <textParameter xmi:id="_5WsZGn4eEei25uY0cniCVg" useBlank="false" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om76-X4IEei25uY0cniCVg"/>
          <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Average_Length_With_Null_0.1.definition#__vI_wJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_50V-U34eEei25uY0cniCVg" body="SELECT SUM(CASE WHEN &quot;MERCHANT_NAME&quot; IS NULL THEN 0 ELSE LENGTH(&quot;MERCHANT_NAME&quot;) END), COUNT(*) FROM &quot;ORACLE&quot;.&quot;MERCHANT_TABLE&quot; WHERE (TRIM(NVL(&quot;MERCHANT_NAME&quot;,'NULL TALEND')) IS NOT NULL) " language="Oracle"/>
          <builtInIndicatorDefinition xmi:id="_5sqpAH4eEei25uY0cniCVg" name="Average Length With Null" label="Average Length With Null">
            <taggedValue xmi:id="_5sqpAX4eEei25uY0cniCVg" tag="Description" value="computes the average length of the field, counting null data as zero length values."/>
            <taggedValue xmi:id="_5sqpAn4eEei25uY0cniCVg" tag="Purpose" value="evaluates the average length of the textual record"/>
            <sqlGenericExpression xmi:id="_5sqpA34eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_5sqpBH4eEei25uY0cniCVg" body="SELECT SUM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_5sqpBX4eEei25uY0cniCVg" body="SELECT SUM(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_5sqpBn4eEei25uY0cniCVg" body="SELECT SUM(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_5sqpB34eEei25uY0cniCVg" body="SELECT SUM(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_5sqpCH4eEei25uY0cniCVg" body="SELECT SUM(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_5sqpCX4eEei25uY0cniCVg" body="SELECT SUM(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_5sqpCn4eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_5sqpC34eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_5sqpDH4eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_5sqpDX4eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_5sqpDn4eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
          </builtInIndicatorDefinition>
        </avgLengthWithNullIndicator>
        <avgLengthWithBlankNullIndicator xmi:id="_5WsZG34eEei25uY0cniCVg" count="1901" computed="true" sumLength="38227.0">
          <parameters xmi:id="_5WsZHH4eEei25uY0cniCVg">
            <textParameter xmi:id="_5WsZHX4eEei25uY0cniCVg" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om76-X4IEei25uY0cniCVg"/>
          <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Average_Length_With_Blank_and_Null_0.1.definition#__TbUIJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_50V-VH4eEei25uY0cniCVg" body="SELECT SUM(CASE WHEN &quot;MERCHANT_NAME&quot; IS NOT NULL AND  TRIM(&quot;MERCHANT_NAME&quot;) IS NULL THEN 0 ELSE CASE WHEN &quot;MERCHANT_NAME&quot; IS NULL THEN 0 ELSE LENGTH(&quot;MERCHANT_NAME&quot;) END  END), COUNT(*) FROM &quot;ORACLE&quot;.&quot;MERCHANT_TABLE&quot; " language="Oracle"/>
          <builtInIndicatorDefinition xmi:id="_5stsUH4eEei25uY0cniCVg" name="Average Length With Blank and Null" label="Average Length With Blank and Null">
            <taggedValue xmi:id="_5stsUX4eEei25uY0cniCVg" tag="Description" value="computes the average length of the field, counting blank and null data as zero lenght values."/>
            <taggedValue xmi:id="_5stsUn4eEei25uY0cniCVg" tag="Purpose" value="evaluates the average length of the textual record"/>
            <sqlGenericExpression xmi:id="_5stsU34eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH(CASE WHEN   CHAR_LENGTH( TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'')) ) =0  THEN '' ELSE  IFNULL(&lt;%=__COLUMN_NAMES__%>,'') END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_5stsVH4eEei25uY0cniCVg" body="SELECT SUM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NOT NULL AND  TRIM(&lt;%=__COLUMN_NAMES__%>) IS NULL THEN 0 ELSE CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END  END), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_5stsVX4eEei25uY0cniCVg" body="SELECT SUM(LEN(CASE WHEN  LEN( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) )=0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_5stsVn4eEei25uY0cniCVg" body="SELECT SUM(LENGTH(CASE WHEN   LENGTH( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END ) ) =0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_5stsV34eEei25uY0cniCVg" body="SELECT SUM(LENGTH(CASE WHEN   LENGTH( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END ) ) =0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_5stsWH4eEei25uY0cniCVg" body="SELECT SUM(LENGTH(CASE WHEN   LENGTH( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END ) ) =0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_5stsWX4eEei25uY0cniCVg" body="SELECT SUM(LENGTH(CASE WHEN   LENGTH( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END ) ) =0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_5stsWn4eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END ) ) =0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_5stsW34eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) ) =0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_5stsXH4eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END ) ) =0  THEN '' ELSE   CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END  END)), COUNT(*) FROM  &lt;%=__TABLE_NAME__%>   &lt;%=__WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_5stsXX4eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END ) ) =0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_5stsXn4eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH(CASE WHEN   CHAR_LENGTH( TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'')) ) =0  THEN '' ELSE  ISNULL(&lt;%=__COLUMN_NAMES__%>,'') END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Netezza"/>
          </builtInIndicatorDefinition>
        </avgLengthWithBlankNullIndicator>
      </indicators>
      <indicators xsi:type="dataquality.indicators:PatternFreqIndicator" xmi:id="_5WsZHn4eEei25uY0cniCVg" count="1901" computed="true" distinctValueCount="10" valueToFreq
        <parameters xmi:id="_5WsZH34eEei25uY0cniCVg"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om76-X4IEei25uY0cniCVg"/>
        <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Pattern Frequency Statistics/Pattern_Frequency_Table_0.1.definition#_kQzTsJR-Ed2XO-JvLwVAwg"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_50V-W34eEei25uY0cniCVg" body="SELECT * FROM (SELECT TRANSLATE(&quot;MERCHANT_NAME&quot; , 'abcdefghijklmnopqrstuvwxyzçâêîôûéèùïöüABCDEFGHIJKLMNOPQRSTUVWXYZÇÂÊÎÔÛÉÈÙÏÖÜ0123456789' , 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999'), COUNT(*) AS c FROM &quot;ORACLE&quot;.&quot;MERCHANT_TABLE&quot; t  GROUP BY TRANSLATE(&quot;MERCHANT_NAME&quot; , 'abcdefghijklmnopqrstuvwxyzçâêîôûéèùïöüABCDEFGHIJKLMNOPQRSTUVWXYZÇÂÊÎÔÛÉÈÙÏÖÜ0123456789' , 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999') ORDER BY c DESC) WHERE ROWNUM &lt;= 10" language="Oracle"/>
        <builtInIndicatorDefinition xmi:id="_5tGt4H4eEei25uY0cniCVg" name="Pattern Frequency Table" label="Pattern Frequency Table">
          <taggedValue xmi:id="_5tGt4X4eEei25uY0cniCVg" tag="Description" value="counts the number of records for each distinct pattern"/>
          <taggedValue xmi:id="_5tGt4n4eEei25uY0cniCVg" tag="Purpose" value="evaluates the most frequent patterns"/>
          <sqlGenericExpression xmi:id="_5tGt434eEei25uY0cniCVg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY c DESC" language="SQL"/>
          <sqlGenericExpression xmi:id="_5tGt5H4eEei25uY0cniCVg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY c DESC" language="MySQL"/>
          <sqlGenericExpression xmi:id="_5tGt5X4eEei25uY0cniCVg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) AS c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY c DESC" language="Oracle"/>
          <sqlGenericExpression xmi:id="_5tGt5n4eEei25uY0cniCVg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) AS c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY c DESC" language="PostgreSQL"/>
          <sqlGenericExpression xmi:id="_5tGt534eEei25uY0cniCVg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY c DESC" language="DB2"/>
          <sqlGenericExpression xmi:id="_5tGt6H4eEei25uY0cniCVg" body="SELECT &lt;%=__COLUMN_NAMES__%> , COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY c DESC" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_5tGt6X4eEei25uY0cniCVg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) AS c FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY c DESC" language="Informix"/>
          <sqlGenericExpression xmi:id="_5tGt6n4eEei25uY0cniCVg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY c DESC" language="AS/400"/>
          <sqlGenericExpression xmi:id="_5tGt634eEei25uY0cniCVg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY c DESC" language="Teradata"/>
          <sqlGenericExpression xmi:id="_5tGt7H4eEei25uY0cniCVg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) AS c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY c DESC" language="Vertica Database"/>
          <sqlGenericExpression xmi:id="_5tGt7X4eEei25uY0cniCVg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) AS c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY c DESC" language="Netezza"/>
          <charactersMapping xmi:id="_5tGt7n4eEei25uY0cniCVg" language="SQL" charactersToReplace="abcdefghijklmnopqrstuvwxyzçâêîôûéèùïöüABCDEFGHIJKLMNOPQRSTUVWXYZÇÂÊÎÔÛÉÈÙÏÖÜ0123456789" replacementCharacters="aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999"/>
          <charactersMapping xmi:id="_5tGt734eEei25uY0cniCVg" name="Characters mapping on MySQL" language="MySQL" charactersToReplace="abcdefghijklmnopqrstuvwxyzçâêîôûéèùïöüABCDEFGHIJKLMNOPQRSTUVWXYZÇÂÊÎÔÛÉÈÙÏÖÜ0123456789" replacementCharacters="aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999"/>
          <charactersMapping xmi:id="_5tGt8H4eEei25uY0cniCVg" name="Characters mapping on Oracle" language="Oracle" charactersToReplace="abcdefghijklmnopqrstuvwxyzçâêîôûéèùïöüABCDEFGHIJKLMNOPQRSTUVWXYZÇÂÊÎÔÛÉÈÙÏÖÜ0123456789" replacementCharacters="aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999"/>
          <charactersMapping xmi:id="_5tGt8X4eEei25uY0cniCVg" name="Characters mapping on PostgreSQL" language="PostgreSQL" charactersToReplace="abcdefghijklmnopqrstuvwxyzçâêîôûéèùïöüABCDEFGHIJKLMNOPQRSTUVWXYZÇÂÊÎÔÛÉÈÙÏÖÜ0123456789" replacementCharacters="aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999"/>
          <charactersMapping xmi:id="_5tGt8n4eEei25uY0cniCVg" name="Characters mapping on Microsoft SQL Server" language="Microsoft SQL Server" charactersToReplace="abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789" replacementCharacters="aaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999"/>
          <charactersMapping xmi:id="_5tGt834eEei25uY0cniCVg" name="Characters mapping on DB2" language="DB2" charactersToReplace="abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789" replacementCharacters="aaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999"/>
          <charactersMapping xmi:id="_5tGt9H4eEei25uY0cniCVg" name="Characters mapping on AS/400" language="AS/400" charactersToReplace="abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789" replacementCharacters="aaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999"/>
          <charactersMapping xmi:id="_5tGt9X4eEei25uY0cniCVg" name="Characters mapping on Informix" language="Informix" charactersToReplace="abcdefghijklmnopqrstuvwxyzçâêîôûéèùïöüABCDEFGHIJKLMNOPQRSTUVWXYZÇÂÊÎÔÛÉÈÙÏÖÜ0123456789" replacementCharacters="aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999"/>
          <charactersMapping xmi:id="_5tGt9n4eEei25uY0cniCVg" name="Characters mapping on Teradata" language="Teradata" charactersToReplace="abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789" replacementCharacters="aaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999"/>
          <charactersMapping xmi:id="_5tGt934eEei25uY0cniCVg" name="Characters mapping on Vertica" language="Vertica Database" charactersToReplace="abcdefghijklmnopqrstuvwxyzçâêîôûéèùïöüABCDEFGHIJKLMNOPQRSTUVWXYZÇÂÊÎÔÛÉÈÙÏÖÜ0123456789" replacementCharacters="aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999"/>
          <charactersMapping xmi:id="_5tGt-H4eEei25uY0cniCVg" language="Netezza" charactersToReplace="abcdefghijklmnopqrstuvwxyzçâêîôûéèùïöüABCDEFGHIJKLMNOPQRSTUVWXYZÇÂÊÎÔÛÉÈÙÏÖÜ0123456789" replacementCharacters="aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999"/>
          <charactersMapping xmi:id="_5tGt-X4eEei25uY0cniCVg" name="Characters mapping on Hive" language="Hive" charactersToReplace="0123456789abcdefghijklmnopqrstuvwxyz?aê???éèù??üABCDEFGHIJKLMNOPQRSTUVWXYZ??ê???éèù??ü" replacementCharacters="9999999999aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:SoundexFreqIndicator" xmi:id="_5WsZIH4eEei25uY0cniCVg" count="1901" computed="true" distinctValueCount="10" valueToFreqvalueToDistinctFreq
        <parameters xmi:id="_5WsZIX4eEei25uY0cniCVg"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om76-X4IEei25uY0cniCVg"/>
        <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Soundex/Soundex_Frequency_Table_0.1.definition#_VGep4Pa7Ed24-N3PsP_o-w"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_50WlYH4eEei25uY0cniCVg" body="SELECT * FROM (SELECT MAX(&quot;MERCHANT_NAME&quot;), SOUNDEX(&quot;MERCHANT_NAME&quot;), COUNT(*) c, COUNT(DISTINCT &quot;MERCHANT_NAME&quot;) d FROM &quot;ORACLE&quot;.&quot;MERCHANT_TABLE&quot; t  GROUP BY SOUNDEX(&quot;MERCHANT_NAME&quot;) ORDER BY d DESC,c DESC) WHERE ROWNUM &lt;= 10" language="Oracle"/>
        <builtInIndicatorDefinition xmi:id="_5tKYQH4eEei25uY0cniCVg" name="Soundex Frequency Table" label="Soundex Frequency Table">
          <taggedValue xmi:id="_5tKYQX4eEei25uY0cniCVg" tag="Description" value="counts the number of records for each record with a distinct soundex"/>
          <taggedValue xmi:id="_5tKYQn4eEei25uY0cniCVg" tag="Purpose" value="evaluates the most frequent records with respect to their soundex value"/>
          <sqlGenericExpression xmi:id="_5tKYQ34eEei25uY0cniCVg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>), COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SOUNDEX(&lt;%=__COLUMN_NAMES__%>) ORDER BY d DESC,c DESC" language="SQL"/>
          <sqlGenericExpression xmi:id="_5tKYRH4eEei25uY0cniCVg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>) , COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY 2 ORDER BY d DESC,c DESC" language="MySQL"/>
          <sqlGenericExpression xmi:id="_5tKYRX4eEei25uY0cniCVg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>), COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SOUNDEX(&lt;%=__COLUMN_NAMES__%>) ORDER BY d DESC,c DESC" language="Oracle"/>
          <sqlGenericExpression xmi:id="_5tKYRn4eEei25uY0cniCVg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>),  COUNT(*), COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SOUNDEX(&lt;%=__COLUMN_NAMES__%>) ORDER BY COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) DESC , COUNT(*) DESC" language="PostgreSQL"/>
          <sqlGenericExpression xmi:id="_5tKYR34eEei25uY0cniCVg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>), COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SOUNDEX(&lt;%=__COLUMN_NAMES__%>) ORDER BY d DESC,c DESC" language="DB2"/>
          <sqlGenericExpression xmi:id="_5tKYSH4eEei25uY0cniCVg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>), COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SOUNDEX(&lt;%=__COLUMN_NAMES__%>) ORDER BY d DESC,c DESC" language="Teradata"/>
          <sqlGenericExpression xmi:id="_5tKYSX4eEei25uY0cniCVg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>), COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SOUNDEX(&lt;%=__COLUMN_NAMES__%>) ORDER BY d DESC,c DESC" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_5tKYSn4eEei25uY0cniCVg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>) , COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY 2 ORDER BY d DESC,c DESC" language="Informix"/>
          <sqlGenericExpression xmi:id="_5tKYS34eEei25uY0cniCVg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>) , COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY 2 ORDER BY d DESC,c DESC" language="Ingres"/>
          <sqlGenericExpression xmi:id="_5tKYTH4eEei25uY0cniCVg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), NYSIIS(&lt;%=__COLUMN_NAMES__%>) , COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY 2 ORDER BY d DESC,c DESC" language="Netezza"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RowCountIndicator" xmi:id="_5WsZI34eEei25uY0cniCVg" count="1901" computed="true">
        <parameters xmi:id="_5WsZJH4eEei25uY0cniCVg"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om76_X4IEei25uY0cniCVg"/>
        <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Row_Count_0.1.definition#_ccFOkBF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_50TiFH4eEei25uY0cniCVg" body="SELECT COUNT(*) FROM &quot;ORACLE&quot;.&quot;MERCHANT_TABLE&quot; " language="Oracle"/>
        <builtInIndicatorDefinition xmi:id="_5tOCoH4eEei25uY0cniCVg" name="Row Count" label="Row Count">
          <taggedValue xmi:id="_5tOCoX4eEei25uY0cniCVg" tag="Description" value="counts the number of rows"/>
          <taggedValue xmi:id="_5tOCon4eEei25uY0cniCVg" tag="Purpose" value="evaluates the number of records"/>
          <sqlGenericExpression xmi:id="_5tOCo34eEei25uY0cniCVg" body="SELECT COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:NullCountIndicator" xmi:id="_5WsZJX4eEei25uY0cniCVg" count="1901" computed="true">
        <parameters xmi:id="_5WsZJn4eEei25uY0cniCVg"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om76_X4IEei25uY0cniCVg"/>
        <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Null_Count_0.1.definition#_GrAeADh9Ed2XmO7pl5Yuyg"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_50WlYX4eEei25uY0cniCVg" body="SELECT COUNT(*) FROM &quot;ORACLE&quot;.&quot;MERCHANT_TABLE&quot; WHERE &quot;MERCHANT_CITY&quot; IS NULL " language="Oracle"/>
        <builtInIndicatorDefinition xmi:id="_5tRtAH4eEei25uY0cniCVg" name="Null Count" label="Null Count">
          <taggedValue xmi:id="_5tRtAX4eEei25uY0cniCVg" tag="Purpose" value="evaluate the number of missing data (null records)"/>
          <taggedValue xmi:id="_5tRtAn4eEei25uY0cniCVg" tag="Description" value="counts the number of null rows"/>
          <sqlGenericExpression xmi:id="_5tRtA34eEei25uY0cniCVg" body="SELECT COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE &lt;%=__COLUMN_NAMES__%> IS NULL &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:DistinctCountIndicator" xmi:id="_5WsZJ34eEei25uY0cniCVg" count="1901" computed="true" distinctValueCount="84">
        <parameters xmi:id="_5WsZKH4eEei25uY0cniCVg"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om76_X4IEei25uY0cniCVg"/>
        <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Distinct_Count_0.1.definition#_ccHq0BF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_50WlYn4eEei25uY0cniCVg" body="SELECT COUNT(*) FROM (SELECT DISTINCT &quot;MERCHANT_CITY&quot; FROM &quot;ORACLE&quot;.&quot;MERCHANT_TABLE&quot; ) A" language="Oracle"/>
        <builtInIndicatorDefinition xmi:id="_5tUwUH4eEei25uY0cniCVg" name="Distinct Count" label="Distinct Count">
          <taggedValue xmi:id="_5tUwUX4eEei25uY0cniCVg" tag="Description" value="counts the number of distinct rows (like a &quot;SELECT DISTINCT&quot; SQL statement)"/>
          <taggedValue xmi:id="_5tUwUn4eEei25uY0cniCVg" tag="Purpose" value="evaluates the number of distinct records"/>
          <sqlGenericExpression xmi:id="_5tUwU34eEei25uY0cniCVg" body="SELECT COUNT(*) FROM (SELECT DISTINCT &lt;%=__COLUMN_NAMES__%> FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>) A" language="SQL"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:UniqueCountIndicator" xmi:id="_5WsZKX4eEei25uY0cniCVg" count="1901" computed="true" uniqueValueCount="29">
        <parameters xmi:id="_5WsZKn4eEei25uY0cniCVg"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om76_X4IEei25uY0cniCVg"/>
        <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Unique_Count_0.1.definition#_ccHq0RF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_50WlY34eEei25uY0cniCVg" body="SELECT COUNT(*) FROM (SELECT &quot;MERCHANT_CITY&quot;, COUNT(*) FROM &quot;ORACLE&quot;.&quot;MERCHANT_TABLE&quot;  GROUP BY &quot;MERCHANT_CITY&quot; HAVING COUNT(*) = 1) myquery" language="Oracle"/>
        <builtInIndicatorDefinition xmi:id="_5tZBwH4eEei25uY0cniCVg" name="Unique Count" label="Unique Count">
          <taggedValue xmi:id="_5tZBwX4eEei25uY0cniCVg" tag="Description" value="counts the number of unique rows (i.e. distinct rows with only one instance: rows that are not duplicated)"/>
          <taggedValue xmi:id="_5tZBwn4eEei25uY0cniCVg" tag="Purpose" value="evaluates the number of unique records"/>
          <sqlGenericExpression xmi:id="_5tZBw34eEei25uY0cniCVg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) AS myquery" language="SQL"/>
          <sqlGenericExpression xmi:id="_5tZBxH4eEei25uY0cniCVg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount = 1) AS myquery" language="MySQL"/>
          <sqlGenericExpression xmi:id="_5tZBxX4eEei25uY0cniCVg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) myquery" language="Oracle"/>
          <sqlGenericExpression xmi:id="_5tZBxn4eEei25uY0cniCVg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount = 1) AS myquery" language="Teradata"/>
          <sqlGenericExpression xmi:id="_5tZBx34eEei25uY0cniCVg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) AS myquery" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_5tZByH4eEei25uY0cniCVg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) AS myquery" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
          <sqlGenericExpression xmi:id="_5tZByX4eEei25uY0cniCVg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1)  myquery" language="Hive" version=""/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:DuplicateCountIndicator" xmi:id="_5WsZK34eEei25uY0cniCVg" count="1901" computed="true" duplicateValueCount="55">
        <parameters xmi:id="_5WsZLH4eEei25uY0cniCVg"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om76_X4IEei25uY0cniCVg"/>
        <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Duplicate_Count_0.1.definition#_ccHq0hF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_50WlZH4eEei25uY0cniCVg" body="SELECT COUNT(*) FROM (SELECT &quot;MERCHANT_CITY&quot;, COUNT(*) mycount FROM &quot;ORACLE&quot;.&quot;MERCHANT_TABLE&quot;  m  GROUP BY &quot;MERCHANT_CITY&quot; HAVING COUNT(*) > 1) myquery" language="Oracle"/>
        <builtInIndicatorDefinition xmi:id="_5tcsIH4eEei25uY0cniCVg" name="Duplicate Count" label="Duplicate Count">
          <taggedValue xmi:id="_5tcsIX4eEei25uY0cniCVg" tag="Description" value="counts the number of duplicate rows. This number and the number of unique data equals the number of distinct rows"/>
          <taggedValue xmi:id="_5tcsIn4eEei25uY0cniCVg" tag="Purpose" value="evaluates the number of duplicated records"/>
          <sqlGenericExpression xmi:id="_5tcsI34eEei25uY0cniCVg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) AS myquery" language="SQL"/>
          <sqlGenericExpression xmi:id="_5tcsJH4eEei25uY0cniCVg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount > 1) AS myquery" language="MySQL"/>
          <sqlGenericExpression xmi:id="_5tcsJX4eEei25uY0cniCVg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) myquery" language="Oracle"/>
          <sqlGenericExpression xmi:id="_5tcsJn4eEei25uY0cniCVg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount > 1) AS myquery" language="Teradata"/>
          <sqlGenericExpression xmi:id="_5tcsJ34eEei25uY0cniCVg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) myquery" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_5tcsKH4eEei25uY0cniCVg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) AS myquery" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
          <sqlGenericExpression xmi:id="_5tcsKX4eEei25uY0cniCVg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) myquery" language="Hive"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:BlankCountIndicator" xmi:id="_5WsZLX4eEei25uY0cniCVg" count="1901" computed="true">
        <parameters xmi:id="_5WsZLn4eEei25uY0cniCVg"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om76_X4IEei25uY0cniCVg"/>
        <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Blank_Count_0.1.definition#_ccHq0xF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_50WlZX4eEei25uY0cniCVg" body="SELECT COUNT(&quot;MERCHANT_CITY&quot;) FROM &quot;ORACLE&quot;.&quot;MERCHANT_TABLE&quot;  WHERE TRIM(&quot;MERCHANT_CITY&quot;) IS NULL " language="Oracle"/>
        <builtInIndicatorDefinition xmi:id="_5tgWgH4eEei25uY0cniCVg" name="Blank Count" label="Blank Count">
          <taggedValue xmi:id="_5tgWgX4eEei25uY0cniCVg" tag="Description" value="counts the number of blank rows. A blank is a non null textual data that contains only white spaces (or nothing). Note that Oracle does not distinguish between the empty string and the null value"/>
          <taggedValue xmi:id="_5tgWgn4eEei25uY0cniCVg" tag="Purpose" value="evaluates the number of blank records"/>
          <sqlGenericExpression xmi:id="_5tgWg34eEei25uY0cniCVg" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE TRIM(&lt;%=__COLUMN_NAMES__%>) = '' &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
          <sqlGenericExpression xmi:id="_5tgWhH4eEei25uY0cniCVg" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE TRIM(&lt;%=__COLUMN_NAMES__%>) IS NULL &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
          <sqlGenericExpression xmi:id="_5tgWhX4eEei25uY0cniCVg" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE LTRIM(RTRIM(&lt;%=__COLUMN_NAMES__%>)) = '' &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
          <sqlGenericExpression xmi:id="_5tgWhn4eEei25uY0cniCVg" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE LTRIM(RTRIM(&lt;%=__COLUMN_NAMES__%>)) = '' &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_5tgWh34eEei25uY0cniCVg" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> = '' or RTRIM(LTRIM(&lt;%=__COLUMN_NAMES__%>)) = '') &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:TextIndicator" xmi:id="_5WsZL34eEei25uY0cniCVg">
        <parameters xmi:id="_5WsZMH4eEei25uY0cniCVg"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om76_X4IEei25uY0cniCVg"/>
        <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Text_Statistics_0.1.definition#_yb9x0zh8Ed2XmO7pl5Yuyg"/>
        <averageLengthIndicator xmi:id="_5WsZMX4eEei25uY0cniCVg" count="1901" computed="true" sumLength="14397.0">
          <parameters xmi:id="_5WsZMn4eEei25uY0cniCVg">
            <textParameter xmi:id="_5WsZM34eEei25uY0cniCVg" useBlank="false"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om76_X4IEei25uY0cniCVg"/>
          <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Average_Length_0.1.definition#_ccIR4BF2Ed2PKb6nEJEvhw"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_50WlZn4eEei25uY0cniCVg" body="SELECT SUM(LENGTH(&quot;MERCHANT_CITY&quot;)), COUNT(&quot;MERCHANT_CITY&quot;) FROM &quot;ORACLE&quot;.&quot;MERCHANT_TABLE&quot; WHERE (&quot;MERCHANT_CITY&quot; IS NOT NULL ) AND (TRIM(NVL(&quot;MERCHANT_CITY&quot;,'NULL TALEND')) IS NOT NULL) " language="Oracle"/>
          <builtInIndicatorDefinition xmi:id="_5tkn8H4eEei25uY0cniCVg" name="Average Length" label="Average Length">
            <taggedValue xmi:id="_5tkn8X4eEei25uY0cniCVg" tag="Description" value="computes the average length of the field. Does not take into account the null values when computing the average."/>
            <taggedValue xmi:id="_5tkn8n4eEei25uY0cniCVg" tag="Purpose" value="evaluates the average length of the textual record"/>
            <sqlGenericExpression xmi:id="_5tkn834eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_5tkn9H4eEei25uY0cniCVg" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_5tkn9X4eEei25uY0cniCVg" body="SELECT SUM(LEN(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_5tkn9n4eEei25uY0cniCVg" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_5tkn934eEei25uY0cniCVg" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_5tkn-H4eEei25uY0cniCVg" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_5tkn-X4eEei25uY0cniCVg" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_5tkn-n4eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_5tkn-34eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_5tkn_H4eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )), COUNT( &lt;%=__COLUMN_NAMES__%> ) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) AND ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_5tkn_X4eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_5tkn_n4eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
          </builtInIndicatorDefinition>
        </averageLengthIndicator>
        <maxLengthIndicator xmi:id="_5WsZNH4eEei25uY0cniCVg" computed="true" length="17">
          <parameters xmi:id="_5WsZNX4eEei25uY0cniCVg">
            <textParameter xmi:id="_5WsZNn4eEei25uY0cniCVg" useBlank="false"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om76_X4IEei25uY0cniCVg"/>
          <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Maximal_Length_0.1.definition#_ccHq1RF2Ed2PKb6nEJEvhw"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_50WlZ34eEei25uY0cniCVg" body="SELECT MAX( LENGTH(&quot;MERCHANT_CITY&quot;) ) FROM &quot;ORACLE&quot;.&quot;MERCHANT_TABLE&quot; WHERE (&quot;MERCHANT_CITY&quot; IS NOT NULL ) AND (TRIM(NVL(&quot;MERCHANT_CITY&quot;,'NULL TALEND')) IS NOT NULL) " language="Oracle"/>
          <builtInIndicatorDefinition xmi:id="_5toSUH4eEei25uY0cniCVg" name="Maximal Length" label="Maximal Length">
            <taggedValue xmi:id="_5toSUX4eEei25uY0cniCVg" tag="Description" value="computes the maximal length of a text field."/>
            <taggedValue xmi:id="_5toSUn4eEei25uY0cniCVg" tag="Purpose" value="evaluates the length of the longest textual record"/>
            <sqlGenericExpression xmi:id="_5toSU34eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_5toSVH4eEei25uY0cniCVg" body="SELECT MAX( LENGTH(&lt;%=__COLUMN_NAMES__%>) ) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle" modificationDate=""/>
            <sqlGenericExpression xmi:id="_5toSVX4eEei25uY0cniCVg" body="SELECT MAX(LEN(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_5toSVn4eEei25uY0cniCVg" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_5toSV34eEei25uY0cniCVg" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_5toSWH4eEei25uY0cniCVg" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_5toSWX4eEei25uY0cniCVg" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive" modificationDate=""/>
            <sqlGenericExpression xmi:id="_5toSWn4eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_5toSW34eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' )  &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_5toSXH4eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) AND ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_5toSXX4eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_5toSXn4eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
          </builtInIndicatorDefinition>
        </maxLengthIndicator>
        <minLengthIndicator xmi:id="_5WsZN34eEei25uY0cniCVg" computed="true" length="4">
          <parameters xmi:id="_5WsZOH4eEei25uY0cniCVg">
            <textParameter xmi:id="_5WsZOX4eEei25uY0cniCVg" useBlank="false"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om76_X4IEei25uY0cniCVg"/>
          <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Minimal_Length_0.1.definition#_ccHq1BF2Ed2PKb6nEJEvhw"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_50WlaH4eEei25uY0cniCVg" body="SELECT MIN( LENGTH(&quot;MERCHANT_CITY&quot;) ) FROM &quot;ORACLE&quot;.&quot;MERCHANT_TABLE&quot; WHERE (&quot;MERCHANT_CITY&quot; IS NOT NULL ) AND (TRIM(NVL(&quot;MERCHANT_CITY&quot;,'NULL TALEND')) IS NOT NULL) " language="Oracle"/>
          <builtInIndicatorDefinition xmi:id="_5tr8sH4eEei25uY0cniCVg" name="Minimal Length" label="Minimal Length">
            <taggedValue xmi:id="_5tr8sX4eEei25uY0cniCVg" tag="Description" value="computes the minimal length of a text field. Does not take into account the null values when computing the minimal length."/>
            <taggedValue xmi:id="_5tr8sn4eEei25uY0cniCVg" tag="Purpose" value="evaluates the length of the smallest textual record"/>
            <sqlGenericExpression xmi:id="_5tr8s34eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_5tr8tH4eEei25uY0cniCVg" body="SELECT MIN( LENGTH(&lt;%=__COLUMN_NAMES__%>) ) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_5tr8tX4eEei25uY0cniCVg" body="SELECT MIN(LEN(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_5tr8tn4eEei25uY0cniCVg" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_5tr8t34eEei25uY0cniCVg" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_5tr8uH4eEei25uY0cniCVg" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_5tr8uX4eEei25uY0cniCVg" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_5tr8un4eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_5tr8u34eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_5tr8vH4eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) AND ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_5tr8vX4eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (1=1) AND (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_5tr8vn4eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
          </builtInIndicatorDefinition>
        </minLengthIndicator>
        <minLengthWithBlankIndicator xmi:id="_5WsZOn4eEei25uY0cniCVg" computed="true" length="4">
          <parameters xmi:id="_5WsZO34eEei25uY0cniCVg">
            <textParameter xmi:id="_5WsZPH4eEei25uY0cniCVg"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om76_X4IEei25uY0cniCVg"/>
          <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Minimal_Length_With_Blank_0.1.definition#_G4EzQZU9Ed-Y15ulK_jijQ"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_50Wlb34eEei25uY0cniCVg" body="SELECT MIN( LENGTH(&quot;MERCHANT_CITY&quot;) ) FROM &quot;ORACLE&quot;.&quot;MERCHANT_TABLE&quot; WHERE (&quot;MERCHANT_CITY&quot; IS NOT NULL ) " language="Oracle"/>
          <builtInIndicatorDefinition xmi:id="_5uHagH4eEei25uY0cniCVg" name="Minimal Length With Blank" label="Minimal Length With Blank">
            <taggedValue xmi:id="_5uHagX4eEei25uY0cniCVg" tag="Description" value="computes the minimal length of a text field, counting blank as zero length values."/>
            <taggedValue xmi:id="_5uHagn4eEei25uY0cniCVg" tag="Purpose" value="evaluates the length of the smallest textual record"/>
            <sqlGenericExpression xmi:id="_5uHag34eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_5uHahH4eEei25uY0cniCVg" body="SELECT MIN( LENGTH(&lt;%=__COLUMN_NAMES__%>) ) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_5uHahX4eEei25uY0cniCVg" body="SELECT MIN(LEN(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_5uHahn4eEei25uY0cniCVg" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_5uHah34eEei25uY0cniCVg" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_5uHaiH4eEei25uY0cniCVg" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_5uHaiX4eEei25uY0cniCVg" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_5uHain4eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_5uHai34eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_5uHajH4eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_5uHajX4eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
          </builtInIndicatorDefinition>
        </minLengthWithBlankIndicator>
        <minLengthWithNullIndicator xmi:id="_5WsZPX4eEei25uY0cniCVg" computed="true" length="4">
          <parameters xmi:id="_5WsZPn4eEei25uY0cniCVg">
            <textParameter xmi:id="_5WsZP34eEei25uY0cniCVg" useBlank="false" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om76_X4IEei25uY0cniCVg"/>
          <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Minimal_Length_With_Null_0.1.definition#_a4KsoI1qEd-xwI2imLgHRA"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_50WlcH4eEei25uY0cniCVg" body="SELECT MIN(CASE WHEN &quot;MERCHANT_CITY&quot; IS NULL THEN 0 ELSE LENGTH(&quot;MERCHANT_CITY&quot;) END) FROM &quot;ORACLE&quot;.&quot;MERCHANT_TABLE&quot; WHERE (TRIM(NVL(&quot;MERCHANT_CITY&quot;,'NULL TALEND')) IS NOT NULL) " language="Oracle"/>
          <builtInIndicatorDefinition xmi:id="_5uLr8H4eEei25uY0cniCVg" name="Minimal Length With Null" label="Minimal Length With Null">
            <taggedValue xmi:id="_5uLr8X4eEei25uY0cniCVg" tag="Description" value="computes the minimal length of a text field, counting null as zero length values."/>
            <taggedValue xmi:id="_5uLr8n4eEei25uY0cniCVg" tag="Purpose" value="evaluates the length of the smallest textual record"/>
            <sqlGenericExpression xmi:id="_5uLr834eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_5uLr9H4eEei25uY0cniCVg" body="SELECT MIN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_5uLr9X4eEei25uY0cniCVg" body="SELECT MIN(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_5uLr9n4eEei25uY0cniCVg" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_5uLr934eEei25uY0cniCVg" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_5uLr-H4eEei25uY0cniCVg" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_5uLr-X4eEei25uY0cniCVg" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_5uLr-n4eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_5uLr-34eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_5uLr_H4eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_5uLr_X4eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_5uLr_n4eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
          </builtInIndicatorDefinition>
        </minLengthWithNullIndicator>
        <minLengthWithBlankNullIndicator xmi:id="_5WsZQH4eEei25uY0cniCVg" computed="true" length="4">
          <parameters xmi:id="_5WsZQX4eEei25uY0cniCVg">
            <textParameter xmi:id="_5WsZQn4eEei25uY0cniCVg" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om76_X4IEei25uY0cniCVg"/>
          <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Minimal_Length_With_Blank_and_Null_0.1.definition#_9HDjMJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_50WlcX4eEei25uY0cniCVg" body="SELECT MIN(CASE WHEN &quot;MERCHANT_CITY&quot; IS NULL  THEN 0 ELSE LENGTH(&quot;MERCHANT_CITY&quot;) END) FROM &quot;ORACLE&quot;.&quot;MERCHANT_TABLE&quot; " language="Oracle"/>
          <builtInIndicatorDefinition xmi:id="_5uP9YH4eEei25uY0cniCVg" name="Minimal Length With Blank and Null" label="Minimal Length With Blank and Null">
            <taggedValue xmi:id="_5uP9YX4eEei25uY0cniCVg" tag="Description" value="computes the minimal length of a text field, counting blank and null as zero length values."/>
            <taggedValue xmi:id="_5uP9Yn4eEei25uY0cniCVg" tag="Purpose" value="evaluates the length of the smallest textual record"/>
            <sqlGenericExpression xmi:id="_5uP9Y34eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_5uP9ZH4eEei25uY0cniCVg" body="SELECT MIN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_5uP9ZX4eEei25uY0cniCVg" body="SELECT MIN(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_5uP9Zn4eEei25uY0cniCVg" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_5uP9Z34eEei25uY0cniCVg" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_5uP9aH4eEei25uY0cniCVg" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_5uP9aX4eEei25uY0cniCVg" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_5uP9an4eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_5uP9a34eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_5uP9bH4eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END )) FROM  &lt;%=__TABLE_NAME__%>   &lt;%=__WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_5uP9bX4eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_5uP9bn4eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Netezza"/>
          </builtInIndicatorDefinition>
        </minLengthWithBlankNullIndicator>
        <maxLengthWithBlankIndicator xmi:id="_5WsZQ34eEei25uY0cniCVg" computed="true" length="17">
          <parameters xmi:id="_5WsZRH4eEei25uY0cniCVg">
            <textParameter xmi:id="_5WsZRX4eEei25uY0cniCVg"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om76_X4IEei25uY0cniCVg"/>
          <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Maximal_Length_With_Blank_0.1.definition#_-xmZcJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_50WlbH4eEei25uY0cniCVg" body="SELECT MAX( LENGTH(&quot;MERCHANT_CITY&quot;) ) FROM &quot;ORACLE&quot;.&quot;MERCHANT_TABLE&quot; WHERE (&quot;MERCHANT_CITY&quot; IS NOT NULL ) " language="Oracle"/>
          <builtInIndicatorDefinition xmi:id="_5t70UH4eEei25uY0cniCVg" name="Maximal Length With Blank" label="Maximal Length With Blank">
            <taggedValue xmi:id="_5t70UX4eEei25uY0cniCVg" tag="Description" value="computes the maximal length of a text field, counting blank data  as zero length values."/>
            <taggedValue xmi:id="_5t70Un4eEei25uY0cniCVg" tag="Purpose" value="evaluates the length of the longest textual record"/>
            <sqlGenericExpression xmi:id="_5t70U34eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_5t70VH4eEei25uY0cniCVg" body="SELECT MAX( LENGTH(&lt;%=__COLUMN_NAMES__%>) ) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_5t70VX4eEei25uY0cniCVg" body="SELECT MAX(LEN(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_5t70Vn4eEei25uY0cniCVg" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_5t70V34eEei25uY0cniCVg" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_5t70WH4eEei25uY0cniCVg" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_5t70WX4eEei25uY0cniCVg" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_5t70Wn4eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_5t70W34eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_5t70XH4eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_5t70XX4eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
          </builtInIndicatorDefinition>
        </maxLengthWithBlankIndicator>
        <maxLengthWithNullIndicator xmi:id="_5WsZRn4eEei25uY0cniCVg" computed="true" length="17">
          <parameters xmi:id="_5WsZR34eEei25uY0cniCVg">
            <textParameter xmi:id="_5WsZSH4eEei25uY0cniCVg" useBlank="false" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om76_X4IEei25uY0cniCVg"/>
          <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Maximal_Length_With_Null_0.1.definition#_-_UFUJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_50WlbX4eEei25uY0cniCVg" body="SELECT MAX(CASE WHEN &quot;MERCHANT_CITY&quot; IS NULL THEN 0 ELSE LENGTH(&quot;MERCHANT_CITY&quot;) END) FROM &quot;ORACLE&quot;.&quot;MERCHANT_TABLE&quot; WHERE (TRIM(NVL(&quot;MERCHANT_CITY&quot;,'NULL TALEND')) IS NOT NULL) " language="Oracle"/>
          <builtInIndicatorDefinition xmi:id="_5t_esH4eEei25uY0cniCVg" name="Maximal Length With Null" label="Maximal Length With Null">
            <taggedValue xmi:id="_5t_esX4eEei25uY0cniCVg" tag="Description" value="computes the maximal length of a text field, counting null data as zero length values."/>
            <taggedValue xmi:id="_5t_esn4eEei25uY0cniCVg" tag="Purpose" value="evaluates the length of the longest textual record"/>
            <sqlGenericExpression xmi:id="_5t_es34eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_5t_etH4eEei25uY0cniCVg" body="SELECT MAX(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_5t_etX4eEei25uY0cniCVg" body="SELECT MAX(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_5t_etn4eEei25uY0cniCVg" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_5t_et34eEei25uY0cniCVg" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_5t_euH4eEei25uY0cniCVg" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_5t_euX4eEei25uY0cniCVg" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive" version=""/>
            <sqlGenericExpression xmi:id="_5t_eun4eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_5t_eu34eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_5t_evH4eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_5t_evX4eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_5t_evn4eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
          </builtInIndicatorDefinition>
        </maxLengthWithNullIndicator>
        <maxLengthWithBlankNullIndicator xmi:id="_5WsZSX4eEei25uY0cniCVg" computed="true" length="17">
          <parameters xmi:id="_5WsZSn4eEei25uY0cniCVg">
            <textParameter xmi:id="_5WsZS34eEei25uY0cniCVg" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om76_X4IEei25uY0cniCVg"/>
          <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Maximal_Length_With_Blank_and_Null_0.1.definition#_-hzp8JSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_50Wlbn4eEei25uY0cniCVg" body="SELECT MAX(CASE WHEN &quot;MERCHANT_CITY&quot; IS NULL  THEN 0 ELSE LENGTH(&quot;MERCHANT_CITY&quot;) END) FROM &quot;ORACLE&quot;.&quot;MERCHANT_TABLE&quot; " language="Oracle"/>
          <builtInIndicatorDefinition xmi:id="_5uDwIH4eEei25uY0cniCVg" name="Maximal Length With Blank and Null" label="Maximal Length With Blank and Null">
            <taggedValue xmi:id="_5uDwIX4eEei25uY0cniCVg" tag="Description" value="computes the maximal length of a text field, counting null and blank data as zero length values."/>
            <taggedValue xmi:id="_5uDwIn4eEei25uY0cniCVg" tag="Purpose" value="evaluates the length of the longest textual record"/>
            <sqlGenericExpression xmi:id="_5uDwI34eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_5uDwJH4eEei25uY0cniCVg" body="SELECT MAX(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_5uDwJX4eEei25uY0cniCVg" body="SELECT MAX(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_5uDwJn4eEei25uY0cniCVg" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_5uDwJ34eEei25uY0cniCVg" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_5uDwKH4eEei25uY0cniCVg" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_5uDwKX4eEei25uY0cniCVg" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_5uDwKn4eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_5uDwK34eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_5uDwLH4eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END )) FROM  &lt;%=__TABLE_NAME__%>   &lt;%=__WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_5uDwLX4eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_5uDwLn4eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Netezza"/>
          </builtInIndicatorDefinition>
        </maxLengthWithBlankNullIndicator>
        <avgLengthWithBlankIndicator xmi:id="_5WsZTH4eEei25uY0cniCVg" count="1901" computed="true" sumLength="14397.0">
          <parameters xmi:id="_5WsZTX4eEei25uY0cniCVg">
            <textParameter xmi:id="_5WsZTn4eEei25uY0cniCVg"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om76_X4IEei25uY0cniCVg"/>
          <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Average_Length_With_Blank_0.1.definition#__gPoIJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_50WlaX4eEei25uY0cniCVg" body="SELECT SUM(CASE WHEN &quot;MERCHANT_CITY&quot; IS NOT NULL AND  TRIM(&quot;MERCHANT_CITY&quot;) IS NULL THEN 0 ELSE  LENGTH(&quot;MERCHANT_CITY&quot;)END), COUNT(*) FROM &quot;ORACLE&quot;.&quot;MERCHANT_TABLE&quot; WHERE (&quot;MERCHANT_CITY&quot; IS NOT NULL ) " language="Oracle"/>
          <builtInIndicatorDefinition xmi:id="_5tvnEH4eEei25uY0cniCVg" name="Average Length With Blank" label="Average Length With Blank">
            <taggedValue xmi:id="_5tvnEX4eEei25uY0cniCVg" tag="Description" value="computes the average length of the field, counting blank data as zero length values."/>
            <taggedValue xmi:id="_5tvnEn4eEei25uY0cniCVg" tag="Purpose" value="evaluates the average length of the textual record"/>
            <sqlGenericExpression xmi:id="_5tvnE34eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH(CASE WHEN   CHAR_LENGTH( TRIM(&lt;%=__COLUMN_NAMES__%>) ) =0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_5tvnFH4eEei25uY0cniCVg" body="SELECT SUM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NOT NULL AND  TRIM(&lt;%=__COLUMN_NAMES__%>) IS NULL THEN 0 ELSE  LENGTH(&lt;%=__COLUMN_NAMES__%>)END), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_5tvnFX4eEei25uY0cniCVg" body="SELECT SUM(LEN(CASE WHEN  LEN( LTRIM(RTRIM(&lt;%=__COLUMN_NAMES__%>)) )=0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_5tvnFn4eEei25uY0cniCVg" body="SELECT SUM(LENGTH(CASE WHEN   LENGTH( TRIM(&lt;%=__COLUMN_NAMES__%>) ) =0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_5tvnF34eEei25uY0cniCVg" body="SELECT SUM(LENGTH(CASE WHEN   LENGTH( TRIM(&lt;%=__COLUMN_NAMES__%>) ) =0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_5tvnGH4eEei25uY0cniCVg" body="SELECT SUM(LENGTH(CASE WHEN   LENGTH( TRIM(&lt;%=__COLUMN_NAMES__%>) ) =0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_5twOIH4eEei25uY0cniCVg" body="SELECT SUM(LENGTH(CASE WHEN   LENGTH( TRIM(&lt;%=__COLUMN_NAMES__%>) ) =0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_5twOIX4eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( TRIM(&lt;%=__COLUMN_NAMES__%>) ) =0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_5twOIn4eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( LTRIM(RTRIM(&lt;%=__COLUMN_NAMES__%>)) ) =0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_5twOI34eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( TRIM( &lt;%=__COLUMN_NAMES__%> ) ) =0  THEN '' ELSE   &lt;%=__COLUMN_NAMES__%>  END)), COUNT(*) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_5twOJH4eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( TRIM(&lt;%=__COLUMN_NAMES__%>) ) =0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
          </builtInIndicatorDefinition>
        </avgLengthWithBlankIndicator>
        <avgLengthWithNullIndicator xmi:id="_5WsZT34eEei25uY0cniCVg" count="1901" computed="true" sumLength="14397.0">
          <parameters xmi:id="_5WsZUH4eEei25uY0cniCVg">
            <textParameter xmi:id="_5WsZUX4eEei25uY0cniCVg" useBlank="false" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om76_X4IEei25uY0cniCVg"/>
          <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Average_Length_With_Null_0.1.definition#__vI_wJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_50Wlan4eEei25uY0cniCVg" body="SELECT SUM(CASE WHEN &quot;MERCHANT_CITY&quot; IS NULL THEN 0 ELSE LENGTH(&quot;MERCHANT_CITY&quot;) END), COUNT(*) FROM &quot;ORACLE&quot;.&quot;MERCHANT_TABLE&quot; WHERE (TRIM(NVL(&quot;MERCHANT_CITY&quot;,'NULL TALEND')) IS NOT NULL) " language="Oracle"/>
          <builtInIndicatorDefinition xmi:id="_5tz4gH4eEei25uY0cniCVg" name="Average Length With Null" label="Average Length With Null">
            <taggedValue xmi:id="_5tz4gX4eEei25uY0cniCVg" tag="Description" value="computes the average length of the field, counting null data as zero length values."/>
            <taggedValue xmi:id="_5tz4gn4eEei25uY0cniCVg" tag="Purpose" value="evaluates the average length of the textual record"/>
            <sqlGenericExpression xmi:id="_5tz4g34eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_5tz4hH4eEei25uY0cniCVg" body="SELECT SUM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_5tz4hX4eEei25uY0cniCVg" body="SELECT SUM(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_5tz4hn4eEei25uY0cniCVg" body="SELECT SUM(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_5tz4h34eEei25uY0cniCVg" body="SELECT SUM(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_5tz4iH4eEei25uY0cniCVg" body="SELECT SUM(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_5tz4iX4eEei25uY0cniCVg" body="SELECT SUM(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_5tz4in4eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_5tz4i34eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_5tz4jH4eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_5tz4jX4eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_5tz4jn4eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
          </builtInIndicatorDefinition>
        </avgLengthWithNullIndicator>
        <avgLengthWithBlankNullIndicator xmi:id="_5WsZUn4eEei25uY0cniCVg" count="1901" computed="true" sumLength="14397.0">
          <parameters xmi:id="_5WsZU34eEei25uY0cniCVg">
            <textParameter xmi:id="_5WsZVH4eEei25uY0cniCVg" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om76_X4IEei25uY0cniCVg"/>
          <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Average_Length_With_Blank_and_Null_0.1.definition#__TbUIJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_50Wla34eEei25uY0cniCVg" body="SELECT SUM(CASE WHEN &quot;MERCHANT_CITY&quot; IS NOT NULL AND  TRIM(&quot;MERCHANT_CITY&quot;) IS NULL THEN 0 ELSE CASE WHEN &quot;MERCHANT_CITY&quot; IS NULL THEN 0 ELSE LENGTH(&quot;MERCHANT_CITY&quot;) END  END), COUNT(*) FROM &quot;ORACLE&quot;.&quot;MERCHANT_TABLE&quot; " language="Oracle"/>
          <builtInIndicatorDefinition xmi:id="_5t3i4H4eEei25uY0cniCVg" name="Average Length With Blank and Null" label="Average Length With Blank and Null">
            <taggedValue xmi:id="_5t3i4X4eEei25uY0cniCVg" tag="Description" value="computes the average length of the field, counting blank and null data as zero lenght values."/>
            <taggedValue xmi:id="_5t3i4n4eEei25uY0cniCVg" tag="Purpose" value="evaluates the average length of the textual record"/>
            <sqlGenericExpression xmi:id="_5t3i434eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH(CASE WHEN   CHAR_LENGTH( TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'')) ) =0  THEN '' ELSE  IFNULL(&lt;%=__COLUMN_NAMES__%>,'') END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_5t3i5H4eEei25uY0cniCVg" body="SELECT SUM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NOT NULL AND  TRIM(&lt;%=__COLUMN_NAMES__%>) IS NULL THEN 0 ELSE CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END  END), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_5t3i5X4eEei25uY0cniCVg" body="SELECT SUM(LEN(CASE WHEN  LEN( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) )=0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_5t3i5n4eEei25uY0cniCVg" body="SELECT SUM(LENGTH(CASE WHEN   LENGTH( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END ) ) =0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_5t3i534eEei25uY0cniCVg" body="SELECT SUM(LENGTH(CASE WHEN   LENGTH( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END ) ) =0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_5t3i6H4eEei25uY0cniCVg" body="SELECT SUM(LENGTH(CASE WHEN   LENGTH( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END ) ) =0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_5t3i6X4eEei25uY0cniCVg" body="SELECT SUM(LENGTH(CASE WHEN   LENGTH( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END ) ) =0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_5t3i6n4eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END ) ) =0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_5t3i634eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) ) =0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_5t3i7H4eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END ) ) =0  THEN '' ELSE   CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END  END)), COUNT(*) FROM  &lt;%=__TABLE_NAME__%>   &lt;%=__WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_5t3i7X4eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END ) ) =0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_5t3i7n4eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH(CASE WHEN   CHAR_LENGTH( TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'')) ) =0  THEN '' ELSE  ISNULL(&lt;%=__COLUMN_NAMES__%>,'') END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Netezza"/>
          </builtInIndicatorDefinition>
        </avgLengthWithBlankNullIndicator>
      </indicators>
      <indicators xsi:type="dataquality.indicators:PatternFreqIndicator" xmi:id="_5WsZVX4eEei25uY0cniCVg" count="1901" computed="true" distinctValueCount="10" valueToFreq
        <parameters xmi:id="_5WsZVn4eEei25uY0cniCVg"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om76_X4IEei25uY0cniCVg"/>
        <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Pattern Frequency Statistics/Pattern_Frequency_Table_0.1.definition#_kQzTsJR-Ed2XO-JvLwVAwg"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_50XMcH4eEei25uY0cniCVg" body="SELECT * FROM (SELECT TRANSLATE(&quot;MERCHANT_CITY&quot; , 'abcdefghijklmnopqrstuvwxyzçâêîôûéèùïöüABCDEFGHIJKLMNOPQRSTUVWXYZÇÂÊÎÔÛÉÈÙÏÖÜ0123456789' , 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999'), COUNT(*) AS c FROM &quot;ORACLE&quot;.&quot;MERCHANT_TABLE&quot; t  GROUP BY TRANSLATE(&quot;MERCHANT_CITY&quot; , 'abcdefghijklmnopqrstuvwxyzçâêîôûéèùïöüABCDEFGHIJKLMNOPQRSTUVWXYZÇÂÊÎÔÛÉÈÙÏÖÜ0123456789' , 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999') ORDER BY c DESC) WHERE ROWNUM &lt;= 10" language="Oracle"/>
        <builtInIndicatorDefinition xmi:id="_5uUO0H4eEei25uY0cniCVg" name="Pattern Frequency Table" label="Pattern Frequency Table">
          <taggedValue xmi:id="_5uUO0X4eEei25uY0cniCVg" tag="Description" value="counts the number of records for each distinct pattern"/>
          <taggedValue xmi:id="_5uUO0n4eEei25uY0cniCVg" tag="Purpose" value="evaluates the most frequent patterns"/>
          <sqlGenericExpression xmi:id="_5uUO034eEei25uY0cniCVg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY c DESC" language="SQL"/>
          <sqlGenericExpression xmi:id="_5uUO1H4eEei25uY0cniCVg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY c DESC" language="MySQL"/>
          <sqlGenericExpression xmi:id="_5uUO1X4eEei25uY0cniCVg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) AS c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY c DESC" language="Oracle"/>
          <sqlGenericExpression xmi:id="_5uUO1n4eEei25uY0cniCVg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) AS c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY c DESC" language="PostgreSQL"/>
          <sqlGenericExpression xmi:id="_5uUO134eEei25uY0cniCVg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY c DESC" language="DB2"/>
          <sqlGenericExpression xmi:id="_5uUO2H4eEei25uY0cniCVg" body="SELECT &lt;%=__COLUMN_NAMES__%> , COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY c DESC" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_5uUO2X4eEei25uY0cniCVg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) AS c FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY c DESC" language="Informix"/>
          <sqlGenericExpression xmi:id="_5uUO2n4eEei25uY0cniCVg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY c DESC" language="AS/400"/>
          <sqlGenericExpression xmi:id="_5uUO234eEei25uY0cniCVg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY c DESC" language="Teradata"/>
          <sqlGenericExpression xmi:id="_5uUO3H4eEei25uY0cniCVg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) AS c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY c DESC" language="Vertica Database"/>
          <sqlGenericExpression xmi:id="_5uUO3X4eEei25uY0cniCVg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) AS c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY c DESC" language="Netezza"/>
          <charactersMapping xmi:id="_5uUO3n4eEei25uY0cniCVg" language="SQL" charactersToReplace="abcdefghijklmnopqrstuvwxyzçâêîôûéèùïöüABCDEFGHIJKLMNOPQRSTUVWXYZÇÂÊÎÔÛÉÈÙÏÖÜ0123456789" replacementCharacters="aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999"/>
          <charactersMapping xmi:id="_5uUO334eEei25uY0cniCVg" name="Characters mapping on MySQL" language="MySQL" charactersToReplace="abcdefghijklmnopqrstuvwxyzçâêîôûéèùïöüABCDEFGHIJKLMNOPQRSTUVWXYZÇÂÊÎÔÛÉÈÙÏÖÜ0123456789" replacementCharacters="aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999"/>
          <charactersMapping xmi:id="_5uUO4H4eEei25uY0cniCVg" name="Characters mapping on Oracle" language="Oracle" charactersToReplace="abcdefghijklmnopqrstuvwxyzçâêîôûéèùïöüABCDEFGHIJKLMNOPQRSTUVWXYZÇÂÊÎÔÛÉÈÙÏÖÜ0123456789" replacementCharacters="aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999"/>
          <charactersMapping xmi:id="_5uUO4X4eEei25uY0cniCVg" name="Characters mapping on PostgreSQL" language="PostgreSQL" charactersToReplace="abcdefghijklmnopqrstuvwxyzçâêîôûéèùïöüABCDEFGHIJKLMNOPQRSTUVWXYZÇÂÊÎÔÛÉÈÙÏÖÜ0123456789" replacementCharacters="aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999"/>
          <charactersMapping xmi:id="_5uUO4n4eEei25uY0cniCVg" name="Characters mapping on Microsoft SQL Server" language="Microsoft SQL Server" charactersToReplace="abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789" replacementCharacters="aaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999"/>
          <charactersMapping xmi:id="_5uUO434eEei25uY0cniCVg" name="Characters mapping on DB2" language="DB2" charactersToReplace="abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789" replacementCharacters="aaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999"/>
          <charactersMapping xmi:id="_5uUO5H4eEei25uY0cniCVg" name="Characters mapping on AS/400" language="AS/400" charactersToReplace="abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789" replacementCharacters="aaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999"/>
          <charactersMapping xmi:id="_5uUO5X4eEei25uY0cniCVg" name="Characters mapping on Informix" language="Informix" charactersToReplace="abcdefghijklmnopqrstuvwxyzçâêîôûéèùïöüABCDEFGHIJKLMNOPQRSTUVWXYZÇÂÊÎÔÛÉÈÙÏÖÜ0123456789" replacementCharacters="aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999"/>
          <charactersMapping xmi:id="_5uUO5n4eEei25uY0cniCVg" name="Characters mapping on Teradata" language="Teradata" charactersToReplace="abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789" replacementCharacters="aaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999"/>
          <charactersMapping xmi:id="_5uUO534eEei25uY0cniCVg" name="Characters mapping on Vertica" language="Vertica Database" charactersToReplace="abcdefghijklmnopqrstuvwxyzçâêîôûéèùïöüABCDEFGHIJKLMNOPQRSTUVWXYZÇÂÊÎÔÛÉÈÙÏÖÜ0123456789" replacementCharacters="aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999"/>
          <charactersMapping xmi:id="_5uUO6H4eEei25uY0cniCVg" language="Netezza" charactersToReplace="abcdefghijklmnopqrstuvwxyzçâêîôûéèùïöüABCDEFGHIJKLMNOPQRSTUVWXYZÇÂÊÎÔÛÉÈÙÏÖÜ0123456789" replacementCharacters="aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999"/>
          <charactersMapping xmi:id="_5uUO6X4eEei25uY0cniCVg" name="Characters mapping on Hive" language="Hive" charactersToReplace="0123456789abcdefghijklmnopqrstuvwxyz?aê???éèù??üABCDEFGHIJKLMNOPQRSTUVWXYZ??ê???éèù??ü" replacementCharacters="9999999999aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:SoundexFreqIndicator" xmi:id="_5WsZV34eEei25uY0cniCVg" count="1901" computed="true" distinctValueCount="10" valueToFreqvalueToDistinctFreq
        <parameters xmi:id="_5WsZWH4eEei25uY0cniCVg"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om76_X4IEei25uY0cniCVg"/>
        <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Soundex/Soundex_Frequency_Table_0.1.definition#_VGep4Pa7Ed24-N3PsP_o-w"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_50XMcX4eEei25uY0cniCVg" body="SELECT * FROM (SELECT MAX(&quot;MERCHANT_CITY&quot;), SOUNDEX(&quot;MERCHANT_CITY&quot;), COUNT(*) c, COUNT(DISTINCT &quot;MERCHANT_CITY&quot;) d FROM &quot;ORACLE&quot;.&quot;MERCHANT_TABLE&quot; t  GROUP BY SOUNDEX(&quot;MERCHANT_CITY&quot;) ORDER BY d DESC,c DESC) WHERE ROWNUM &lt;= 10" language="Oracle"/>
        <builtInIndicatorDefinition xmi:id="_5uYgQH4eEei25uY0cniCVg" name="Soundex Frequency Table" label="Soundex Frequency Table">
          <taggedValue xmi:id="_5uYgQX4eEei25uY0cniCVg" tag="Description" value="counts the number of records for each record with a distinct soundex"/>
          <taggedValue xmi:id="_5uYgQn4eEei25uY0cniCVg" tag="Purpose" value="evaluates the most frequent records with respect to their soundex value"/>
          <sqlGenericExpression xmi:id="_5uYgQ34eEei25uY0cniCVg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>), COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SOUNDEX(&lt;%=__COLUMN_NAMES__%>) ORDER BY d DESC,c DESC" language="SQL"/>
          <sqlGenericExpression xmi:id="_5uYgRH4eEei25uY0cniCVg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>) , COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY 2 ORDER BY d DESC,c DESC" language="MySQL"/>
          <sqlGenericExpression xmi:id="_5uYgRX4eEei25uY0cniCVg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>), COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SOUNDEX(&lt;%=__COLUMN_NAMES__%>) ORDER BY d DESC,c DESC" language="Oracle"/>
          <sqlGenericExpression xmi:id="_5uYgRn4eEei25uY0cniCVg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>),  COUNT(*), COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SOUNDEX(&lt;%=__COLUMN_NAMES__%>) ORDER BY COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) DESC , COUNT(*) DESC" language="PostgreSQL"/>
          <sqlGenericExpression xmi:id="_5uYgR34eEei25uY0cniCVg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>), COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SOUNDEX(&lt;%=__COLUMN_NAMES__%>) ORDER BY d DESC,c DESC" language="DB2"/>
          <sqlGenericExpression xmi:id="_5uYgSH4eEei25uY0cniCVg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>), COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SOUNDEX(&lt;%=__COLUMN_NAMES__%>) ORDER BY d DESC,c DESC" language="Teradata"/>
          <sqlGenericExpression xmi:id="_5uYgSX4eEei25uY0cniCVg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>), COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SOUNDEX(&lt;%=__COLUMN_NAMES__%>) ORDER BY d DESC,c DESC" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_5uYgSn4eEei25uY0cniCVg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>) , COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY 2 ORDER BY d DESC,c DESC" language="Informix"/>
          <sqlGenericExpression xmi:id="_5uYgS34eEei25uY0cniCVg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>) , COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY 2 ORDER BY d DESC,c DESC" language="Ingres"/>
          <sqlGenericExpression xmi:id="_5uYgTH4eEei25uY0cniCVg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), NYSIIS(&lt;%=__COLUMN_NAMES__%>) , COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY 2 ORDER BY d DESC,c DESC" language="Netezza"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RowCountIndicator" xmi:id="_5WsZWn4eEei25uY0cniCVg" count="1901" computed="true">
        <parameters xmi:id="_5WsZW34eEei25uY0cniCVg"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om77AX4IEei25uY0cniCVg"/>
        <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Row_Count_0.1.definition#_ccFOkBF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_50TiE34eEei25uY0cniCVg" body="SELECT COUNT(*) FROM &quot;ORACLE&quot;.&quot;MERCHANT_TABLE&quot; " language="Oracle"/>
        <builtInIndicatorDefinition xmi:id="_5ucxsH4eEei25uY0cniCVg" name="Row Count" label="Row Count">
          <taggedValue xmi:id="_5ucxsX4eEei25uY0cniCVg" tag="Description" value="counts the number of rows"/>
          <taggedValue xmi:id="_5ucxsn4eEei25uY0cniCVg" tag="Purpose" value="evaluates the number of records"/>
          <sqlGenericExpression xmi:id="_5ucxs34eEei25uY0cniCVg" body="SELECT COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:NullCountIndicator" xmi:id="_5WsZXH4eEei25uY0cniCVg" count="1901" computed="true">
        <parameters xmi:id="_5WsZXX4eEei25uY0cniCVg"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om77AX4IEei25uY0cniCVg"/>
        <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Null_Count_0.1.definition#_GrAeADh9Ed2XmO7pl5Yuyg"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_50XMcn4eEei25uY0cniCVg" body="SELECT COUNT(*) FROM &quot;ORACLE&quot;.&quot;MERCHANT_TABLE&quot; WHERE &quot;MERCHANT_ADDRESS&quot; IS NULL " language="Oracle"/>
        <builtInIndicatorDefinition xmi:id="_5uhDIH4eEei25uY0cniCVg" name="Null Count" label="Null Count">
          <taggedValue xmi:id="_5uhDIX4eEei25uY0cniCVg" tag="Purpose" value="evaluate the number of missing data (null records)"/>
          <taggedValue xmi:id="_5uhDIn4eEei25uY0cniCVg" tag="Description" value="counts the number of null rows"/>
          <sqlGenericExpression xmi:id="_5uhDI34eEei25uY0cniCVg" body="SELECT COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE &lt;%=__COLUMN_NAMES__%> IS NULL &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:DistinctCountIndicator" xmi:id="_5WsZXn4eEei25uY0cniCVg" count="1901" computed="true" distinctValueCount="1863">
        <parameters xmi:id="_5WsZX34eEei25uY0cniCVg"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om77AX4IEei25uY0cniCVg"/>
        <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Distinct_Count_0.1.definition#_ccHq0BF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_50XMc34eEei25uY0cniCVg" body="SELECT COUNT(*) FROM (SELECT DISTINCT &quot;MERCHANT_ADDRESS&quot; FROM &quot;ORACLE&quot;.&quot;MERCHANT_TABLE&quot; ) A" language="Oracle"/>
        <builtInIndicatorDefinition xmi:id="_5uktgH4eEei25uY0cniCVg" name="Distinct Count" label="Distinct Count">
          <taggedValue xmi:id="_5uktgX4eEei25uY0cniCVg" tag="Description" value="counts the number of distinct rows (like a &quot;SELECT DISTINCT&quot; SQL statement)"/>
          <taggedValue xmi:id="_5uktgn4eEei25uY0cniCVg" tag="Purpose" value="evaluates the number of distinct records"/>
          <sqlGenericExpression xmi:id="_5uktg34eEei25uY0cniCVg" body="SELECT COUNT(*) FROM (SELECT DISTINCT &lt;%=__COLUMN_NAMES__%> FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>) A" language="SQL"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:UniqueCountIndicator" xmi:id="_5WsZYH4eEei25uY0cniCVg" count="1901" computed="true" uniqueValueCount="1835">
        <parameters xmi:id="_5WsZYX4eEei25uY0cniCVg"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om77AX4IEei25uY0cniCVg"/>
        <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Unique_Count_0.1.definition#_ccHq0RF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_50XMdH4eEei25uY0cniCVg" body="SELECT COUNT(*) FROM (SELECT &quot;MERCHANT_ADDRESS&quot;, COUNT(*) FROM &quot;ORACLE&quot;.&quot;MERCHANT_TABLE&quot;  GROUP BY &quot;MERCHANT_ADDRESS&quot; HAVING COUNT(*) = 1) myquery" language="Oracle"/>
        <builtInIndicatorDefinition xmi:id="_5uo-8H4eEei25uY0cniCVg" name="Unique Count" label="Unique Count">
          <taggedValue xmi:id="_5uo-8X4eEei25uY0cniCVg" tag="Description" value="counts the number of unique rows (i.e. distinct rows with only one instance: rows that are not duplicated)"/>
          <taggedValue xmi:id="_5uo-8n4eEei25uY0cniCVg" tag="Purpose" value="evaluates the number of unique records"/>
          <sqlGenericExpression xmi:id="_5uo-834eEei25uY0cniCVg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) AS myquery" language="SQL"/>
          <sqlGenericExpression xmi:id="_5uo-9H4eEei25uY0cniCVg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount = 1) AS myquery" language="MySQL"/>
          <sqlGenericExpression xmi:id="_5uo-9X4eEei25uY0cniCVg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) myquery" language="Oracle"/>
          <sqlGenericExpression xmi:id="_5uo-9n4eEei25uY0cniCVg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount = 1) AS myquery" language="Teradata"/>
          <sqlGenericExpression xmi:id="_5uo-934eEei25uY0cniCVg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) AS myquery" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_5uo--H4eEei25uY0cniCVg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) AS myquery" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
          <sqlGenericExpression xmi:id="_5uo--X4eEei25uY0cniCVg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1)  myquery" language="Hive" version=""/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:DuplicateCountIndicator" xmi:id="_5WsZYn4eEei25uY0cniCVg" count="1901" computed="true" duplicateValueCount="28">
        <parameters xmi:id="_5WsZY34eEei25uY0cniCVg"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om77AX4IEei25uY0cniCVg"/>
        <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Duplicate_Count_0.1.definition#_ccHq0hF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_50XMdX4eEei25uY0cniCVg" body="SELECT COUNT(*) FROM (SELECT &quot;MERCHANT_ADDRESS&quot;, COUNT(*) mycount FROM &quot;ORACLE&quot;.&quot;MERCHANT_TABLE&quot;  m  GROUP BY &quot;MERCHANT_ADDRESS&quot; HAVING COUNT(*) > 1) myquery" language="Oracle"/>
        <builtInIndicatorDefinition xmi:id="_5utQYH4eEei25uY0cniCVg" name="Duplicate Count" label="Duplicate Count">
          <taggedValue xmi:id="_5utQYX4eEei25uY0cniCVg" tag="Description" value="counts the number of duplicate rows. This number and the number of unique data equals the number of distinct rows"/>
          <taggedValue xmi:id="_5utQYn4eEei25uY0cniCVg" tag="Purpose" value="evaluates the number of duplicated records"/>
          <sqlGenericExpression xmi:id="_5utQY34eEei25uY0cniCVg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) AS myquery" language="SQL"/>
          <sqlGenericExpression xmi:id="_5utQZH4eEei25uY0cniCVg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount > 1) AS myquery" language="MySQL"/>
          <sqlGenericExpression xmi:id="_5utQZX4eEei25uY0cniCVg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) myquery" language="Oracle"/>
          <sqlGenericExpression xmi:id="_5utQZn4eEei25uY0cniCVg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount > 1) AS myquery" language="Teradata"/>
          <sqlGenericExpression xmi:id="_5utQZ34eEei25uY0cniCVg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) myquery" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_5utQaH4eEei25uY0cniCVg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) AS myquery" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
          <sqlGenericExpression xmi:id="_5utQaX4eEei25uY0cniCVg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) myquery" language="Hive"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:BlankCountIndicator" xmi:id="_5WsZZH4eEei25uY0cniCVg" count="1901" computed="true">
        <parameters xmi:id="_5WsZZX4eEei25uY0cniCVg"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om77AX4IEei25uY0cniCVg"/>
        <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Blank_Count_0.1.definition#_ccHq0xF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_50XMdn4eEei25uY0cniCVg" body="SELECT COUNT(&quot;MERCHANT_ADDRESS&quot;) FROM &quot;ORACLE&quot;.&quot;MERCHANT_TABLE&quot;  WHERE TRIM(&quot;MERCHANT_ADDRESS&quot;) IS NULL " language="Oracle"/>
        <builtInIndicatorDefinition xmi:id="_5uw6wH4eEei25uY0cniCVg" name="Blank Count" label="Blank Count">
          <taggedValue xmi:id="_5uw6wX4eEei25uY0cniCVg" tag="Description" value="counts the number of blank rows. A blank is a non null textual data that contains only white spaces (or nothing). Note that Oracle does not distinguish between the empty string and the null value"/>
          <taggedValue xmi:id="_5uw6wn4eEei25uY0cniCVg" tag="Purpose" value="evaluates the number of blank records"/>
          <sqlGenericExpression xmi:id="_5uw6w34eEei25uY0cniCVg" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE TRIM(&lt;%=__COLUMN_NAMES__%>) = '' &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
          <sqlGenericExpression xmi:id="_5uw6xH4eEei25uY0cniCVg" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE TRIM(&lt;%=__COLUMN_NAMES__%>) IS NULL &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
          <sqlGenericExpression xmi:id="_5uw6xX4eEei25uY0cniCVg" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE LTRIM(RTRIM(&lt;%=__COLUMN_NAMES__%>)) = '' &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
          <sqlGenericExpression xmi:id="_5uw6xn4eEei25uY0cniCVg" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE LTRIM(RTRIM(&lt;%=__COLUMN_NAMES__%>)) = '' &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_5uw6x34eEei25uY0cniCVg" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> = '' or RTRIM(LTRIM(&lt;%=__COLUMN_NAMES__%>)) = '') &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:TextIndicator" xmi:id="_5WsZZn4eEei25uY0cniCVg">
        <parameters xmi:id="_5WsZZ34eEei25uY0cniCVg"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om77AX4IEei25uY0cniCVg"/>
        <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Text_Statistics_0.1.definition#_yb9x0zh8Ed2XmO7pl5Yuyg"/>
        <averageLengthIndicator xmi:id="_5WsZaH4eEei25uY0cniCVg" count="1901" computed="true" sumLength="97255.0">
          <parameters xmi:id="_5WsZaX4eEei25uY0cniCVg">
            <textParameter xmi:id="_5WsZan4eEei25uY0cniCVg" useBlank="false"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om77AX4IEei25uY0cniCVg"/>
          <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Average_Length_0.1.definition#_ccIR4BF2Ed2PKb6nEJEvhw"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_50XMd34eEei25uY0cniCVg" body="SELECT SUM(LENGTH(&quot;MERCHANT_ADDRESS&quot;)), COUNT(&quot;MERCHANT_ADDRESS&quot;) FROM &quot;ORACLE&quot;.&quot;MERCHANT_TABLE&quot; WHERE (&quot;MERCHANT_ADDRESS&quot; IS NOT NULL ) AND (TRIM(NVL(&quot;MERCHANT_ADDRESS&quot;,'NULL TALEND')) IS NOT NULL) " language="Oracle"/>
          <builtInIndicatorDefinition xmi:id="_5u1MMH4eEei25uY0cniCVg" name="Average Length" label="Average Length">
            <taggedValue xmi:id="_5u1MMX4eEei25uY0cniCVg" tag="Description" value="computes the average length of the field. Does not take into account the null values when computing the average."/>
            <taggedValue xmi:id="_5u1MMn4eEei25uY0cniCVg" tag="Purpose" value="evaluates the average length of the textual record"/>
            <sqlGenericExpression xmi:id="_5u1MM34eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_5u1MNH4eEei25uY0cniCVg" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_5u1MNX4eEei25uY0cniCVg" body="SELECT SUM(LEN(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_5u1MNn4eEei25uY0cniCVg" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_5u1MN34eEei25uY0cniCVg" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_5u1MOH4eEei25uY0cniCVg" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_5u1MOX4eEei25uY0cniCVg" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_5u1MOn4eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_5u1MO34eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_5u1MPH4eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )), COUNT( &lt;%=__COLUMN_NAMES__%> ) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) AND ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_5u1MPX4eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_5u1MPn4eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
          </builtInIndicatorDefinition>
        </averageLengthIndicator>
        <maxLengthIndicator xmi:id="_5WsZa34eEei25uY0cniCVg" computed="true" length="108">
          <parameters xmi:id="_5WsZbH4eEei25uY0cniCVg">
            <textParameter xmi:id="_5WsZbX4eEei25uY0cniCVg" useBlank="false"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om77AX4IEei25uY0cniCVg"/>
          <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Maximal_Length_0.1.definition#_ccHq1RF2Ed2PKb6nEJEvhw"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_50XMeH4eEei25uY0cniCVg" body="SELECT MAX( LENGTH(&quot;MERCHANT_ADDRESS&quot;) ) FROM &quot;ORACLE&quot;.&quot;MERCHANT_TABLE&quot; WHERE (&quot;MERCHANT_ADDRESS&quot; IS NOT NULL ) AND (TRIM(NVL(&quot;MERCHANT_ADDRESS&quot;,'NULL TALEND')) IS NOT NULL) " language="Oracle"/>
          <builtInIndicatorDefinition xmi:id="_5u6rwH4eEei25uY0cniCVg" name="Maximal Length" label="Maximal Length">
            <taggedValue xmi:id="_5u6rwX4eEei25uY0cniCVg" tag="Description" value="computes the maximal length of a text field."/>
            <taggedValue xmi:id="_5u6rwn4eEei25uY0cniCVg" tag="Purpose" value="evaluates the length of the longest textual record"/>
            <sqlGenericExpression xmi:id="_5u6rw34eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_5u6rxH4eEei25uY0cniCVg" body="SELECT MAX( LENGTH(&lt;%=__COLUMN_NAMES__%>) ) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle" modificationDate=""/>
            <sqlGenericExpression xmi:id="_5u6rxX4eEei25uY0cniCVg" body="SELECT MAX(LEN(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_5u6rxn4eEei25uY0cniCVg" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_5u6rx34eEei25uY0cniCVg" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_5u6ryH4eEei25uY0cniCVg" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_5u6ryX4eEei25uY0cniCVg" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive" modificationDate=""/>
            <sqlGenericExpression xmi:id="_5u6ryn4eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_5u6ry34eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' )  &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_5u6rzH4eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) AND ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_5u6rzX4eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_5u6rzn4eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
          </builtInIndicatorDefinition>
        </maxLengthIndicator>
        <minLengthIndicator xmi:id="_5WsZbn4eEei25uY0cniCVg" computed="true" length="4">
          <parameters xmi:id="_5WsZb34eEei25uY0cniCVg">
            <textParameter xmi:id="_5WsZcH4eEei25uY0cniCVg" useBlank="false"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om77AX4IEei25uY0cniCVg"/>
          <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Minimal_Length_0.1.definition#_ccHq1BF2Ed2PKb6nEJEvhw"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_50XMeX4eEei25uY0cniCVg" body="SELECT MIN( LENGTH(&quot;MERCHANT_ADDRESS&quot;) ) FROM &quot;ORACLE&quot;.&quot;MERCHANT_TABLE&quot; WHERE (&quot;MERCHANT_ADDRESS&quot; IS NOT NULL ) AND (TRIM(NVL(&quot;MERCHANT_ADDRESS&quot;,'NULL TALEND')) IS NOT NULL) " language="Oracle"/>
          <builtInIndicatorDefinition xmi:id="_5u-9MH4eEei25uY0cniCVg" name="Minimal Length" label="Minimal Length">
            <taggedValue xmi:id="_5u-9MX4eEei25uY0cniCVg" tag="Description" value="computes the minimal length of a text field. Does not take into account the null values when computing the minimal length."/>
            <taggedValue xmi:id="_5u-9Mn4eEei25uY0cniCVg" tag="Purpose" value="evaluates the length of the smallest textual record"/>
            <sqlGenericExpression xmi:id="_5u-9M34eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_5u-9NH4eEei25uY0cniCVg" body="SELECT MIN( LENGTH(&lt;%=__COLUMN_NAMES__%>) ) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_5u-9NX4eEei25uY0cniCVg" body="SELECT MIN(LEN(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_5u-9Nn4eEei25uY0cniCVg" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_5u-9N34eEei25uY0cniCVg" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_5u-9OH4eEei25uY0cniCVg" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_5u-9OX4eEei25uY0cniCVg" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_5u-9On4eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_5u-9O34eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_5u-9PH4eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) AND ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_5u-9PX4eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (1=1) AND (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_5u-9Pn4eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
          </builtInIndicatorDefinition>
        </minLengthIndicator>
        <minLengthWithBlankIndicator xmi:id="_5WsZcX4eEei25uY0cniCVg" computed="true" length="4">
          <parameters xmi:id="_5WsZcn4eEei25uY0cniCVg">
            <textParameter xmi:id="_5WsZc34eEei25uY0cniCVg"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om77AX4IEei25uY0cniCVg"/>
          <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Minimal_Length_With_Blank_0.1.definition#_G4EzQZU9Ed-Y15ulK_jijQ"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_50XMgH4eEei25uY0cniCVg" body="SELECT MIN( LENGTH(&quot;MERCHANT_ADDRESS&quot;) ) FROM &quot;ORACLE&quot;.&quot;MERCHANT_TABLE&quot; WHERE (&quot;MERCHANT_ADDRESS&quot; IS NOT NULL ) " language="Oracle"/>
          <builtInIndicatorDefinition xmi:id="_5vdeUH4eEei25uY0cniCVg" name="Minimal Length With Blank" label="Minimal Length With Blank">
            <taggedValue xmi:id="_5vdeUX4eEei25uY0cniCVg" tag="Description" value="computes the minimal length of a text field, counting blank as zero length values."/>
            <taggedValue xmi:id="_5vdeUn4eEei25uY0cniCVg" tag="Purpose" value="evaluates the length of the smallest textual record"/>
            <sqlGenericExpression xmi:id="_5vdeU34eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_5vdeVH4eEei25uY0cniCVg" body="SELECT MIN( LENGTH(&lt;%=__COLUMN_NAMES__%>) ) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_5vdeVX4eEei25uY0cniCVg" body="SELECT MIN(LEN(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_5vdeVn4eEei25uY0cniCVg" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_5vdeV34eEei25uY0cniCVg" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_5vdeWH4eEei25uY0cniCVg" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_5vdeWX4eEei25uY0cniCVg" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_5vdeWn4eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_5vdeW34eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_5vdeXH4eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_5vdeXX4eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
          </builtInIndicatorDefinition>
        </minLengthWithBlankIndicator>
        <minLengthWithNullIndicator xmi:id="_5WsZdH4eEei25uY0cniCVg" computed="true" length="4">
          <parameters xmi:id="_5WsZdX4eEei25uY0cniCVg">
            <textParameter xmi:id="_5WsZdn4eEei25uY0cniCVg" useBlank="false" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om77AX4IEei25uY0cniCVg"/>
          <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Minimal_Length_With_Null_0.1.definition#_a4KsoI1qEd-xwI2imLgHRA"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_50XMgX4eEei25uY0cniCVg" body="SELECT MIN(CASE WHEN &quot;MERCHANT_ADDRESS&quot; IS NULL THEN 0 ELSE LENGTH(&quot;MERCHANT_ADDRESS&quot;) END) FROM &quot;ORACLE&quot;.&quot;MERCHANT_TABLE&quot; WHERE (TRIM(NVL(&quot;MERCHANT_ADDRESS&quot;,'NULL TALEND')) IS NOT NULL) " language="Oracle"/>
          <builtInIndicatorDefinition xmi:id="_5viW0H4eEei25uY0cniCVg" name="Minimal Length With Null" label="Minimal Length With Null">
            <taggedValue xmi:id="_5viW0X4eEei25uY0cniCVg" tag="Description" value="computes the minimal length of a text field, counting null as zero length values."/>
            <taggedValue xmi:id="_5viW0n4eEei25uY0cniCVg" tag="Purpose" value="evaluates the length of the smallest textual record"/>
            <sqlGenericExpression xmi:id="_5viW034eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_5viW1H4eEei25uY0cniCVg" body="SELECT MIN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_5viW1X4eEei25uY0cniCVg" body="SELECT MIN(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_5viW1n4eEei25uY0cniCVg" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_5viW134eEei25uY0cniCVg" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_5viW2H4eEei25uY0cniCVg" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_5viW2X4eEei25uY0cniCVg" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_5viW2n4eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_5viW234eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_5viW3H4eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_5viW3X4eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_5viW3n4eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
          </builtInIndicatorDefinition>
        </minLengthWithNullIndicator>
        <minLengthWithBlankNullIndicator xmi:id="_5WsZd34eEei25uY0cniCVg" computed="true" length="4">
          <parameters xmi:id="_5WsZeH4eEei25uY0cniCVg">
            <textParameter xmi:id="_5WsZeX4eEei25uY0cniCVg" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om77AX4IEei25uY0cniCVg"/>
          <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Minimal_Length_With_Blank_and_Null_0.1.definition#_9HDjMJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_50XzgH4eEei25uY0cniCVg" body="SELECT MIN(CASE WHEN &quot;MERCHANT_ADDRESS&quot; IS NULL  THEN 0 ELSE LENGTH(&quot;MERCHANT_ADDRESS&quot;) END) FROM &quot;ORACLE&quot;.&quot;MERCHANT_TABLE&quot; " language="Oracle"/>
          <builtInIndicatorDefinition xmi:id="_5vmoQH4eEei25uY0cniCVg" name="Minimal Length With Blank and Null" label="Minimal Length With Blank and Null">
            <taggedValue xmi:id="_5vmoQX4eEei25uY0cniCVg" tag="Description" value="computes the minimal length of a text field, counting blank and null as zero length values."/>
            <taggedValue xmi:id="_5vmoQn4eEei25uY0cniCVg" tag="Purpose" value="evaluates the length of the smallest textual record"/>
            <sqlGenericExpression xmi:id="_5vmoQ34eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_5vmoRH4eEei25uY0cniCVg" body="SELECT MIN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_5vmoRX4eEei25uY0cniCVg" body="SELECT MIN(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_5vmoRn4eEei25uY0cniCVg" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_5vmoR34eEei25uY0cniCVg" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_5vmoSH4eEei25uY0cniCVg" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_5vmoSX4eEei25uY0cniCVg" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_5vmoSn4eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_5vmoS34eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_5vmoTH4eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END )) FROM  &lt;%=__TABLE_NAME__%>   &lt;%=__WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_5vmoTX4eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_5vmoTn4eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Netezza"/>
          </builtInIndicatorDefinition>
        </minLengthWithBlankNullIndicator>
        <maxLengthWithBlankIndicator xmi:id="_5WsZen4eEei25uY0cniCVg" computed="true" length="108">
          <parameters xmi:id="_5WsZe34eEei25uY0cniCVg">
            <textParameter xmi:id="_5WsZfH4eEei25uY0cniCVg"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om77AX4IEei25uY0cniCVg"/>
          <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Maximal_Length_With_Blank_0.1.definition#_-xmZcJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_50XMfX4eEei25uY0cniCVg" body="SELECT MAX( LENGTH(&quot;MERCHANT_ADDRESS&quot;) ) FROM &quot;ORACLE&quot;.&quot;MERCHANT_TABLE&quot; WHERE (&quot;MERCHANT_ADDRESS&quot; IS NOT NULL ) " language="Oracle"/>
          <builtInIndicatorDefinition xmi:id="_5vQC8H4eEei25uY0cniCVg" name="Maximal Length With Blank" label="Maximal Length With Blank">
            <taggedValue xmi:id="_5vQC8X4eEei25uY0cniCVg" tag="Description" value="computes the maximal length of a text field, counting blank data  as zero length values."/>
            <taggedValue xmi:id="_5vQC8n4eEei25uY0cniCVg" tag="Purpose" value="evaluates the length of the longest textual record"/>
            <sqlGenericExpression xmi:id="_5vQC834eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_5vQC9H4eEei25uY0cniCVg" body="SELECT MAX( LENGTH(&lt;%=__COLUMN_NAMES__%>) ) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_5vQC9X4eEei25uY0cniCVg" body="SELECT MAX(LEN(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_5vQC9n4eEei25uY0cniCVg" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_5vQC934eEei25uY0cniCVg" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_5vQC-H4eEei25uY0cniCVg" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_5vQC-X4eEei25uY0cniCVg" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_5vQC-n4eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_5vQC-34eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_5vQC_H4eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_5vQC_X4eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
          </builtInIndicatorDefinition>
        </maxLengthWithBlankIndicator>
        <maxLengthWithNullIndicator xmi:id="_5WsZfX4eEei25uY0cniCVg" computed="true" length="108">
          <parameters xmi:id="_5WsZfn4eEei25uY0cniCVg">
            <textParameter xmi:id="_5WsZf34eEei25uY0cniCVg" useBlank="false" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om77AX4IEei25uY0cniCVg"/>
          <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Maximal_Length_With_Null_0.1.definition#_-_UFUJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_50XMfn4eEei25uY0cniCVg" body="SELECT MAX(CASE WHEN &quot;MERCHANT_ADDRESS&quot; IS NULL THEN 0 ELSE LENGTH(&quot;MERCHANT_ADDRESS&quot;) END) FROM &quot;ORACLE&quot;.&quot;MERCHANT_TABLE&quot; WHERE (TRIM(NVL(&quot;MERCHANT_ADDRESS&quot;,'NULL TALEND')) IS NOT NULL) " language="Oracle"/>
          <builtInIndicatorDefinition xmi:id="_5vUUYH4eEei25uY0cniCVg" name="Maximal Length With Null" label="Maximal Length With Null">
            <taggedValue xmi:id="_5vUUYX4eEei25uY0cniCVg" tag="Description" value="computes the maximal length of a text field, counting null data as zero length values."/>
            <taggedValue xmi:id="_5vUUYn4eEei25uY0cniCVg" tag="Purpose" value="evaluates the length of the longest textual record"/>
            <sqlGenericExpression xmi:id="_5vUUY34eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_5vUUZH4eEei25uY0cniCVg" body="SELECT MAX(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_5vUUZX4eEei25uY0cniCVg" body="SELECT MAX(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_5vUUZn4eEei25uY0cniCVg" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_5vUUZ34eEei25uY0cniCVg" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_5vUUaH4eEei25uY0cniCVg" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_5vUUaX4eEei25uY0cniCVg" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive" version=""/>
            <sqlGenericExpression xmi:id="_5vUUan4eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_5vUUa34eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_5vUUbH4eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_5vUUbX4eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_5vUUbn4eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
          </builtInIndicatorDefinition>
        </maxLengthWithNullIndicator>
        <maxLengthWithBlankNullIndicator xmi:id="_5WsZgH4eEei25uY0cniCVg" computed="true" length="108">
          <parameters xmi:id="_5WsZgX4eEei25uY0cniCVg">
            <textParameter xmi:id="_5WsZgn4eEei25uY0cniCVg" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om77AX4IEei25uY0cniCVg"/>
          <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Maximal_Length_With_Blank_and_Null_0.1.definition#_-hzp8JSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_50XMf34eEei25uY0cniCVg" body="SELECT MAX(CASE WHEN &quot;MERCHANT_ADDRESS&quot; IS NULL  THEN 0 ELSE LENGTH(&quot;MERCHANT_ADDRESS&quot;) END) FROM &quot;ORACLE&quot;.&quot;MERCHANT_TABLE&quot; " language="Oracle"/>
          <builtInIndicatorDefinition xmi:id="_5vYl0H4eEei25uY0cniCVg" name="Maximal Length With Blank and Null" label="Maximal Length With Blank and Null">
            <taggedValue xmi:id="_5vYl0X4eEei25uY0cniCVg" tag="Description" value="computes the maximal length of a text field, counting null and blank data as zero length values."/>
            <taggedValue xmi:id="_5vYl0n4eEei25uY0cniCVg" tag="Purpose" value="evaluates the length of the longest textual record"/>
            <sqlGenericExpression xmi:id="_5vYl034eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_5vYl1H4eEei25uY0cniCVg" body="SELECT MAX(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_5vYl1X4eEei25uY0cniCVg" body="SELECT MAX(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_5vYl1n4eEei25uY0cniCVg" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_5vYl134eEei25uY0cniCVg" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_5vYl2H4eEei25uY0cniCVg" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_5vYl2X4eEei25uY0cniCVg" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_5vYl2n4eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_5vYl234eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_5vYl3H4eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END )) FROM  &lt;%=__TABLE_NAME__%>   &lt;%=__WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_5vYl3X4eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_5vYl3n4eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Netezza"/>
          </builtInIndicatorDefinition>
        </maxLengthWithBlankNullIndicator>
        <avgLengthWithBlankIndicator xmi:id="_5WsZg34eEei25uY0cniCVg" count="1901" computed="true" sumLength="97255.0">
          <parameters xmi:id="_5WsZhH4eEei25uY0cniCVg">
            <textParameter xmi:id="_5WsZhX4eEei25uY0cniCVg"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om77AX4IEei25uY0cniCVg"/>
          <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Average_Length_With_Blank_0.1.definition#__gPoIJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_50XMen4eEei25uY0cniCVg" body="SELECT SUM(CASE WHEN &quot;MERCHANT_ADDRESS&quot; IS NOT NULL AND  TRIM(&quot;MERCHANT_ADDRESS&quot;) IS NULL THEN 0 ELSE  LENGTH(&quot;MERCHANT_ADDRESS&quot;)END), COUNT(*) FROM &quot;ORACLE&quot;.&quot;MERCHANT_TABLE&quot; WHERE (&quot;MERCHANT_ADDRESS&quot; IS NOT NULL ) " language="Oracle"/>
          <builtInIndicatorDefinition xmi:id="_5vDOoH4eEei25uY0cniCVg" name="Average Length With Blank" label="Average Length With Blank">
            <taggedValue xmi:id="_5vDOoX4eEei25uY0cniCVg" tag="Description" value="computes the average length of the field, counting blank data as zero length values."/>
            <taggedValue xmi:id="_5vDOon4eEei25uY0cniCVg" tag="Purpose" value="evaluates the average length of the textual record"/>
            <sqlGenericExpression xmi:id="_5vDOo34eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH(CASE WHEN   CHAR_LENGTH( TRIM(&lt;%=__COLUMN_NAMES__%>) ) =0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_5vDOpH4eEei25uY0cniCVg" body="SELECT SUM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NOT NULL AND  TRIM(&lt;%=__COLUMN_NAMES__%>) IS NULL THEN 0 ELSE  LENGTH(&lt;%=__COLUMN_NAMES__%>)END), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_5vDOpX4eEei25uY0cniCVg" body="SELECT SUM(LEN(CASE WHEN  LEN( LTRIM(RTRIM(&lt;%=__COLUMN_NAMES__%>)) )=0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_5vDOpn4eEei25uY0cniCVg" body="SELECT SUM(LENGTH(CASE WHEN   LENGTH( TRIM(&lt;%=__COLUMN_NAMES__%>) ) =0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_5vDOp34eEei25uY0cniCVg" body="SELECT SUM(LENGTH(CASE WHEN   LENGTH( TRIM(&lt;%=__COLUMN_NAMES__%>) ) =0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_5vDOqH4eEei25uY0cniCVg" body="SELECT SUM(LENGTH(CASE WHEN   LENGTH( TRIM(&lt;%=__COLUMN_NAMES__%>) ) =0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_5vDOqX4eEei25uY0cniCVg" body="SELECT SUM(LENGTH(CASE WHEN   LENGTH( TRIM(&lt;%=__COLUMN_NAMES__%>) ) =0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_5vDOqn4eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( TRIM(&lt;%=__COLUMN_NAMES__%>) ) =0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_5vDOq34eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( LTRIM(RTRIM(&lt;%=__COLUMN_NAMES__%>)) ) =0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_5vDOrH4eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( TRIM( &lt;%=__COLUMN_NAMES__%> ) ) =0  THEN '' ELSE   &lt;%=__COLUMN_NAMES__%>  END)), COUNT(*) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_5vDOrX4eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( TRIM(&lt;%=__COLUMN_NAMES__%>) ) =0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
          </builtInIndicatorDefinition>
        </avgLengthWithBlankIndicator>
        <avgLengthWithNullIndicator xmi:id="_5WsZhn4eEei25uY0cniCVg" count="1901" computed="true" sumLength="97255.0">
          <parameters xmi:id="_5WsZh34eEei25uY0cniCVg">
            <textParameter xmi:id="_5WsZiH4eEei25uY0cniCVg" useBlank="false" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om77AX4IEei25uY0cniCVg"/>
          <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Average_Length_With_Null_0.1.definition#__vI_wJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_50XMe34eEei25uY0cniCVg" body="SELECT SUM(CASE WHEN &quot;MERCHANT_ADDRESS&quot; IS NULL THEN 0 ELSE LENGTH(&quot;MERCHANT_ADDRESS&quot;) END), COUNT(*) FROM &quot;ORACLE&quot;.&quot;MERCHANT_TABLE&quot; WHERE (TRIM(NVL(&quot;MERCHANT_ADDRESS&quot;,'NULL TALEND')) IS NOT NULL) " language="Oracle"/>
          <builtInIndicatorDefinition xmi:id="_5vHgEH4eEei25uY0cniCVg" name="Average Length With Null" label="Average Length With Null">
            <taggedValue xmi:id="_5vHgEX4eEei25uY0cniCVg" tag="Description" value="computes the average length of the field, counting null data as zero length values."/>
            <taggedValue xmi:id="_5vHgEn4eEei25uY0cniCVg" tag="Purpose" value="evaluates the average length of the textual record"/>
            <sqlGenericExpression xmi:id="_5vHgE34eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_5vHgFH4eEei25uY0cniCVg" body="SELECT SUM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_5vHgFX4eEei25uY0cniCVg" body="SELECT SUM(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_5vHgFn4eEei25uY0cniCVg" body="SELECT SUM(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_5vHgF34eEei25uY0cniCVg" body="SELECT SUM(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_5vHgGH4eEei25uY0cniCVg" body="SELECT SUM(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_5vHgGX4eEei25uY0cniCVg" body="SELECT SUM(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_5vHgGn4eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_5vHgG34eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_5vHgHH4eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_5vHgHX4eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_5vHgHn4eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
          </builtInIndicatorDefinition>
        </avgLengthWithNullIndicator>
        <avgLengthWithBlankNullIndicator xmi:id="_5WsZiX4eEei25uY0cniCVg" count="1901" computed="true" sumLength="97255.0">
          <parameters xmi:id="_5WsZin4eEei25uY0cniCVg">
            <textParameter xmi:id="_5WsZi34eEei25uY0cniCVg" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om77AX4IEei25uY0cniCVg"/>
          <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Average_Length_With_Blank_and_Null_0.1.definition#__TbUIJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_50XMfH4eEei25uY0cniCVg" body="SELECT SUM(CASE WHEN &quot;MERCHANT_ADDRESS&quot; IS NOT NULL AND  TRIM(&quot;MERCHANT_ADDRESS&quot;) IS NULL THEN 0 ELSE CASE WHEN &quot;MERCHANT_ADDRESS&quot; IS NULL THEN 0 ELSE LENGTH(&quot;MERCHANT_ADDRESS&quot;) END  END), COUNT(*) FROM &quot;ORACLE&quot;.&quot;MERCHANT_TABLE&quot; " language="Oracle"/>
          <builtInIndicatorDefinition xmi:id="_5vLxgH4eEei25uY0cniCVg" name="Average Length With Blank and Null" label="Average Length With Blank and Null">
            <taggedValue xmi:id="_5vLxgX4eEei25uY0cniCVg" tag="Description" value="computes the average length of the field, counting blank and null data as zero lenght values."/>
            <taggedValue xmi:id="_5vLxgn4eEei25uY0cniCVg" tag="Purpose" value="evaluates the average length of the textual record"/>
            <sqlGenericExpression xmi:id="_5vLxg34eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH(CASE WHEN   CHAR_LENGTH( TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'')) ) =0  THEN '' ELSE  IFNULL(&lt;%=__COLUMN_NAMES__%>,'') END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_5vLxhH4eEei25uY0cniCVg" body="SELECT SUM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NOT NULL AND  TRIM(&lt;%=__COLUMN_NAMES__%>) IS NULL THEN 0 ELSE CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END  END), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_5vLxhX4eEei25uY0cniCVg" body="SELECT SUM(LEN(CASE WHEN  LEN( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) )=0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_5vLxhn4eEei25uY0cniCVg" body="SELECT SUM(LENGTH(CASE WHEN   LENGTH( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END ) ) =0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_5vLxh34eEei25uY0cniCVg" body="SELECT SUM(LENGTH(CASE WHEN   LENGTH( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END ) ) =0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_5vLxiH4eEei25uY0cniCVg" body="SELECT SUM(LENGTH(CASE WHEN   LENGTH( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END ) ) =0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_5vLxiX4eEei25uY0cniCVg" body="SELECT SUM(LENGTH(CASE WHEN   LENGTH( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END ) ) =0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_5vLxin4eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END ) ) =0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_5vLxi34eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) ) =0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_5vLxjH4eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END ) ) =0  THEN '' ELSE   CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END  END)), COUNT(*) FROM  &lt;%=__TABLE_NAME__%>   &lt;%=__WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_5vLxjX4eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END ) ) =0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_5vLxjn4eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH(CASE WHEN   CHAR_LENGTH( TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'')) ) =0  THEN '' ELSE  ISNULL(&lt;%=__COLUMN_NAMES__%>,'') END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Netezza"/>
          </builtInIndicatorDefinition>
        </avgLengthWithBlankNullIndicator>
      </indicators>
      <indicators xsi:type="dataquality.indicators:PatternFreqIndicator" xmi:id="_5WsZjH4eEei25uY0cniCVg" count="1901" computed="true" distinctValueCount="10" valueToFreq
        <parameters xmi:id="_5WsZjX4eEei25uY0cniCVg"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om77AX4IEei25uY0cniCVg"/>
        <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Pattern Frequency Statistics/Pattern_Frequency_Table_0.1.definition#_kQzTsJR-Ed2XO-JvLwVAwg"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_50XzgX4eEei25uY0cniCVg" body="SELECT * FROM (SELECT TRANSLATE(&quot;MERCHANT_ADDRESS&quot; , 'abcdefghijklmnopqrstuvwxyzçâêîôûéèùïöüABCDEFGHIJKLMNOPQRSTUVWXYZÇÂÊÎÔÛÉÈÙÏÖÜ0123456789' , 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999'), COUNT(*) AS c FROM &quot;ORACLE&quot;.&quot;MERCHANT_TABLE&quot; t  GROUP BY TRANSLATE(&quot;MERCHANT_ADDRESS&quot; , 'abcdefghijklmnopqrstuvwxyzçâêîôûéèùïöüABCDEFGHIJKLMNOPQRSTUVWXYZÇÂÊÎÔÛÉÈÙÏÖÜ0123456789' , 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999') ORDER BY c DESC) WHERE ROWNUM &lt;= 10" language="Oracle"/>
        <builtInIndicatorDefinition xmi:id="_5vrgwH4eEei25uY0cniCVg" name="Pattern Frequency Table" label="Pattern Frequency Table">
          <taggedValue xmi:id="_5vrgwX4eEei25uY0cniCVg" tag="Description" value="counts the number of records for each distinct pattern"/>
          <taggedValue xmi:id="_5vrgwn4eEei25uY0cniCVg" tag="Purpose" value="evaluates the most frequent patterns"/>
          <sqlGenericExpression xmi:id="_5vrgw34eEei25uY0cniCVg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY c DESC" language="SQL"/>
          <sqlGenericExpression xmi:id="_5vrgxH4eEei25uY0cniCVg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY c DESC" language="MySQL"/>
          <sqlGenericExpression xmi:id="_5vrgxX4eEei25uY0cniCVg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) AS c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY c DESC" language="Oracle"/>
          <sqlGenericExpression xmi:id="_5vrgxn4eEei25uY0cniCVg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) AS c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY c DESC" language="PostgreSQL"/>
          <sqlGenericExpression xmi:id="_5vrgx34eEei25uY0cniCVg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY c DESC" language="DB2"/>
          <sqlGenericExpression xmi:id="_5vrgyH4eEei25uY0cniCVg" body="SELECT &lt;%=__COLUMN_NAMES__%> , COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY c DESC" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_5vrgyX4eEei25uY0cniCVg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) AS c FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY c DESC" language="Informix"/>
          <sqlGenericExpression xmi:id="_5vrgyn4eEei25uY0cniCVg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY c DESC" language="AS/400"/>
          <sqlGenericExpression xmi:id="_5vrgy34eEei25uY0cniCVg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY c DESC" language="Teradata"/>
          <sqlGenericExpression xmi:id="_5vrgzH4eEei25uY0cniCVg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) AS c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY c DESC" language="Vertica Database"/>
          <sqlGenericExpression xmi:id="_5vrgzX4eEei25uY0cniCVg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) AS c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY c DESC" language="Netezza"/>
          <charactersMapping xmi:id="_5vrgzn4eEei25uY0cniCVg" language="SQL" charactersToReplace="abcdefghijklmnopqrstuvwxyzçâêîôûéèùïöüABCDEFGHIJKLMNOPQRSTUVWXYZÇÂÊÎÔÛÉÈÙÏÖÜ0123456789" replacementCharacters="aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999"/>
          <charactersMapping xmi:id="_5vrgz34eEei25uY0cniCVg" name="Characters mapping on MySQL" language="MySQL" charactersToReplace="abcdefghijklmnopqrstuvwxyzçâêîôûéèùïöüABCDEFGHIJKLMNOPQRSTUVWXYZÇÂÊÎÔÛÉÈÙÏÖÜ0123456789" replacementCharacters="aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999"/>
          <charactersMapping xmi:id="_5vrg0H4eEei25uY0cniCVg" name="Characters mapping on Oracle" language="Oracle" charactersToReplace="abcdefghijklmnopqrstuvwxyzçâêîôûéèùïöüABCDEFGHIJKLMNOPQRSTUVWXYZÇÂÊÎÔÛÉÈÙÏÖÜ0123456789" replacementCharacters="aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999"/>
          <charactersMapping xmi:id="_5vrg0X4eEei25uY0cniCVg" name="Characters mapping on PostgreSQL" language="PostgreSQL" charactersToReplace="abcdefghijklmnopqrstuvwxyzçâêîôûéèùïöüABCDEFGHIJKLMNOPQRSTUVWXYZÇÂÊÎÔÛÉÈÙÏÖÜ0123456789" replacementCharacters="aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999"/>
          <charactersMapping xmi:id="_5vrg0n4eEei25uY0cniCVg" name="Characters mapping on Microsoft SQL Server" language="Microsoft SQL Server" charactersToReplace="abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789" replacementCharacters="aaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999"/>
          <charactersMapping xmi:id="_5vrg034eEei25uY0cniCVg" name="Characters mapping on DB2" language="DB2" charactersToReplace="abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789" replacementCharacters="aaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999"/>
          <charactersMapping xmi:id="_5vrg1H4eEei25uY0cniCVg" name="Characters mapping on AS/400" language="AS/400" charactersToReplace="abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789" replacementCharacters="aaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999"/>
          <charactersMapping xmi:id="_5vrg1X4eEei25uY0cniCVg" name="Characters mapping on Informix" language="Informix" charactersToReplace="abcdefghijklmnopqrstuvwxyzçâêîôûéèùïöüABCDEFGHIJKLMNOPQRSTUVWXYZÇÂÊÎÔÛÉÈÙÏÖÜ0123456789" replacementCharacters="aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999"/>
          <charactersMapping xmi:id="_5vrg1n4eEei25uY0cniCVg" name="Characters mapping on Teradata" language="Teradata" charactersToReplace="abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789" replacementCharacters="aaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999"/>
          <charactersMapping xmi:id="_5vrg134eEei25uY0cniCVg" name="Characters mapping on Vertica" language="Vertica Database" charactersToReplace="abcdefghijklmnopqrstuvwxyzçâêîôûéèùïöüABCDEFGHIJKLMNOPQRSTUVWXYZÇÂÊÎÔÛÉÈÙÏÖÜ0123456789" replacementCharacters="aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999"/>
          <charactersMapping xmi:id="_5vrg2H4eEei25uY0cniCVg" language="Netezza" charactersToReplace="abcdefghijklmnopqrstuvwxyzçâêîôûéèùïöüABCDEFGHIJKLMNOPQRSTUVWXYZÇÂÊÎÔÛÉÈÙÏÖÜ0123456789" replacementCharacters="aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999"/>
          <charactersMapping xmi:id="_5vrg2X4eEei25uY0cniCVg" name="Characters mapping on Hive" language="Hive" charactersToReplace="0123456789abcdefghijklmnopqrstuvwxyz?aê???éèù??üABCDEFGHIJKLMNOPQRSTUVWXYZ??ê???éèù??ü" replacementCharacters="9999999999aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:SoundexFreqIndicator" xmi:id="_5WsZjn4eEei25uY0cniCVg" count="1901" computed="true" distinctValueCount="10" valueToFreqvalueToDistinctFreq
        <parameters xmi:id="_5WsZj34eEei25uY0cniCVg"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om77AX4IEei25uY0cniCVg"/>
        <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Soundex/Soundex_Frequency_Table_0.1.definition#_VGep4Pa7Ed24-N3PsP_o-w"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_50Xzgn4eEei25uY0cniCVg" body="SELECT * FROM (SELECT MAX(&quot;MERCHANT_ADDRESS&quot;), SOUNDEX(&quot;MERCHANT_ADDRESS&quot;), COUNT(*) c, COUNT(DISTINCT &quot;MERCHANT_ADDRESS&quot;) d FROM &quot;ORACLE&quot;.&quot;MERCHANT_TABLE&quot; t  GROUP BY SOUNDEX(&quot;MERCHANT_ADDRESS&quot;) ORDER BY d DESC,c DESC) WHERE ROWNUM &lt;= 10" language="Oracle"/>
        <builtInIndicatorDefinition xmi:id="_5vvyMH4eEei25uY0cniCVg" name="Soundex Frequency Table" label="Soundex Frequency Table">
          <taggedValue xmi:id="_5vvyMX4eEei25uY0cniCVg" tag="Description" value="counts the number of records for each record with a distinct soundex"/>
          <taggedValue xmi:id="_5vvyMn4eEei25uY0cniCVg" tag="Purpose" value="evaluates the most frequent records with respect to their soundex value"/>
          <sqlGenericExpression xmi:id="_5vvyM34eEei25uY0cniCVg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>), COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SOUNDEX(&lt;%=__COLUMN_NAMES__%>) ORDER BY d DESC,c DESC" language="SQL"/>
          <sqlGenericExpression xmi:id="_5vvyNH4eEei25uY0cniCVg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>) , COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY 2 ORDER BY d DESC,c DESC" language="MySQL"/>
          <sqlGenericExpression xmi:id="_5vvyNX4eEei25uY0cniCVg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>), COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SOUNDEX(&lt;%=__COLUMN_NAMES__%>) ORDER BY d DESC,c DESC" language="Oracle"/>
          <sqlGenericExpression xmi:id="_5vvyNn4eEei25uY0cniCVg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>),  COUNT(*), COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SOUNDEX(&lt;%=__COLUMN_NAMES__%>) ORDER BY COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) DESC , COUNT(*) DESC" language="PostgreSQL"/>
          <sqlGenericExpression xmi:id="_5vvyN34eEei25uY0cniCVg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>), COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SOUNDEX(&lt;%=__COLUMN_NAMES__%>) ORDER BY d DESC,c DESC" language="DB2"/>
          <sqlGenericExpression xmi:id="_5vvyOH4eEei25uY0cniCVg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>), COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SOUNDEX(&lt;%=__COLUMN_NAMES__%>) ORDER BY d DESC,c DESC" language="Teradata"/>
          <sqlGenericExpression xmi:id="_5vvyOX4eEei25uY0cniCVg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>), COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SOUNDEX(&lt;%=__COLUMN_NAMES__%>) ORDER BY d DESC,c DESC" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_5vvyOn4eEei25uY0cniCVg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>) , COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY 2 ORDER BY d DESC,c DESC" language="Informix"/>
          <sqlGenericExpression xmi:id="_5vvyO34eEei25uY0cniCVg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>) , COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY 2 ORDER BY d DESC,c DESC" language="Ingres"/>
          <sqlGenericExpression xmi:id="_5vvyPH4eEei25uY0cniCVg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), NYSIIS(&lt;%=__COLUMN_NAMES__%>) , COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY 2 ORDER BY d DESC,c DESC" language="Netezza"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RowCountIndicator" xmi:id="_5WsZkX4eEei25uY0cniCVg" count="1901" computed="true">
        <parameters xmi:id="_5WsZkn4eEei25uY0cniCVg"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om77BX4IEei25uY0cniCVg"/>
        <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Row_Count_0.1.definition#_ccFOkBF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_50TiFn4eEei25uY0cniCVg" body="SELECT COUNT(*) FROM &quot;ORACLE&quot;.&quot;MERCHANT_TABLE&quot; " language="Oracle"/>
        <builtInIndicatorDefinition xmi:id="_5v0qsH4eEei25uY0cniCVg" name="Row Count" label="Row Count">
          <taggedValue xmi:id="_5v0qsX4eEei25uY0cniCVg" tag="Description" value="counts the number of rows"/>
          <taggedValue xmi:id="_5v0qsn4eEei25uY0cniCVg" tag="Purpose" value="evaluates the number of records"/>
          <sqlGenericExpression xmi:id="_5v0qs34eEei25uY0cniCVg" body="SELECT COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:NullCountIndicator" xmi:id="_5WsZk34eEei25uY0cniCVg" count="1901" nullCount="30" computed="true">
        <parameters xmi:id="_5WsZlH4eEei25uY0cniCVg"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om77BX4IEei25uY0cniCVg"/>
        <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Null_Count_0.1.definition#_GrAeADh9Ed2XmO7pl5Yuyg"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_50Xzg34eEei25uY0cniCVg" body="SELECT COUNT(*) FROM &quot;ORACLE&quot;.&quot;MERCHANT_TABLE&quot; WHERE &quot;MERCHANT_ZIPCODE&quot; IS NULL " language="Oracle"/>
        <builtInIndicatorDefinition xmi:id="_5v48IH4eEei25uY0cniCVg" name="Null Count" label="Null Count">
          <taggedValue xmi:id="_5v48IX4eEei25uY0cniCVg" tag="Purpose" value="evaluate the number of missing data (null records)"/>
          <taggedValue xmi:id="_5v48In4eEei25uY0cniCVg" tag="Description" value="counts the number of null rows"/>
          <sqlGenericExpression xmi:id="_5v48I34eEei25uY0cniCVg" body="SELECT COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE &lt;%=__COLUMN_NAMES__%> IS NULL &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:DistinctCountIndicator" xmi:id="_5WsZlX4eEei25uY0cniCVg" count="1901" nullCount="30" computed="true" distinctValueCount="192">
        <parameters xmi:id="_5WsZln4eEei25uY0cniCVg"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om77BX4IEei25uY0cniCVg"/>
        <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Distinct_Count_0.1.definition#_ccHq0BF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_50XzhH4eEei25uY0cniCVg" body="SELECT COUNT(*) FROM (SELECT DISTINCT &quot;MERCHANT_ZIPCODE&quot; FROM &quot;ORACLE&quot;.&quot;MERCHANT_TABLE&quot; ) A" language="Oracle"/>
        <builtInIndicatorDefinition xmi:id="_5v90oH4eEei25uY0cniCVg" name="Distinct Count" label="Distinct Count">
          <taggedValue xmi:id="_5v90oX4eEei25uY0cniCVg" tag="Description" value="counts the number of distinct rows (like a &quot;SELECT DISTINCT&quot; SQL statement)"/>
          <taggedValue xmi:id="_5v90on4eEei25uY0cniCVg" tag="Purpose" value="evaluates the number of distinct records"/>
          <sqlGenericExpression xmi:id="_5v90o34eEei25uY0cniCVg" body="SELECT COUNT(*) FROM (SELECT DISTINCT &lt;%=__COLUMN_NAMES__%> FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>) A" language="SQL"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:UniqueCountIndicator" xmi:id="_5WsZl34eEei25uY0cniCVg" count="1901" nullCount="30" computed="true" uniqueValueCount="137">
        <parameters xmi:id="_5WsZmH4eEei25uY0cniCVg"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om77BX4IEei25uY0cniCVg"/>
        <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Unique_Count_0.1.definition#_ccHq0RF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_50XzhX4eEei25uY0cniCVg" body="SELECT COUNT(*) FROM (SELECT &quot;MERCHANT_ZIPCODE&quot;, COUNT(*) FROM &quot;ORACLE&quot;.&quot;MERCHANT_TABLE&quot;  GROUP BY &quot;MERCHANT_ZIPCODE&quot; HAVING COUNT(*) = 1) myquery" language="Oracle"/>
        <builtInIndicatorDefinition xmi:id="_5wCtIH4eEei25uY0cniCVg" name="Unique Count" label="Unique Count">
          <taggedValue xmi:id="_5wCtIX4eEei25uY0cniCVg" tag="Description" value="counts the number of unique rows (i.e. distinct rows with only one instance: rows that are not duplicated)"/>
          <taggedValue xmi:id="_5wCtIn4eEei25uY0cniCVg" tag="Purpose" value="evaluates the number of unique records"/>
          <sqlGenericExpression xmi:id="_5wCtI34eEei25uY0cniCVg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) AS myquery" language="SQL"/>
          <sqlGenericExpression xmi:id="_5wCtJH4eEei25uY0cniCVg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount = 1) AS myquery" language="MySQL"/>
          <sqlGenericExpression xmi:id="_5wCtJX4eEei25uY0cniCVg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) myquery" language="Oracle"/>
          <sqlGenericExpression xmi:id="_5wCtJn4eEei25uY0cniCVg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount = 1) AS myquery" language="Teradata"/>
          <sqlGenericExpression xmi:id="_5wCtJ34eEei25uY0cniCVg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) AS myquery" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_5wCtKH4eEei25uY0cniCVg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) AS myquery" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
          <sqlGenericExpression xmi:id="_5wCtKX4eEei25uY0cniCVg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1)  myquery" language="Hive" version=""/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:DuplicateCountIndicator" xmi:id="_5WsZmX4eEei25uY0cniCVg" count="1901" nullCount="30" computed="true" duplicateValueCount="55">
        <parameters xmi:id="_5WsZmn4eEei25uY0cniCVg"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om77BX4IEei25uY0cniCVg"/>
        <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Duplicate_Count_0.1.definition#_ccHq0hF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_50Xzhn4eEei25uY0cniCVg" body="SELECT COUNT(*) FROM (SELECT &quot;MERCHANT_ZIPCODE&quot;, COUNT(*) mycount FROM &quot;ORACLE&quot;.&quot;MERCHANT_TABLE&quot;  m  GROUP BY &quot;MERCHANT_ZIPCODE&quot; HAVING COUNT(*) > 1) myquery" language="Oracle"/>
        <builtInIndicatorDefinition xmi:id="_5wG-kH4eEei25uY0cniCVg" name="Duplicate Count" label="Duplicate Count">
          <taggedValue xmi:id="_5wG-kX4eEei25uY0cniCVg" tag="Description" value="counts the number of duplicate rows. This number and the number of unique data equals the number of distinct rows"/>
          <taggedValue xmi:id="_5wG-kn4eEei25uY0cniCVg" tag="Purpose" value="evaluates the number of duplicated records"/>
          <sqlGenericExpression xmi:id="_5wG-k34eEei25uY0cniCVg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) AS myquery" language="SQL"/>
          <sqlGenericExpression xmi:id="_5wG-lH4eEei25uY0cniCVg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount > 1) AS myquery" language="MySQL"/>
          <sqlGenericExpression xmi:id="_5wG-lX4eEei25uY0cniCVg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) myquery" language="Oracle"/>
          <sqlGenericExpression xmi:id="_5wG-ln4eEei25uY0cniCVg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount > 1) AS myquery" language="Teradata"/>
          <sqlGenericExpression xmi:id="_5wG-l34eEei25uY0cniCVg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) myquery" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_5wG-mH4eEei25uY0cniCVg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) AS myquery" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
          <sqlGenericExpression xmi:id="_5wG-mX4eEei25uY0cniCVg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) myquery" language="Hive"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:BlankCountIndicator" xmi:id="_5WsZm34eEei25uY0cniCVg" count="1901" nullCount="30" computed="true">
        <parameters xmi:id="_5WsZnH4eEei25uY0cniCVg"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om77BX4IEei25uY0cniCVg"/>
        <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Blank_Count_0.1.definition#_ccHq0xF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_50Xzh34eEei25uY0cniCVg" body="SELECT COUNT(&quot;MERCHANT_ZIPCODE&quot;) FROM &quot;ORACLE&quot;.&quot;MERCHANT_TABLE&quot;  WHERE TRIM(&quot;MERCHANT_ZIPCODE&quot;) IS NULL " language="Oracle"/>
        <builtInIndicatorDefinition xmi:id="_5wh1UH4eEei25uY0cniCVg" name="Blank Count" label="Blank Count">
          <taggedValue xmi:id="_5wh1UX4eEei25uY0cniCVg" tag="Description" value="counts the number of blank rows. A blank is a non null textual data that contains only white spaces (or nothing). Note that Oracle does not distinguish between the empty string and the null value"/>
          <taggedValue xmi:id="_5wh1Un4eEei25uY0cniCVg" tag="Purpose" value="evaluates the number of blank records"/>
          <sqlGenericExpression xmi:id="_5wh1U34eEei25uY0cniCVg" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE TRIM(&lt;%=__COLUMN_NAMES__%>) = '' &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
          <sqlGenericExpression xmi:id="_5wh1VH4eEei25uY0cniCVg" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE TRIM(&lt;%=__COLUMN_NAMES__%>) IS NULL &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
          <sqlGenericExpression xmi:id="_5wh1VX4eEei25uY0cniCVg" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE LTRIM(RTRIM(&lt;%=__COLUMN_NAMES__%>)) = '' &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
          <sqlGenericExpression xmi:id="_5wh1Vn4eEei25uY0cniCVg" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE LTRIM(RTRIM(&lt;%=__COLUMN_NAMES__%>)) = '' &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_5wh1V34eEei25uY0cniCVg" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> = '' or RTRIM(LTRIM(&lt;%=__COLUMN_NAMES__%>)) = '') &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:TextIndicator" xmi:id="_5WsZnX4eEei25uY0cniCVg">
        <parameters xmi:id="_5WsZnn4eEei25uY0cniCVg"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om77BX4IEei25uY0cniCVg"/>
        <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Text_Statistics_0.1.definition#_yb9x0zh8Ed2XmO7pl5Yuyg"/>
        <averageLengthIndicator xmi:id="_5WsZn34eEei25uY0cniCVg" count="1871" nullCount="30" computed="true" sumLength="11634.0">
          <parameters xmi:id="_50XziH4eEei25uY0cniCVg">
            <textParameter xmi:id="_50XziX4eEei25uY0cniCVg" useBlank="false"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om77BX4IEei25uY0cniCVg"/>
          <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Average_Length_0.1.definition#_ccIR4BF2Ed2PKb6nEJEvhw"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_50Xzin4eEei25uY0cniCVg" body="SELECT SUM(LENGTH(&quot;MERCHANT_ZIPCODE&quot;)), COUNT(&quot;MERCHANT_ZIPCODE&quot;) FROM &quot;ORACLE&quot;.&quot;MERCHANT_TABLE&quot; WHERE (&quot;MERCHANT_ZIPCODE&quot; IS NOT NULL ) AND (TRIM(NVL(&quot;MERCHANT_ZIPCODE&quot;,'NULL TALEND')) IS NOT NULL) " language="Oracle"/>
          <builtInIndicatorDefinition xmi:id="_5wnU4H4eEei25uY0cniCVg" name="Average Length" label="Average Length">
            <taggedValue xmi:id="_5wnU4X4eEei25uY0cniCVg" tag="Description" value="computes the average length of the field. Does not take into account the null values when computing the average."/>
            <taggedValue xmi:id="_5wnU4n4eEei25uY0cniCVg" tag="Purpose" value="evaluates the average length of the textual record"/>
            <sqlGenericExpression xmi:id="_5wnU434eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_5wnU5H4eEei25uY0cniCVg" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_5wnU5X4eEei25uY0cniCVg" body="SELECT SUM(LEN(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_5wnU5n4eEei25uY0cniCVg" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_5wnU534eEei25uY0cniCVg" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_5wnU6H4eEei25uY0cniCVg" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_5wnU6X4eEei25uY0cniCVg" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_5wnU6n4eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_5wnU634eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_5wnU7H4eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )), COUNT( &lt;%=__COLUMN_NAMES__%> ) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) AND ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_5wnU7X4eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_5wnU7n4eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
          </builtInIndicatorDefinition>
        </averageLengthIndicator>
        <maxLengthIndicator xmi:id="_5WsZoH4eEei25uY0cniCVg" nullCount="30" computed="true" length="67">
          <parameters xmi:id="_50Xzi34eEei25uY0cniCVg">
            <textParameter xmi:id="_50XzjH4eEei25uY0cniCVg" useBlank="false"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om77BX4IEei25uY0cniCVg"/>
          <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Maximal_Length_0.1.definition#_ccHq1RF2Ed2PKb6nEJEvhw"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_50XzjX4eEei25uY0cniCVg" body="SELECT MAX( LENGTH(&quot;MERCHANT_ZIPCODE&quot;) ) FROM &quot;ORACLE&quot;.&quot;MERCHANT_TABLE&quot; WHERE (&quot;MERCHANT_ZIPCODE&quot; IS NOT NULL ) AND (TRIM(NVL(&quot;MERCHANT_ZIPCODE&quot;,'NULL TALEND')) IS NOT NULL) " language="Oracle"/>
          <builtInIndicatorDefinition xmi:id="_5wsNYH4eEei25uY0cniCVg" name="Maximal Length" label="Maximal Length">
            <taggedValue xmi:id="_5wsNYX4eEei25uY0cniCVg" tag="Description" value="computes the maximal length of a text field."/>
            <taggedValue xmi:id="_5wsNYn4eEei25uY0cniCVg" tag="Purpose" value="evaluates the length of the longest textual record"/>
            <sqlGenericExpression xmi:id="_5wsNY34eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_5wsNZH4eEei25uY0cniCVg" body="SELECT MAX( LENGTH(&lt;%=__COLUMN_NAMES__%>) ) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle" modificationDate=""/>
            <sqlGenericExpression xmi:id="_5wsNZX4eEei25uY0cniCVg" body="SELECT MAX(LEN(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_5wsNZn4eEei25uY0cniCVg" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_5wsNZ34eEei25uY0cniCVg" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_5wsNaH4eEei25uY0cniCVg" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_5wsNaX4eEei25uY0cniCVg" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive" modificationDate=""/>
            <sqlGenericExpression xmi:id="_5wsNan4eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_5wsNa34eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' )  &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_5wsNbH4eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) AND ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_5wsNbX4eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_5wsNbn4eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
          </builtInIndicatorDefinition>
        </maxLengthIndicator>
        <minLengthIndicator xmi:id="_5WsZoX4eEei25uY0cniCVg" nullCount="30" computed="true" length="1">
          <parameters xmi:id="_50Xzjn4eEei25uY0cniCVg">
            <textParameter xmi:id="_50Xzj34eEei25uY0cniCVg" useBlank="false"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om77BX4IEei25uY0cniCVg"/>
          <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Minimal_Length_0.1.definition#_ccHq1BF2Ed2PKb6nEJEvhw"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_50XzkH4eEei25uY0cniCVg" body="SELECT MIN( LENGTH(&quot;MERCHANT_ZIPCODE&quot;) ) FROM &quot;ORACLE&quot;.&quot;MERCHANT_TABLE&quot; WHERE (&quot;MERCHANT_ZIPCODE&quot; IS NOT NULL ) AND (TRIM(NVL(&quot;MERCHANT_ZIPCODE&quot;,'NULL TALEND')) IS NOT NULL) " language="Oracle"/>
          <builtInIndicatorDefinition xmi:id="_5wxF4H4eEei25uY0cniCVg" name="Minimal Length" label="Minimal Length">
            <taggedValue xmi:id="_5wxF4X4eEei25uY0cniCVg" tag="Description" value="computes the minimal length of a text field. Does not take into account the null values when computing the minimal length."/>
            <taggedValue xmi:id="_5wxF4n4eEei25uY0cniCVg" tag="Purpose" value="evaluates the length of the smallest textual record"/>
            <sqlGenericExpression xmi:id="_5wxF434eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_5wxF5H4eEei25uY0cniCVg" body="SELECT MIN( LENGTH(&lt;%=__COLUMN_NAMES__%>) ) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_5wxF5X4eEei25uY0cniCVg" body="SELECT MIN(LEN(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_5wxF5n4eEei25uY0cniCVg" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_5wxF534eEei25uY0cniCVg" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_5wxF6H4eEei25uY0cniCVg" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_5wxF6X4eEei25uY0cniCVg" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_5wxF6n4eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_5wxF634eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_5wxF7H4eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) AND ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_5wxF7X4eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (1=1) AND (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_5wxF7n4eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
          </builtInIndicatorDefinition>
        </minLengthIndicator>
        <minLengthWithBlankIndicator xmi:id="_5WsZon4eEei25uY0cniCVg" nullCount="30" computed="true" length="1">
          <parameters xmi:id="_50Yan34eEei25uY0cniCVg">
            <textParameter xmi:id="_50YaoH4eEei25uY0cniCVg"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om77BX4IEei25uY0cniCVg"/>
          <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Minimal_Length_With_Blank_0.1.definition#_G4EzQZU9Ed-Y15ulK_jijQ"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_50YaoX4eEei25uY0cniCVg" body="SELECT MIN( LENGTH(&quot;MERCHANT_ZIPCODE&quot;) ) FROM &quot;ORACLE&quot;.&quot;MERCHANT_TABLE&quot; WHERE (&quot;MERCHANT_ZIPCODE&quot; IS NOT NULL ) " language="Oracle"/>
          <builtInIndicatorDefinition xmi:id="_5xUfgH4eEei25uY0cniCVg" name="Minimal Length With Blank" label="Minimal Length With Blank">
            <taggedValue xmi:id="_5xUfgX4eEei25uY0cniCVg" tag="Description" value="computes the minimal length of a text field, counting blank as zero length values."/>
            <taggedValue xmi:id="_5xUfgn4eEei25uY0cniCVg" tag="Purpose" value="evaluates the length of the smallest textual record"/>
            <sqlGenericExpression xmi:id="_5xUfg34eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_5xUfhH4eEei25uY0cniCVg" body="SELECT MIN( LENGTH(&lt;%=__COLUMN_NAMES__%>) ) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_5xUfhX4eEei25uY0cniCVg" body="SELECT MIN(LEN(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_5xUfhn4eEei25uY0cniCVg" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_5xUfh34eEei25uY0cniCVg" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_5xUfiH4eEei25uY0cniCVg" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_5xUfiX4eEei25uY0cniCVg" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_5xUfin4eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_5xUfi34eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_5xUfjH4eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_5xUfjX4eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
          </builtInIndicatorDefinition>
        </minLengthWithBlankIndicator>
        <minLengthWithNullIndicator xmi:id="_5WsZo34eEei25uY0cniCVg" nullCount="30" computed="true" length="0">
          <parameters xmi:id="_50Yaon4eEei25uY0cniCVg">
            <textParameter xmi:id="_50Yao34eEei25uY0cniCVg" useBlank="false" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om77BX4IEei25uY0cniCVg"/>
          <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Minimal_Length_With_Null_0.1.definition#_a4KsoI1qEd-xwI2imLgHRA"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_50YapH4eEei25uY0cniCVg" body="SELECT MIN(CASE WHEN &quot;MERCHANT_ZIPCODE&quot; IS NULL THEN 0 ELSE LENGTH(&quot;MERCHANT_ZIPCODE&quot;) END) FROM &quot;ORACLE&quot;.&quot;MERCHANT_TABLE&quot; WHERE (TRIM(NVL(&quot;MERCHANT_ZIPCODE&quot;,'NULL TALEND')) IS NOT NULL) " language="Oracle"/>
          <builtInIndicatorDefinition xmi:id="_5xbNMH4eEei25uY0cniCVg" name="Minimal Length With Null" label="Minimal Length With Null">
            <taggedValue xmi:id="_5xbNMX4eEei25uY0cniCVg" tag="Description" value="computes the minimal length of a text field, counting null as zero length values."/>
            <taggedValue xmi:id="_5xbNMn4eEei25uY0cniCVg" tag="Purpose" value="evaluates the length of the smallest textual record"/>
            <sqlGenericExpression xmi:id="_5xbNM34eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_5xbNNH4eEei25uY0cniCVg" body="SELECT MIN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_5xbNNX4eEei25uY0cniCVg" body="SELECT MIN(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_5xbNNn4eEei25uY0cniCVg" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_5xbNN34eEei25uY0cniCVg" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_5xbNOH4eEei25uY0cniCVg" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_5xbNOX4eEei25uY0cniCVg" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_5xbNOn4eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_5xbNO34eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_5xbNPH4eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_5xbNPX4eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_5xbNPn4eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
          </builtInIndicatorDefinition>
        </minLengthWithNullIndicator>
        <minLengthWithBlankNullIndicator xmi:id="_5WsZpH4eEei25uY0cniCVg" nullCount="30" computed="true" length="0">
          <parameters xmi:id="_50YapX4eEei25uY0cniCVg">
            <textParameter xmi:id="_50Yapn4eEei25uY0cniCVg" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om77BX4IEei25uY0cniCVg"/>
          <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Minimal_Length_With_Blank_and_Null_0.1.definition#_9HDjMJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_50Yap34eEei25uY0cniCVg" body="SELECT MIN(CASE WHEN &quot;MERCHANT_ZIPCODE&quot; IS NULL  THEN 0 ELSE LENGTH(&quot;MERCHANT_ZIPCODE&quot;) END) FROM &quot;ORACLE&quot;.&quot;MERCHANT_TABLE&quot; " language="Oracle"/>
          <builtInIndicatorDefinition xmi:id="_5xh64H4eEei25uY0cniCVg" name="Minimal Length With Blank and Null" label="Minimal Length With Blank and Null">
            <taggedValue xmi:id="_5xh64X4eEei25uY0cniCVg" tag="Description" value="computes the minimal length of a text field, counting blank and null as zero length values."/>
            <taggedValue xmi:id="_5xh64n4eEei25uY0cniCVg" tag="Purpose" value="evaluates the length of the smallest textual record"/>
            <sqlGenericExpression xmi:id="_5xh6434eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_5xh65H4eEei25uY0cniCVg" body="SELECT MIN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_5xh65X4eEei25uY0cniCVg" body="SELECT MIN(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_5xh65n4eEei25uY0cniCVg" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_5xh6534eEei25uY0cniCVg" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_5xh66H4eEei25uY0cniCVg" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_5xh66X4eEei25uY0cniCVg" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_5xh66n4eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_5xh6634eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_5xh67H4eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END )) FROM  &lt;%=__TABLE_NAME__%>   &lt;%=__WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_5xh67X4eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_5xh67n4eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Netezza"/>
          </builtInIndicatorDefinition>
        </minLengthWithBlankNullIndicator>
        <maxLengthWithBlankIndicator xmi:id="_5WsZpX4eEei25uY0cniCVg" nullCount="30" computed="true" length="67">
          <parameters xmi:id="_50Yaln4eEei25uY0cniCVg">
            <textParameter xmi:id="_50Yal34eEei25uY0cniCVg"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om77BX4IEei25uY0cniCVg"/>
          <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Maximal_Length_With_Blank_0.1.definition#_-xmZcJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_50YamH4eEei25uY0cniCVg" body="SELECT MAX( LENGTH(&quot;MERCHANT_ZIPCODE&quot;) ) FROM &quot;ORACLE&quot;.&quot;MERCHANT_TABLE&quot; WHERE (&quot;MERCHANT_ZIPCODE&quot; IS NOT NULL ) " language="Oracle"/>
          <builtInIndicatorDefinition xmi:id="_5xEn4H4eEei25uY0cniCVg" name="Maximal Length With Blank" label="Maximal Length With Blank">
            <taggedValue xmi:id="_5xEn4X4eEei25uY0cniCVg" tag="Description" value="computes the maximal length of a text field, counting blank data  as zero length values."/>
            <taggedValue xmi:id="_5xEn4n4eEei25uY0cniCVg" tag="Purpose" value="evaluates the length of the longest textual record"/>
            <sqlGenericExpression xmi:id="_5xEn434eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_5xEn5H4eEei25uY0cniCVg" body="SELECT MAX( LENGTH(&lt;%=__COLUMN_NAMES__%>) ) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_5xEn5X4eEei25uY0cniCVg" body="SELECT MAX(LEN(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_5xEn5n4eEei25uY0cniCVg" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_5xEn534eEei25uY0cniCVg" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_5xEn6H4eEei25uY0cniCVg" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_5xEn6X4eEei25uY0cniCVg" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_5xEn6n4eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_5xEn634eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_5xEn7H4eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_5xEn7X4eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
          </builtInIndicatorDefinition>
        </maxLengthWithBlankIndicator>
        <maxLengthWithNullIndicator xmi:id="_5WsZpn4eEei25uY0cniCVg" nullCount="30" computed="true" length="67">
          <parameters xmi:id="_50YamX4eEei25uY0cniCVg">
            <textParameter xmi:id="_50Yamn4eEei25uY0cniCVg" useBlank="false" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om77BX4IEei25uY0cniCVg"/>
          <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Maximal_Length_With_Null_0.1.definition#_-_UFUJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_50Yam34eEei25uY0cniCVg" body="SELECT MAX(CASE WHEN &quot;MERCHANT_ZIPCODE&quot; IS NULL THEN 0 ELSE LENGTH(&quot;MERCHANT_ZIPCODE&quot;) END) FROM &quot;ORACLE&quot;.&quot;MERCHANT_TABLE&quot; WHERE (TRIM(NVL(&quot;MERCHANT_ZIPCODE&quot;,'NULL TALEND')) IS NOT NULL) " language="Oracle"/>
          <builtInIndicatorDefinition xmi:id="_5xKHcH4eEei25uY0cniCVg" name="Maximal Length With Null" label="Maximal Length With Null">
            <taggedValue xmi:id="_5xKHcX4eEei25uY0cniCVg" tag="Description" value="computes the maximal length of a text field, counting null data as zero length values."/>
            <taggedValue xmi:id="_5xKHcn4eEei25uY0cniCVg" tag="Purpose" value="evaluates the length of the longest textual record"/>
            <sqlGenericExpression xmi:id="_5xKHc34eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_5xKHdH4eEei25uY0cniCVg" body="SELECT MAX(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_5xKHdX4eEei25uY0cniCVg" body="SELECT MAX(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_5xKHdn4eEei25uY0cniCVg" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_5xKHd34eEei25uY0cniCVg" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_5xKHeH4eEei25uY0cniCVg" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_5xKHeX4eEei25uY0cniCVg" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive" version=""/>
            <sqlGenericExpression xmi:id="_5xKHen4eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_5xKHe34eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_5xKHfH4eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_5xKHfX4eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_5xKHfn4eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
          </builtInIndicatorDefinition>
        </maxLengthWithNullIndicator>
        <maxLengthWithBlankNullIndicator xmi:id="_5WsZp34eEei25uY0cniCVg" nullCount="30" computed="true" length="67">
          <parameters xmi:id="_50YanH4eEei25uY0cniCVg">
            <textParameter xmi:id="_50YanX4eEei25uY0cniCVg" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om77BX4IEei25uY0cniCVg"/>
          <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Maximal_Length_With_Blank_and_Null_0.1.definition#_-hzp8JSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_50Yann4eEei25uY0cniCVg" body="SELECT MAX(CASE WHEN &quot;MERCHANT_ZIPCODE&quot; IS NULL  THEN 0 ELSE LENGTH(&quot;MERCHANT_ZIPCODE&quot;) END) FROM &quot;ORACLE&quot;.&quot;MERCHANT_TABLE&quot; " language="Oracle"/>
          <builtInIndicatorDefinition xmi:id="_5xO_8H4eEei25uY0cniCVg" name="Maximal Length With Blank and Null" label="Maximal Length With Blank and Null">
            <taggedValue xmi:id="_5xO_8X4eEei25uY0cniCVg" tag="Description" value="computes the maximal length of a text field, counting null and blank data as zero length values."/>
            <taggedValue xmi:id="_5xO_8n4eEei25uY0cniCVg" tag="Purpose" value="evaluates the length of the longest textual record"/>
            <sqlGenericExpression xmi:id="_5xO_834eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_5xO_9H4eEei25uY0cniCVg" body="SELECT MAX(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_5xO_9X4eEei25uY0cniCVg" body="SELECT MAX(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_5xO_9n4eEei25uY0cniCVg" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_5xO_934eEei25uY0cniCVg" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_5xO_-H4eEei25uY0cniCVg" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_5xO_-X4eEei25uY0cniCVg" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_5xO_-n4eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_5xO_-34eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_5xO__H4eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END )) FROM  &lt;%=__TABLE_NAME__%>   &lt;%=__WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_5xO__X4eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_5xO__n4eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Netezza"/>
          </builtInIndicatorDefinition>
        </maxLengthWithBlankNullIndicator>
        <avgLengthWithBlankIndicator xmi:id="_5WsZqH4eEei25uY0cniCVg" count="1871" nullCount="30" computed="true" sumLength="11634.0">
          <parameters xmi:id="_50XzkX4eEei25uY0cniCVg">
            <textParameter xmi:id="_50Xzkn4eEei25uY0cniCVg"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om77BX4IEei25uY0cniCVg"/>
          <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Average_Length_With_Blank_0.1.definition#__gPoIJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_50Xzk34eEei25uY0cniCVg" body="SELECT SUM(CASE WHEN &quot;MERCHANT_ZIPCODE&quot; IS NOT NULL AND  TRIM(&quot;MERCHANT_ZIPCODE&quot;) IS NULL THEN 0 ELSE  LENGTH(&quot;MERCHANT_ZIPCODE&quot;)END), COUNT(*) FROM &quot;ORACLE&quot;.&quot;MERCHANT_TABLE&quot; WHERE (&quot;MERCHANT_ZIPCODE&quot; IS NOT NULL ) " language="Oracle"/>
          <builtInIndicatorDefinition xmi:id="_5w1-YH4eEei25uY0cniCVg" name="Average Length With Blank" label="Average Length With Blank">
            <taggedValue xmi:id="_5w1-YX4eEei25uY0cniCVg" tag="Description" value="computes the average length of the field, counting blank data as zero length values."/>
            <taggedValue xmi:id="_5w1-Yn4eEei25uY0cniCVg" tag="Purpose" value="evaluates the average length of the textual record"/>
            <sqlGenericExpression xmi:id="_5w1-Y34eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH(CASE WHEN   CHAR_LENGTH( TRIM(&lt;%=__COLUMN_NAMES__%>) ) =0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_5w1-ZH4eEei25uY0cniCVg" body="SELECT SUM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NOT NULL AND  TRIM(&lt;%=__COLUMN_NAMES__%>) IS NULL THEN 0 ELSE  LENGTH(&lt;%=__COLUMN_NAMES__%>)END), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_5w1-ZX4eEei25uY0cniCVg" body="SELECT SUM(LEN(CASE WHEN  LEN( LTRIM(RTRIM(&lt;%=__COLUMN_NAMES__%>)) )=0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_5w1-Zn4eEei25uY0cniCVg" body="SELECT SUM(LENGTH(CASE WHEN   LENGTH( TRIM(&lt;%=__COLUMN_NAMES__%>) ) =0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_5w1-Z34eEei25uY0cniCVg" body="SELECT SUM(LENGTH(CASE WHEN   LENGTH( TRIM(&lt;%=__COLUMN_NAMES__%>) ) =0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_5w1-aH4eEei25uY0cniCVg" body="SELECT SUM(LENGTH(CASE WHEN   LENGTH( TRIM(&lt;%=__COLUMN_NAMES__%>) ) =0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_5w1-aX4eEei25uY0cniCVg" body="SELECT SUM(LENGTH(CASE WHEN   LENGTH( TRIM(&lt;%=__COLUMN_NAMES__%>) ) =0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_5w1-an4eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( TRIM(&lt;%=__COLUMN_NAMES__%>) ) =0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_5w1-a34eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( LTRIM(RTRIM(&lt;%=__COLUMN_NAMES__%>)) ) =0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_5w1-bH4eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( TRIM( &lt;%=__COLUMN_NAMES__%> ) ) =0  THEN '' ELSE   &lt;%=__COLUMN_NAMES__%>  END)), COUNT(*) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_5w1-bX4eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( TRIM(&lt;%=__COLUMN_NAMES__%>) ) =0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
          </builtInIndicatorDefinition>
        </avgLengthWithBlankIndicator>
        <avgLengthWithNullIndicator xmi:id="_5WsZqX4eEei25uY0cniCVg" count="1901" nullCount="30" computed="true" sumLength="11634.0">
          <parameters xmi:id="_50YakH4eEei25uY0cniCVg">
            <textParameter xmi:id="_50YakX4eEei25uY0cniCVg" useBlank="false" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om77BX4IEei25uY0cniCVg"/>
          <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Average_Length_With_Null_0.1.definition#__vI_wJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_50Yakn4eEei25uY0cniCVg" body="SELECT SUM(CASE WHEN &quot;MERCHANT_ZIPCODE&quot; IS NULL THEN 0 ELSE LENGTH(&quot;MERCHANT_ZIPCODE&quot;) END), COUNT(*) FROM &quot;ORACLE&quot;.&quot;MERCHANT_TABLE&quot; WHERE (TRIM(NVL(&quot;MERCHANT_ZIPCODE&quot;,'NULL TALEND')) IS NOT NULL) " language="Oracle"/>
          <builtInIndicatorDefinition xmi:id="_5w624H4eEei25uY0cniCVg" name="Average Length With Null" label="Average Length With Null">
            <taggedValue xmi:id="_5w624X4eEei25uY0cniCVg" tag="Description" value="computes the average length of the field, counting null data as zero length values."/>
            <taggedValue xmi:id="_5w624n4eEei25uY0cniCVg" tag="Purpose" value="evaluates the average length of the textual record"/>
            <sqlGenericExpression xmi:id="_5w62434eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_5w625H4eEei25uY0cniCVg" body="SELECT SUM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_5w625X4eEei25uY0cniCVg" body="SELECT SUM(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_5w625n4eEei25uY0cniCVg" body="SELECT SUM(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_5w62534eEei25uY0cniCVg" body="SELECT SUM(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_5w626H4eEei25uY0cniCVg" body="SELECT SUM(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_5w626X4eEei25uY0cniCVg" body="SELECT SUM(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_5w626n4eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_5w62634eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_5w627H4eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_5w627X4eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_5w627n4eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
          </builtInIndicatorDefinition>
        </avgLengthWithNullIndicator>
        <avgLengthWithBlankNullIndicator xmi:id="_5WsZqn4eEei25uY0cniCVg" count="1901" nullCount="30" computed="true" sumLength="11634.0">
          <parameters xmi:id="_50Yak34eEei25uY0cniCVg">
            <textParameter xmi:id="_50YalH4eEei25uY0cniCVg" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om77BX4IEei25uY0cniCVg"/>
          <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Average_Length_With_Blank_and_Null_0.1.definition#__TbUIJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_50YalX4eEei25uY0cniCVg" body="SELECT SUM(CASE WHEN &quot;MERCHANT_ZIPCODE&quot; IS NOT NULL AND  TRIM(&quot;MERCHANT_ZIPCODE&quot;) IS NULL THEN 0 ELSE CASE WHEN &quot;MERCHANT_ZIPCODE&quot; IS NULL THEN 0 ELSE LENGTH(&quot;MERCHANT_ZIPCODE&quot;) END  END), COUNT(*) FROM &quot;ORACLE&quot;.&quot;MERCHANT_TABLE&quot; " language="Oracle"/>
          <builtInIndicatorDefinition xmi:id="_5w_vYH4eEei25uY0cniCVg" name="Average Length With Blank and Null" label="Average Length With Blank and Null">
            <taggedValue xmi:id="_5w_vYX4eEei25uY0cniCVg" tag="Description" value="computes the average length of the field, counting blank and null data as zero lenght values."/>
            <taggedValue xmi:id="_5w_vYn4eEei25uY0cniCVg" tag="Purpose" value="evaluates the average length of the textual record"/>
            <sqlGenericExpression xmi:id="_5w_vY34eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH(CASE WHEN   CHAR_LENGTH( TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'')) ) =0  THEN '' ELSE  IFNULL(&lt;%=__COLUMN_NAMES__%>,'') END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_5w_vZH4eEei25uY0cniCVg" body="SELECT SUM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NOT NULL AND  TRIM(&lt;%=__COLUMN_NAMES__%>) IS NULL THEN 0 ELSE CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END  END), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_5w_vZX4eEei25uY0cniCVg" body="SELECT SUM(LEN(CASE WHEN  LEN( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) )=0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_5w_vZn4eEei25uY0cniCVg" body="SELECT SUM(LENGTH(CASE WHEN   LENGTH( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END ) ) =0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_5w_vZ34eEei25uY0cniCVg" body="SELECT SUM(LENGTH(CASE WHEN   LENGTH( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END ) ) =0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_5w_vaH4eEei25uY0cniCVg" body="SELECT SUM(LENGTH(CASE WHEN   LENGTH( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END ) ) =0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_5w_vaX4eEei25uY0cniCVg" body="SELECT SUM(LENGTH(CASE WHEN   LENGTH( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END ) ) =0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_5w_van4eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END ) ) =0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_5w_va34eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) ) =0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_5w_vbH4eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END ) ) =0  THEN '' ELSE   CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END  END)), COUNT(*) FROM  &lt;%=__TABLE_NAME__%>   &lt;%=__WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_5w_vbX4eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END ) ) =0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_5w_vbn4eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH(CASE WHEN   CHAR_LENGTH( TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'')) ) =0  THEN '' ELSE  ISNULL(&lt;%=__COLUMN_NAMES__%>,'') END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Netezza"/>
          </builtInIndicatorDefinition>
        </avgLengthWithBlankNullIndicator>
      </indicators>
      <indicators xsi:type="dataquality.indicators:PatternFreqIndicator" xmi:id="_5WsZq34eEei25uY0cniCVg" count="1901" nullCount="30" computed="true" distinctValueCount="10" valueToFreq
        <parameters xmi:id="_5WsZrH4eEei25uY0cniCVg"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om77BX4IEei25uY0cniCVg"/>
        <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Pattern Frequency Statistics/Pattern_Frequency_Table_0.1.definition#_kQzTsJR-Ed2XO-JvLwVAwg"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_50YaqH4eEei25uY0cniCVg" body="SELECT * FROM (SELECT TRANSLATE(&quot;MERCHANT_ZIPCODE&quot; , 'abcdefghijklmnopqrstuvwxyzçâêîôûéèùïöüABCDEFGHIJKLMNOPQRSTUVWXYZÇÂÊÎÔÛÉÈÙÏÖÜ0123456789' , 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999'), COUNT(*) AS c FROM &quot;ORACLE&quot;.&quot;MERCHANT_TABLE&quot; t  GROUP BY TRANSLATE(&quot;MERCHANT_ZIPCODE&quot; , 'abcdefghijklmnopqrstuvwxyzçâêîôûéèùïöüABCDEFGHIJKLMNOPQRSTUVWXYZÇÂÊÎÔÛÉÈÙÏÖÜ0123456789' , 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999') ORDER BY c DESC) WHERE ROWNUM &lt;= 10" language="Oracle"/>
        <builtInIndicatorDefinition xmi:id="_5xoBgH4eEei25uY0cniCVg" name="Pattern Frequency Table" label="Pattern Frequency Table">
          <taggedValue xmi:id="_5xoBgX4eEei25uY0cniCVg" tag="Description" value="counts the number of records for each distinct pattern"/>
          <taggedValue xmi:id="_5xoBgn4eEei25uY0cniCVg" tag="Purpose" value="evaluates the most frequent patterns"/>
          <sqlGenericExpression xmi:id="_5xoBg34eEei25uY0cniCVg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY c DESC" language="SQL"/>
          <sqlGenericExpression xmi:id="_5xoBhH4eEei25uY0cniCVg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY c DESC" language="MySQL"/>
          <sqlGenericExpression xmi:id="_5xoBhX4eEei25uY0cniCVg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) AS c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY c DESC" language="Oracle"/>
          <sqlGenericExpression xmi:id="_5xoBhn4eEei25uY0cniCVg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) AS c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY c DESC" language="PostgreSQL"/>
          <sqlGenericExpression xmi:id="_5xoBh34eEei25uY0cniCVg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY c DESC" language="DB2"/>
          <sqlGenericExpression xmi:id="_5xoBiH4eEei25uY0cniCVg" body="SELECT &lt;%=__COLUMN_NAMES__%> , COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY c DESC" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_5xoBiX4eEei25uY0cniCVg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) AS c FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY c DESC" language="Informix"/>
          <sqlGenericExpression xmi:id="_5xoBin4eEei25uY0cniCVg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY c DESC" language="AS/400"/>
          <sqlGenericExpression xmi:id="_5xoBi34eEei25uY0cniCVg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY c DESC" language="Teradata"/>
          <sqlGenericExpression xmi:id="_5xoBjH4eEei25uY0cniCVg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) AS c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY c DESC" language="Vertica Database"/>
          <sqlGenericExpression xmi:id="_5xoBjX4eEei25uY0cniCVg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) AS c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY c DESC" language="Netezza"/>
          <charactersMapping xmi:id="_5xoBjn4eEei25uY0cniCVg" language="SQL" charactersToReplace="abcdefghijklmnopqrstuvwxyzçâêîôûéèùïöüABCDEFGHIJKLMNOPQRSTUVWXYZÇÂÊÎÔÛÉÈÙÏÖÜ0123456789" replacementCharacters="aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999"/>
          <charactersMapping xmi:id="_5xoBj34eEei25uY0cniCVg" name="Characters mapping on MySQL" language="MySQL" charactersToReplace="abcdefghijklmnopqrstuvwxyzçâêîôûéèùïöüABCDEFGHIJKLMNOPQRSTUVWXYZÇÂÊÎÔÛÉÈÙÏÖÜ0123456789" replacementCharacters="aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999"/>
          <charactersMapping xmi:id="_5xoBkH4eEei25uY0cniCVg" name="Characters mapping on Oracle" language="Oracle" charactersToReplace="abcdefghijklmnopqrstuvwxyzçâêîôûéèùïöüABCDEFGHIJKLMNOPQRSTUVWXYZÇÂÊÎÔÛÉÈÙÏÖÜ0123456789" replacementCharacters="aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999"/>
          <charactersMapping xmi:id="_5xoBkX4eEei25uY0cniCVg" name="Characters mapping on PostgreSQL" language="PostgreSQL" charactersToReplace="abcdefghijklmnopqrstuvwxyzçâêîôûéèùïöüABCDEFGHIJKLMNOPQRSTUVWXYZÇÂÊÎÔÛÉÈÙÏÖÜ0123456789" replacementCharacters="aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999"/>
          <charactersMapping xmi:id="_5xoBkn4eEei25uY0cniCVg" name="Characters mapping on Microsoft SQL Server" language="Microsoft SQL Server" charactersToReplace="abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789" replacementCharacters="aaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999"/>
          <charactersMapping xmi:id="_5xoBk34eEei25uY0cniCVg" name="Characters mapping on DB2" language="DB2" charactersToReplace="abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789" replacementCharacters="aaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999"/>
          <charactersMapping xmi:id="_5xoBlH4eEei25uY0cniCVg" name="Characters mapping on AS/400" language="AS/400" charactersToReplace="abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789" replacementCharacters="aaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999"/>
          <charactersMapping xmi:id="_5xoBlX4eEei25uY0cniCVg" name="Characters mapping on Informix" language="Informix" charactersToReplace="abcdefghijklmnopqrstuvwxyzçâêîôûéèùïöüABCDEFGHIJKLMNOPQRSTUVWXYZÇÂÊÎÔÛÉÈÙÏÖÜ0123456789" replacementCharacters="aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999"/>
          <charactersMapping xmi:id="_5xoBln4eEei25uY0cniCVg" name="Characters mapping on Teradata" language="Teradata" charactersToReplace="abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789" replacementCharacters="aaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999"/>
          <charactersMapping xmi:id="_5xoBl34eEei25uY0cniCVg" name="Characters mapping on Vertica" language="Vertica Database" charactersToReplace="abcdefghijklmnopqrstuvwxyzçâêîôûéèùïöüABCDEFGHIJKLMNOPQRSTUVWXYZÇÂÊÎÔÛÉÈÙÏÖÜ0123456789" replacementCharacters="aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999"/>
          <charactersMapping xmi:id="_5xoBmH4eEei25uY0cniCVg" language="Netezza" charactersToReplace="abcdefghijklmnopqrstuvwxyzçâêîôûéèùïöüABCDEFGHIJKLMNOPQRSTUVWXYZÇÂÊÎÔÛÉÈÙÏÖÜ0123456789" replacementCharacters="aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999"/>
          <charactersMapping xmi:id="_5xoBmX4eEei25uY0cniCVg" name="Characters mapping on Hive" language="Hive" charactersToReplace="0123456789abcdefghijklmnopqrstuvwxyz?aê???éèù??üABCDEFGHIJKLMNOPQRSTUVWXYZ??ê???éèù??ü" replacementCharacters="9999999999aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:SoundexFreqIndicator" xmi:id="_5WsZrX4eEei25uY0cniCVg" count="1901" nullCount="30" computed="true" distinctValueCount="10" valueToFreqvalueToDistinctFreq
        <parameters xmi:id="_5WsZrn4eEei25uY0cniCVg"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om77BX4IEei25uY0cniCVg"/>
        <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Soundex/Soundex_Frequency_Table_0.1.definition#_VGep4Pa7Ed24-N3PsP_o-w"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_50YaqX4eEei25uY0cniCVg" body="SELECT * FROM (SELECT MAX(&quot;MERCHANT_ZIPCODE&quot;), SOUNDEX(&quot;MERCHANT_ZIPCODE&quot;), COUNT(*) c, COUNT(DISTINCT &quot;MERCHANT_ZIPCODE&quot;) d FROM &quot;ORACLE&quot;.&quot;MERCHANT_TABLE&quot; t  GROUP BY SOUNDEX(&quot;MERCHANT_ZIPCODE&quot;) ORDER BY d DESC,c DESC) WHERE ROWNUM &lt;= 10" language="Oracle"/>
        <builtInIndicatorDefinition xmi:id="_5xuvMH4eEei25uY0cniCVg" name="Soundex Frequency Table" label="Soundex Frequency Table">
          <taggedValue xmi:id="_5xuvMX4eEei25uY0cniCVg" tag="Description" value="counts the number of records for each record with a distinct soundex"/>
          <taggedValue xmi:id="_5xuvMn4eEei25uY0cniCVg" tag="Purpose" value="evaluates the most frequent records with respect to their soundex value"/>
          <sqlGenericExpression xmi:id="_5xuvM34eEei25uY0cniCVg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>), COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SOUNDEX(&lt;%=__COLUMN_NAMES__%>) ORDER BY d DESC,c DESC" language="SQL"/>
          <sqlGenericExpression xmi:id="_5xuvNH4eEei25uY0cniCVg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>) , COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY 2 ORDER BY d DESC,c DESC" language="MySQL"/>
          <sqlGenericExpression xmi:id="_5xuvNX4eEei25uY0cniCVg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>), COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SOUNDEX(&lt;%=__COLUMN_NAMES__%>) ORDER BY d DESC,c DESC" language="Oracle"/>
          <sqlGenericExpression xmi:id="_5xuvNn4eEei25uY0cniCVg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>),  COUNT(*), COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SOUNDEX(&lt;%=__COLUMN_NAMES__%>) ORDER BY COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) DESC , COUNT(*) DESC" language="PostgreSQL"/>
          <sqlGenericExpression xmi:id="_5xuvN34eEei25uY0cniCVg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>), COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SOUNDEX(&lt;%=__COLUMN_NAMES__%>) ORDER BY d DESC,c DESC" language="DB2"/>
          <sqlGenericExpression xmi:id="_5xuvOH4eEei25uY0cniCVg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>), COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SOUNDEX(&lt;%=__COLUMN_NAMES__%>) ORDER BY d DESC,c DESC" language="Teradata"/>
          <sqlGenericExpression xmi:id="_5xuvOX4eEei25uY0cniCVg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>), COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SOUNDEX(&lt;%=__COLUMN_NAMES__%>) ORDER BY d DESC,c DESC" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_5xuvOn4eEei25uY0cniCVg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>) , COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY 2 ORDER BY d DESC,c DESC" language="Informix"/>
          <sqlGenericExpression xmi:id="_5xuvO34eEei25uY0cniCVg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>) , COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY 2 ORDER BY d DESC,c DESC" language="Ingres"/>
          <sqlGenericExpression xmi:id="_5xuvPH4eEei25uY0cniCVg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), NYSIIS(&lt;%=__COLUMN_NAMES__%>) , COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY 2 ORDER BY d DESC,c DESC" language="Netezza"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RowCountIndicator" xmi:id="_5WsZsH4eEei25uY0cniCVg" count="1901" computed="true">
        <parameters xmi:id="_5WsZsX4eEei25uY0cniCVg"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om77CX4IEei25uY0cniCVg"/>
        <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Row_Count_0.1.definition#_ccFOkBF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_50TiFX4eEei25uY0cniCVg" body="SELECT COUNT(*) FROM &quot;ORACLE&quot;.&quot;MERCHANT_TABLE&quot; " language="Oracle"/>
        <builtInIndicatorDefinition xmi:id="_5x2rAH4eEei25uY0cniCVg" name="Row Count" label="Row Count">
          <taggedValue xmi:id="_5x2rAX4eEei25uY0cniCVg" tag="Description" value="counts the number of rows"/>
          <taggedValue xmi:id="_5x2rAn4eEei25uY0cniCVg" tag="Purpose" value="evaluates the number of records"/>
          <sqlGenericExpression xmi:id="_5x2rA34eEei25uY0cniCVg" body="SELECT COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:NullCountIndicator" xmi:id="_5WsZsn4eEei25uY0cniCVg" count="1901" nullCount="4" computed="true">
        <parameters xmi:id="_5WsZs34eEei25uY0cniCVg"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om77CX4IEei25uY0cniCVg"/>
        <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Null_Count_0.1.definition#_GrAeADh9Ed2XmO7pl5Yuyg"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_50ZBoH4eEei25uY0cniCVg" body="SELECT COUNT(*) FROM &quot;ORACLE&quot;.&quot;MERCHANT_TABLE&quot; WHERE &quot;MERCHANT_COUNTRY&quot; IS NULL " language="Oracle"/>
        <builtInIndicatorDefinition xmi:id="_5x9_wH4eEei25uY0cniCVg" name="Null Count" label="Null Count">
          <taggedValue xmi:id="_5x9_wX4eEei25uY0cniCVg" tag="Purpose" value="evaluate the number of missing data (null records)"/>
          <taggedValue xmi:id="_5x9_wn4eEei25uY0cniCVg" tag="Description" value="counts the number of null rows"/>
          <sqlGenericExpression xmi:id="_5x9_w34eEei25uY0cniCVg" body="SELECT COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE &lt;%=__COLUMN_NAMES__%> IS NULL &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:DistinctCountIndicator" xmi:id="_5WsZtH4eEei25uY0cniCVg" count="1901" nullCount="4" computed="true" distinctValueCount="54">
        <parameters xmi:id="_5WsZtX4eEei25uY0cniCVg"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om77CX4IEei25uY0cniCVg"/>
        <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Distinct_Count_0.1.definition#_ccHq0BF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_50ZBoX4eEei25uY0cniCVg" body="SELECT COUNT(*) FROM (SELECT DISTINCT &quot;MERCHANT_COUNTRY&quot; FROM &quot;ORACLE&quot;.&quot;MERCHANT_TABLE&quot; ) A" language="Oracle"/>
        <builtInIndicatorDefinition xmi:id="_5yp8QH4eEei25uY0cniCVg" name="Distinct Count" label="Distinct Count">
          <taggedValue xmi:id="_5yp8QX4eEei25uY0cniCVg" tag="Description" value="counts the number of distinct rows (like a &quot;SELECT DISTINCT&quot; SQL statement)"/>
          <taggedValue xmi:id="_5yp8Qn4eEei25uY0cniCVg" tag="Purpose" value="evaluates the number of distinct records"/>
          <sqlGenericExpression xmi:id="_5yp8Q34eEei25uY0cniCVg" body="SELECT COUNT(*) FROM (SELECT DISTINCT &lt;%=__COLUMN_NAMES__%> FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>) A" language="SQL"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:UniqueCountIndicator" xmi:id="_5WsZtn4eEei25uY0cniCVg" count="1901" nullCount="4" computed="true" uniqueValueCount="35">
        <parameters xmi:id="_5WsZt34eEei25uY0cniCVg"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om77CX4IEei25uY0cniCVg"/>
        <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Unique_Count_0.1.definition#_ccHq0RF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_50ZBon4eEei25uY0cniCVg" body="SELECT COUNT(*) FROM (SELECT &quot;MERCHANT_COUNTRY&quot;, COUNT(*) FROM &quot;ORACLE&quot;.&quot;MERCHANT_TABLE&quot;  GROUP BY &quot;MERCHANT_COUNTRY&quot; HAVING COUNT(*) = 1) myquery" language="Oracle"/>
        <builtInIndicatorDefinition xmi:id="_5yvb0H4eEei25uY0cniCVg" name="Unique Count" label="Unique Count">
          <taggedValue xmi:id="_5yvb0X4eEei25uY0cniCVg" tag="Description" value="counts the number of unique rows (i.e. distinct rows with only one instance: rows that are not duplicated)"/>
          <taggedValue xmi:id="_5yvb0n4eEei25uY0cniCVg" tag="Purpose" value="evaluates the number of unique records"/>
          <sqlGenericExpression xmi:id="_5yvb034eEei25uY0cniCVg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) AS myquery" language="SQL"/>
          <sqlGenericExpression xmi:id="_5yvb1H4eEei25uY0cniCVg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount = 1) AS myquery" language="MySQL"/>
          <sqlGenericExpression xmi:id="_5yvb1X4eEei25uY0cniCVg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) myquery" language="Oracle"/>
          <sqlGenericExpression xmi:id="_5yvb1n4eEei25uY0cniCVg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount = 1) AS myquery" language="Teradata"/>
          <sqlGenericExpression xmi:id="_5yvb134eEei25uY0cniCVg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) AS myquery" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_5yvb2H4eEei25uY0cniCVg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) AS myquery" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
          <sqlGenericExpression xmi:id="_5yvb2X4eEei25uY0cniCVg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1)  myquery" language="Hive" version=""/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:DuplicateCountIndicator" xmi:id="_5WsZuH4eEei25uY0cniCVg" count="1901" nullCount="4" computed="true" duplicateValueCount="19">
        <parameters xmi:id="_5WsZuX4eEei25uY0cniCVg"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om77CX4IEei25uY0cniCVg"/>
        <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Duplicate_Count_0.1.definition#_ccHq0hF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_50ZBo34eEei25uY0cniCVg" body="SELECT COUNT(*) FROM (SELECT &quot;MERCHANT_COUNTRY&quot;, COUNT(*) mycount FROM &quot;ORACLE&quot;.&quot;MERCHANT_TABLE&quot;  m  GROUP BY &quot;MERCHANT_COUNTRY&quot; HAVING COUNT(*) > 1) myquery" language="Oracle"/>
        <builtInIndicatorDefinition xmi:id="_5y07YH4eEei25uY0cniCVg" name="Duplicate Count" label="Duplicate Count">
          <taggedValue xmi:id="_5y07YX4eEei25uY0cniCVg" tag="Description" value="counts the number of duplicate rows. This number and the number of unique data equals the number of distinct rows"/>
          <taggedValue xmi:id="_5y07Yn4eEei25uY0cniCVg" tag="Purpose" value="evaluates the number of duplicated records"/>
          <sqlGenericExpression xmi:id="_5y07Y34eEei25uY0cniCVg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) AS myquery" language="SQL"/>
          <sqlGenericExpression xmi:id="_5y07ZH4eEei25uY0cniCVg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount > 1) AS myquery" language="MySQL"/>
          <sqlGenericExpression xmi:id="_5y07ZX4eEei25uY0cniCVg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) myquery" language="Oracle"/>
          <sqlGenericExpression xmi:id="_5y07Zn4eEei25uY0cniCVg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount > 1) AS myquery" language="Teradata"/>
          <sqlGenericExpression xmi:id="_5y07Z34eEei25uY0cniCVg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) myquery" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_5y07aH4eEei25uY0cniCVg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) AS myquery" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
          <sqlGenericExpression xmi:id="_5y07aX4eEei25uY0cniCVg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) myquery" language="Hive"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:BlankCountIndicator" xmi:id="_5WsZun4eEei25uY0cniCVg" count="1901" nullCount="4" computed="true">
        <parameters xmi:id="_5WsZu34eEei25uY0cniCVg"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om77CX4IEei25uY0cniCVg"/>
        <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Blank_Count_0.1.definition#_ccHq0xF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_50ZBpH4eEei25uY0cniCVg" body="SELECT COUNT(&quot;MERCHANT_COUNTRY&quot;) FROM &quot;ORACLE&quot;.&quot;MERCHANT_TABLE&quot;  WHERE TRIM(&quot;MERCHANT_COUNTRY&quot;) IS NULL " language="Oracle"/>
        <builtInIndicatorDefinition xmi:id="_5y5z4H4eEei25uY0cniCVg" name="Blank Count" label="Blank Count">
          <taggedValue xmi:id="_5y5z4X4eEei25uY0cniCVg" tag="Description" value="counts the number of blank rows. A blank is a non null textual data that contains only white spaces (or nothing). Note that Oracle does not distinguish between the empty string and the null value"/>
          <taggedValue xmi:id="_5y5z4n4eEei25uY0cniCVg" tag="Purpose" value="evaluates the number of blank records"/>
          <sqlGenericExpression xmi:id="_5y5z434eEei25uY0cniCVg" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE TRIM(&lt;%=__COLUMN_NAMES__%>) = '' &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
          <sqlGenericExpression xmi:id="_5y5z5H4eEei25uY0cniCVg" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE TRIM(&lt;%=__COLUMN_NAMES__%>) IS NULL &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
          <sqlGenericExpression xmi:id="_5y5z5X4eEei25uY0cniCVg" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE LTRIM(RTRIM(&lt;%=__COLUMN_NAMES__%>)) = '' &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
          <sqlGenericExpression xmi:id="_5y5z5n4eEei25uY0cniCVg" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE LTRIM(RTRIM(&lt;%=__COLUMN_NAMES__%>)) = '' &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_5y5z534eEei25uY0cniCVg" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> = '' or RTRIM(LTRIM(&lt;%=__COLUMN_NAMES__%>)) = '') &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:TextIndicator" xmi:id="_5WsZvH4eEei25uY0cniCVg">
        <parameters xmi:id="_5WsZvX4eEei25uY0cniCVg"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om77CX4IEei25uY0cniCVg"/>
        <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Text_Statistics_0.1.definition#_yb9x0zh8Ed2XmO7pl5Yuyg"/>
        <averageLengthIndicator xmi:id="_5WsZvn4eEei25uY0cniCVg" count="1897" nullCount="4" computed="true" sumLength="17118.0">
          <parameters xmi:id="_50ZBpX4eEei25uY0cniCVg">
            <textParameter xmi:id="_50ZBpn4eEei25uY0cniCVg" useBlank="false"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om77CX4IEei25uY0cniCVg"/>
          <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Average_Length_0.1.definition#_ccIR4BF2Ed2PKb6nEJEvhw"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_50ZBp34eEei25uY0cniCVg" body="SELECT SUM(LENGTH(&quot;MERCHANT_COUNTRY&quot;)), COUNT(&quot;MERCHANT_COUNTRY&quot;) FROM &quot;ORACLE&quot;.&quot;MERCHANT_TABLE&quot; WHERE (&quot;MERCHANT_COUNTRY&quot; IS NOT NULL ) AND (TRIM(NVL(&quot;MERCHANT_COUNTRY&quot;,'NULL TALEND')) IS NOT NULL) " language="Oracle"/>
          <builtInIndicatorDefinition xmi:id="_5y_TcH4eEei25uY0cniCVg" name="Average Length" label="Average Length">
            <taggedValue xmi:id="_5y_TcX4eEei25uY0cniCVg" tag="Description" value="computes the average length of the field. Does not take into account the null values when computing the average."/>
            <taggedValue xmi:id="_5y_Tcn4eEei25uY0cniCVg" tag="Purpose" value="evaluates the average length of the textual record"/>
            <sqlGenericExpression xmi:id="_5y_Tc34eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_5y_TdH4eEei25uY0cniCVg" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_5y_TdX4eEei25uY0cniCVg" body="SELECT SUM(LEN(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_5y_Tdn4eEei25uY0cniCVg" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_5y_Td34eEei25uY0cniCVg" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_5y_TeH4eEei25uY0cniCVg" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_5y_TeX4eEei25uY0cniCVg" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_5y_Ten4eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_5y_Te34eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_5y_TfH4eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )), COUNT( &lt;%=__COLUMN_NAMES__%> ) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) AND ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_5y_TfX4eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_5y_Tfn4eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
          </builtInIndicatorDefinition>
        </averageLengthIndicator>
        <maxLengthIndicator xmi:id="_5WsZv34eEei25uY0cniCVg" nullCount="4" computed="true" length="65">
          <parameters xmi:id="_50ZBqH4eEei25uY0cniCVg">
            <textParameter xmi:id="_50ZBqX4eEei25uY0cniCVg" useBlank="false"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om77CX4IEei25uY0cniCVg"/>
          <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Maximal_Length_0.1.definition#_ccHq1RF2Ed2PKb6nEJEvhw"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_50ZBqn4eEei25uY0cniCVg" body="SELECT MAX( LENGTH(&quot;MERCHANT_COUNTRY&quot;) ) FROM &quot;ORACLE&quot;.&quot;MERCHANT_TABLE&quot; WHERE (&quot;MERCHANT_COUNTRY&quot; IS NOT NULL ) AND (TRIM(NVL(&quot;MERCHANT_COUNTRY&quot;,'NULL TALEND')) IS NOT NULL) " language="Oracle"/>
          <builtInIndicatorDefinition xmi:id="_5zEL8H4eEei25uY0cniCVg" name="Maximal Length" label="Maximal Length">
            <taggedValue xmi:id="_5zEL8X4eEei25uY0cniCVg" tag="Description" value="computes the maximal length of a text field."/>
            <taggedValue xmi:id="_5zEL8n4eEei25uY0cniCVg" tag="Purpose" value="evaluates the length of the longest textual record"/>
            <sqlGenericExpression xmi:id="_5zEL834eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_5zEL9H4eEei25uY0cniCVg" body="SELECT MAX( LENGTH(&lt;%=__COLUMN_NAMES__%>) ) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle" modificationDate=""/>
            <sqlGenericExpression xmi:id="_5zEL9X4eEei25uY0cniCVg" body="SELECT MAX(LEN(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_5zEL9n4eEei25uY0cniCVg" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_5zEL934eEei25uY0cniCVg" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_5zEL-H4eEei25uY0cniCVg" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_5zEL-X4eEei25uY0cniCVg" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive" modificationDate=""/>
            <sqlGenericExpression xmi:id="_5zEL-n4eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_5zEL-34eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' )  &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_5zEL_H4eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) AND ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_5zEL_X4eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_5zEL_n4eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
          </builtInIndicatorDefinition>
        </maxLengthIndicator>
        <minLengthIndicator xmi:id="_5WsZwH4eEei25uY0cniCVg" nullCount="4" computed="true" length="3">
          <parameters xmi:id="_50ZBq34eEei25uY0cniCVg">
            <textParameter xmi:id="_50ZBrH4eEei25uY0cniCVg" useBlank="false"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om77CX4IEei25uY0cniCVg"/>
          <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Minimal_Length_0.1.definition#_ccHq1BF2Ed2PKb6nEJEvhw"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_50ZBrX4eEei25uY0cniCVg" body="SELECT MIN( LENGTH(&quot;MERCHANT_COUNTRY&quot;) ) FROM &quot;ORACLE&quot;.&quot;MERCHANT_TABLE&quot; WHERE (&quot;MERCHANT_COUNTRY&quot; IS NOT NULL ) AND (TRIM(NVL(&quot;MERCHANT_COUNTRY&quot;,'NULL TALEND')) IS NOT NULL) " language="Oracle"/>
          <builtInIndicatorDefinition xmi:id="_5zJrgH4eEei25uY0cniCVg" name="Minimal Length" label="Minimal Length">
            <taggedValue xmi:id="_5zJrgX4eEei25uY0cniCVg" tag="Description" value="computes the minimal length of a text field. Does not take into account the null values when computing the minimal length."/>
            <taggedValue xmi:id="_5zJrgn4eEei25uY0cniCVg" tag="Purpose" value="evaluates the length of the smallest textual record"/>
            <sqlGenericExpression xmi:id="_5zJrg34eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_5zJrhH4eEei25uY0cniCVg" body="SELECT MIN( LENGTH(&lt;%=__COLUMN_NAMES__%>) ) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_5zJrhX4eEei25uY0cniCVg" body="SELECT MIN(LEN(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_5zJrhn4eEei25uY0cniCVg" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_5zJrh34eEei25uY0cniCVg" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_5zJriH4eEei25uY0cniCVg" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_5zJriX4eEei25uY0cniCVg" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_5zJrin4eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_5zJri34eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_5zJrjH4eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) AND ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_5zJrjX4eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (1=1) AND (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_5zJrjn4eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
          </builtInIndicatorDefinition>
        </minLengthIndicator>
        <minLengthWithBlankIndicator xmi:id="_5WsZwX4eEei25uY0cniCVg" nullCount="4" computed="true" length="3">
          <parameters xmi:id="_50Zot34eEei25uY0cniCVg">
            <textParameter xmi:id="_50ZouH4eEei25uY0cniCVg"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om77CX4IEei25uY0cniCVg"/>
          <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Minimal_Length_With_Blank_0.1.definition#_G4EzQZU9Ed-Y15ulK_jijQ"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_50ZouX4eEei25uY0cniCVg" body="SELECT MIN( LENGTH(&quot;MERCHANT_COUNTRY&quot;) ) FROM &quot;ORACLE&quot;.&quot;MERCHANT_TABLE&quot; WHERE (&quot;MERCHANT_COUNTRY&quot; IS NOT NULL ) " language="Oracle"/>
          <builtInIndicatorDefinition xmi:id="_5zu6UH4eEei25uY0cniCVg" name="Minimal Length With Blank" label="Minimal Length With Blank">
            <taggedValue xmi:id="_5zu6UX4eEei25uY0cniCVg" tag="Description" value="computes the minimal length of a text field, counting blank as zero length values."/>
            <taggedValue xmi:id="_5zu6Un4eEei25uY0cniCVg" tag="Purpose" value="evaluates the length of the smallest textual record"/>
            <sqlGenericExpression xmi:id="_5zu6U34eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_5zu6VH4eEei25uY0cniCVg" body="SELECT MIN( LENGTH(&lt;%=__COLUMN_NAMES__%>) ) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_5zu6VX4eEei25uY0cniCVg" body="SELECT MIN(LEN(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_5zu6Vn4eEei25uY0cniCVg" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_5zu6V34eEei25uY0cniCVg" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_5zu6WH4eEei25uY0cniCVg" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_5zu6WX4eEei25uY0cniCVg" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_5zu6Wn4eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_5zu6W34eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_5zu6XH4eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_5zu6XX4eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
          </builtInIndicatorDefinition>
        </minLengthWithBlankIndicator>
        <minLengthWithNullIndicator xmi:id="_5WsZwn4eEei25uY0cniCVg" nullCount="4" computed="true" length="0">
          <parameters xmi:id="_50Zoun4eEei25uY0cniCVg">
            <textParameter xmi:id="_50Zou34eEei25uY0cniCVg" useBlank="false" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om77CX4IEei25uY0cniCVg"/>
          <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Minimal_Length_With_Null_0.1.definition#_a4KsoI1qEd-xwI2imLgHRA"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_50ZovH4eEei25uY0cniCVg" body="SELECT MIN(CASE WHEN &quot;MERCHANT_COUNTRY&quot; IS NULL THEN 0 ELSE LENGTH(&quot;MERCHANT_COUNTRY&quot;) END) FROM &quot;ORACLE&quot;.&quot;MERCHANT_TABLE&quot; WHERE (TRIM(NVL(&quot;MERCHANT_COUNTRY&quot;,'NULL TALEND')) IS NOT NULL) " language="Oracle"/>
          <builtInIndicatorDefinition xmi:id="_5z0Z4H4eEei25uY0cniCVg" name="Minimal Length With Null" label="Minimal Length With Null">
            <taggedValue xmi:id="_5z0Z4X4eEei25uY0cniCVg" tag="Description" value="computes the minimal length of a text field, counting null as zero length values."/>
            <taggedValue xmi:id="_5z0Z4n4eEei25uY0cniCVg" tag="Purpose" value="evaluates the length of the smallest textual record"/>
            <sqlGenericExpression xmi:id="_5z0Z434eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_5z0Z5H4eEei25uY0cniCVg" body="SELECT MIN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_5z0Z5X4eEei25uY0cniCVg" body="SELECT MIN(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_5z0Z5n4eEei25uY0cniCVg" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_5z0Z534eEei25uY0cniCVg" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_5z0Z6H4eEei25uY0cniCVg" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_5z0Z6X4eEei25uY0cniCVg" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_5z0Z6n4eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_5z0Z634eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_5z0Z7H4eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_5z0Z7X4eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_5z0Z7n4eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
          </builtInIndicatorDefinition>
        </minLengthWithNullIndicator>
        <minLengthWithBlankNullIndicator xmi:id="_5WsZw34eEei25uY0cniCVg" nullCount="4" computed="true" length="0">
          <parameters xmi:id="_50ZovX4eEei25uY0cniCVg">
            <textParameter xmi:id="_50Zovn4eEei25uY0cniCVg" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om77CX4IEei25uY0cniCVg"/>
          <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Minimal_Length_With_Blank_and_Null_0.1.definition#_9HDjMJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_50Zov34eEei25uY0cniCVg" body="SELECT MIN(CASE WHEN &quot;MERCHANT_COUNTRY&quot; IS NULL  THEN 0 ELSE LENGTH(&quot;MERCHANT_COUNTRY&quot;) END) FROM &quot;ORACLE&quot;.&quot;MERCHANT_TABLE&quot; " language="Oracle"/>
          <builtInIndicatorDefinition xmi:id="_5z6ggH4eEei25uY0cniCVg" name="Minimal Length With Blank and Null" label="Minimal Length With Blank and Null">
            <taggedValue xmi:id="_5z6ggX4eEei25uY0cniCVg" tag="Description" value="computes the minimal length of a text field, counting blank and null as zero length values."/>
            <taggedValue xmi:id="_5z6ggn4eEei25uY0cniCVg" tag="Purpose" value="evaluates the length of the smallest textual record"/>
            <sqlGenericExpression xmi:id="_5z6gg34eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_5z6ghH4eEei25uY0cniCVg" body="SELECT MIN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_5z6ghX4eEei25uY0cniCVg" body="SELECT MIN(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_5z6ghn4eEei25uY0cniCVg" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_5z6gh34eEei25uY0cniCVg" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_5z6giH4eEei25uY0cniCVg" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_5z6giX4eEei25uY0cniCVg" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_5z6gin4eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_5z6gi34eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_5z6gjH4eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END )) FROM  &lt;%=__TABLE_NAME__%>   &lt;%=__WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_5z6gjX4eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_5z6gjn4eEei25uY0cniCVg" body="SELECT MIN(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Netezza"/>
          </builtInIndicatorDefinition>
        </minLengthWithBlankNullIndicator>
        <maxLengthWithBlankIndicator xmi:id="_5WsZxH4eEei25uY0cniCVg" nullCount="4" computed="true" length="65">
          <parameters xmi:id="_50ZBt34eEei25uY0cniCVg">
            <textParameter xmi:id="_50ZBuH4eEei25uY0cniCVg"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om77CX4IEei25uY0cniCVg"/>
          <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Maximal_Length_With_Blank_0.1.definition#_-xmZcJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_50ZosH4eEei25uY0cniCVg" body="SELECT MAX( LENGTH(&quot;MERCHANT_COUNTRY&quot;) ) FROM &quot;ORACLE&quot;.&quot;MERCHANT_TABLE&quot; WHERE (&quot;MERCHANT_COUNTRY&quot; IS NOT NULL ) " language="Oracle"/>
          <builtInIndicatorDefinition xmi:id="_5zeboH4eEei25uY0cniCVg" name="Maximal Length With Blank" label="Maximal Length With Blank">
            <taggedValue xmi:id="_5zeboX4eEei25uY0cniCVg" tag="Description" value="computes the maximal length of a text field, counting blank data  as zero length values."/>
            <taggedValue xmi:id="_5zebon4eEei25uY0cniCVg" tag="Purpose" value="evaluates the length of the longest textual record"/>
            <sqlGenericExpression xmi:id="_5zebo34eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_5zebpH4eEei25uY0cniCVg" body="SELECT MAX( LENGTH(&lt;%=__COLUMN_NAMES__%>) ) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_5zebpX4eEei25uY0cniCVg" body="SELECT MAX(LEN(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_5zebpn4eEei25uY0cniCVg" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_5zebp34eEei25uY0cniCVg" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_5zebqH4eEei25uY0cniCVg" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_5zebqX4eEei25uY0cniCVg" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_5zebqn4eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_5zebq34eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_5zebrH4eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_5zebrX4eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
          </builtInIndicatorDefinition>
        </maxLengthWithBlankIndicator>
        <maxLengthWithNullIndicator xmi:id="_5WsZxX4eEei25uY0cniCVg" nullCount="4" computed="true" length="65">
          <parameters xmi:id="_50ZosX4eEei25uY0cniCVg">
            <textParameter xmi:id="_50Zosn4eEei25uY0cniCVg" useBlank="false" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om77CX4IEei25uY0cniCVg"/>
          <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Maximal_Length_With_Null_0.1.definition#_-_UFUJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_50Zos34eEei25uY0cniCVg" body="SELECT MAX(CASE WHEN &quot;MERCHANT_COUNTRY&quot; IS NULL THEN 0 ELSE LENGTH(&quot;MERCHANT_COUNTRY&quot;) END) FROM &quot;ORACLE&quot;.&quot;MERCHANT_TABLE&quot; WHERE (TRIM(NVL(&quot;MERCHANT_COUNTRY&quot;,'NULL TALEND')) IS NOT NULL) " language="Oracle"/>
          <builtInIndicatorDefinition xmi:id="_5zj7MH4eEei25uY0cniCVg" name="Maximal Length With Null" label="Maximal Length With Null">
            <taggedValue xmi:id="_5zj7MX4eEei25uY0cniCVg" tag="Description" value="computes the maximal length of a text field, counting null data as zero length values."/>
            <taggedValue xmi:id="_5zj7Mn4eEei25uY0cniCVg" tag="Purpose" value="evaluates the length of the longest textual record"/>
            <sqlGenericExpression xmi:id="_5zj7M34eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_5zj7NH4eEei25uY0cniCVg" body="SELECT MAX(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_5zj7NX4eEei25uY0cniCVg" body="SELECT MAX(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_5zj7Nn4eEei25uY0cniCVg" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_5zj7N34eEei25uY0cniCVg" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_5zj7OH4eEei25uY0cniCVg" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_5zj7OX4eEei25uY0cniCVg" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive" version=""/>
            <sqlGenericExpression xmi:id="_5zj7On4eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_5zj7O34eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_5zj7PH4eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_5zj7PX4eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_5zj7Pn4eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
          </builtInIndicatorDefinition>
        </maxLengthWithNullIndicator>
        <maxLengthWithBlankNullIndicator xmi:id="_5WsZxn4eEei25uY0cniCVg" nullCount="4" computed="true" length="65">
          <parameters xmi:id="_50ZotH4eEei25uY0cniCVg">
            <textParameter xmi:id="_50ZotX4eEei25uY0cniCVg" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om77CX4IEei25uY0cniCVg"/>
          <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Maximal_Length_With_Blank_and_Null_0.1.definition#_-hzp8JSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_50Zotn4eEei25uY0cniCVg" body="SELECT MAX(CASE WHEN &quot;MERCHANT_COUNTRY&quot; IS NULL  THEN 0 ELSE LENGTH(&quot;MERCHANT_COUNTRY&quot;) END) FROM &quot;ORACLE&quot;.&quot;MERCHANT_TABLE&quot; " language="Oracle"/>
          <builtInIndicatorDefinition xmi:id="_5zpawH4eEei25uY0cniCVg" name="Maximal Length With Blank and Null" label="Maximal Length With Blank and Null">
            <taggedValue xmi:id="_5zpawX4eEei25uY0cniCVg" tag="Description" value="computes the maximal length of a text field, counting null and blank data as zero length values."/>
            <taggedValue xmi:id="_5zpawn4eEei25uY0cniCVg" tag="Purpose" value="evaluates the length of the longest textual record"/>
            <sqlGenericExpression xmi:id="_5zpaw34eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_5zpaxH4eEei25uY0cniCVg" body="SELECT MAX(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_5zpaxX4eEei25uY0cniCVg" body="SELECT MAX(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_5zpaxn4eEei25uY0cniCVg" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_5zpax34eEei25uY0cniCVg" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_5zpayH4eEei25uY0cniCVg" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_5zpayX4eEei25uY0cniCVg" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_5zpayn4eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_5zpay34eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_5zpazH4eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END )) FROM  &lt;%=__TABLE_NAME__%>   &lt;%=__WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_5zpazX4eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_5zpazn4eEei25uY0cniCVg" body="SELECT MAX(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Netezza"/>
          </builtInIndicatorDefinition>
        </maxLengthWithBlankNullIndicator>
        <avgLengthWithBlankIndicator xmi:id="_5WsZx34eEei25uY0cniCVg" count="1897" nullCount="4" computed="true" sumLength="17118.0">
          <parameters xmi:id="_50ZBrn4eEei25uY0cniCVg">
            <textParameter xmi:id="_50ZBr34eEei25uY0cniCVg"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om77CX4IEei25uY0cniCVg"/>
          <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Average_Length_With_Blank_0.1.definition#__gPoIJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_50ZBsH4eEei25uY0cniCVg" body="SELECT SUM(CASE WHEN &quot;MERCHANT_COUNTRY&quot; IS NOT NULL AND  TRIM(&quot;MERCHANT_COUNTRY&quot;) IS NULL THEN 0 ELSE  LENGTH(&quot;MERCHANT_COUNTRY&quot;)END), COUNT(*) FROM &quot;ORACLE&quot;.&quot;MERCHANT_TABLE&quot; WHERE (&quot;MERCHANT_COUNTRY&quot; IS NOT NULL ) " language="Oracle"/>
          <builtInIndicatorDefinition xmi:id="_5zOkAH4eEei25uY0cniCVg" name="Average Length With Blank" label="Average Length With Blank">
            <taggedValue xmi:id="_5zOkAX4eEei25uY0cniCVg" tag="Description" value="computes the average length of the field, counting blank data as zero length values."/>
            <taggedValue xmi:id="_5zOkAn4eEei25uY0cniCVg" tag="Purpose" value="evaluates the average length of the textual record"/>
            <sqlGenericExpression xmi:id="_5zOkA34eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH(CASE WHEN   CHAR_LENGTH( TRIM(&lt;%=__COLUMN_NAMES__%>) ) =0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_5zOkBH4eEei25uY0cniCVg" body="SELECT SUM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NOT NULL AND  TRIM(&lt;%=__COLUMN_NAMES__%>) IS NULL THEN 0 ELSE  LENGTH(&lt;%=__COLUMN_NAMES__%>)END), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_5zOkBX4eEei25uY0cniCVg" body="SELECT SUM(LEN(CASE WHEN  LEN( LTRIM(RTRIM(&lt;%=__COLUMN_NAMES__%>)) )=0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_5zOkBn4eEei25uY0cniCVg" body="SELECT SUM(LENGTH(CASE WHEN   LENGTH( TRIM(&lt;%=__COLUMN_NAMES__%>) ) =0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_5zOkB34eEei25uY0cniCVg" body="SELECT SUM(LENGTH(CASE WHEN   LENGTH( TRIM(&lt;%=__COLUMN_NAMES__%>) ) =0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_5zOkCH4eEei25uY0cniCVg" body="SELECT SUM(LENGTH(CASE WHEN   LENGTH( TRIM(&lt;%=__COLUMN_NAMES__%>) ) =0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_5zOkCX4eEei25uY0cniCVg" body="SELECT SUM(LENGTH(CASE WHEN   LENGTH( TRIM(&lt;%=__COLUMN_NAMES__%>) ) =0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_5zOkCn4eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( TRIM(&lt;%=__COLUMN_NAMES__%>) ) =0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_5zOkC34eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( LTRIM(RTRIM(&lt;%=__COLUMN_NAMES__%>)) ) =0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_5zOkDH4eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( TRIM( &lt;%=__COLUMN_NAMES__%> ) ) =0  THEN '' ELSE   &lt;%=__COLUMN_NAMES__%>  END)), COUNT(*) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_5zOkDX4eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( TRIM(&lt;%=__COLUMN_NAMES__%>) ) =0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
          </builtInIndicatorDefinition>
        </avgLengthWithBlankIndicator>
        <avgLengthWithNullIndicator xmi:id="_5WsZyH4eEei25uY0cniCVg" count="1901" nullCount="4" computed="true" sumLength="17118.0">
          <parameters xmi:id="_50ZBsX4eEei25uY0cniCVg">
            <textParameter xmi:id="_50ZBsn4eEei25uY0cniCVg" useBlank="false" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om77CX4IEei25uY0cniCVg"/>
          <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Average_Length_With_Null_0.1.definition#__vI_wJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_50ZBs34eEei25uY0cniCVg" body="SELECT SUM(CASE WHEN &quot;MERCHANT_COUNTRY&quot; IS NULL THEN 0 ELSE LENGTH(&quot;MERCHANT_COUNTRY&quot;) END), COUNT(*) FROM &quot;ORACLE&quot;.&quot;MERCHANT_TABLE&quot; WHERE (TRIM(NVL(&quot;MERCHANT_COUNTRY&quot;,'NULL TALEND')) IS NOT NULL) " language="Oracle"/>
          <builtInIndicatorDefinition xmi:id="_5zUDkH4eEei25uY0cniCVg" name="Average Length With Null" label="Average Length With Null">
            <taggedValue xmi:id="_5zUDkX4eEei25uY0cniCVg" tag="Description" value="computes the average length of the field, counting null data as zero length values."/>
            <taggedValue xmi:id="_5zUDkn4eEei25uY0cniCVg" tag="Purpose" value="evaluates the average length of the textual record"/>
            <sqlGenericExpression xmi:id="_5zUDk34eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_5zUDlH4eEei25uY0cniCVg" body="SELECT SUM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_5zUDlX4eEei25uY0cniCVg" body="SELECT SUM(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_5zUDln4eEei25uY0cniCVg" body="SELECT SUM(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_5zUDl34eEei25uY0cniCVg" body="SELECT SUM(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_5zUDmH4eEei25uY0cniCVg" body="SELECT SUM(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_5zUDmX4eEei25uY0cniCVg" body="SELECT SUM(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_5zUDmn4eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_5zUDm34eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_5zUDnH4eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_5zUDnX4eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_5zUDnn4eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
          </builtInIndicatorDefinition>
        </avgLengthWithNullIndicator>
        <avgLengthWithBlankNullIndicator xmi:id="_5WsZyX4eEei25uY0cniCVg" count="1901" nullCount="4" computed="true" sumLength="17118.0">
          <parameters xmi:id="_50ZBtH4eEei25uY0cniCVg">
            <textParameter xmi:id="_50ZBtX4eEei25uY0cniCVg" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om77CX4IEei25uY0cniCVg"/>
          <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Average_Length_With_Blank_and_Null_0.1.definition#__TbUIJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_50ZBtn4eEei25uY0cniCVg" body="SELECT SUM(CASE WHEN &quot;MERCHANT_COUNTRY&quot; IS NOT NULL AND  TRIM(&quot;MERCHANT_COUNTRY&quot;) IS NULL THEN 0 ELSE CASE WHEN &quot;MERCHANT_COUNTRY&quot; IS NULL THEN 0 ELSE LENGTH(&quot;MERCHANT_COUNTRY&quot;) END  END), COUNT(*) FROM &quot;ORACLE&quot;.&quot;MERCHANT_TABLE&quot; " language="Oracle"/>
          <builtInIndicatorDefinition xmi:id="_5zZjIH4eEei25uY0cniCVg" name="Average Length With Blank and Null" label="Average Length With Blank and Null">
            <taggedValue xmi:id="_5zZjIX4eEei25uY0cniCVg" tag="Description" value="computes the average length of the field, counting blank and null data as zero lenght values."/>
            <taggedValue xmi:id="_5zZjIn4eEei25uY0cniCVg" tag="Purpose" value="evaluates the average length of the textual record"/>
            <sqlGenericExpression xmi:id="_5zZjI34eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH(CASE WHEN   CHAR_LENGTH( TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'')) ) =0  THEN '' ELSE  IFNULL(&lt;%=__COLUMN_NAMES__%>,'') END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_5zZjJH4eEei25uY0cniCVg" body="SELECT SUM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NOT NULL AND  TRIM(&lt;%=__COLUMN_NAMES__%>) IS NULL THEN 0 ELSE CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END  END), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_5zZjJX4eEei25uY0cniCVg" body="SELECT SUM(LEN(CASE WHEN  LEN( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) )=0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_5zZjJn4eEei25uY0cniCVg" body="SELECT SUM(LENGTH(CASE WHEN   LENGTH( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END ) ) =0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_5zZjJ34eEei25uY0cniCVg" body="SELECT SUM(LENGTH(CASE WHEN   LENGTH( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END ) ) =0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_5zZjKH4eEei25uY0cniCVg" body="SELECT SUM(LENGTH(CASE WHEN   LENGTH( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END ) ) =0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_5zZjKX4eEei25uY0cniCVg" body="SELECT SUM(LENGTH(CASE WHEN   LENGTH( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END ) ) =0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_5zZjKn4eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END ) ) =0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_5zZjK34eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) ) =0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_5zZjLH4eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END ) ) =0  THEN '' ELSE   CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END  END)), COUNT(*) FROM  &lt;%=__TABLE_NAME__%>   &lt;%=__WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_5zZjLX4eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END ) ) =0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_5zZjLn4eEei25uY0cniCVg" body="SELECT SUM(CHAR_LENGTH(CASE WHEN   CHAR_LENGTH( TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'')) ) =0  THEN '' ELSE  ISNULL(&lt;%=__COLUMN_NAMES__%>,'') END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Netezza"/>
          </builtInIndicatorDefinition>
        </avgLengthWithBlankNullIndicator>
      </indicators>
      <indicators xsi:type="dataquality.indicators:PatternFreqIndicator" xmi:id="_5WsZyn4eEei25uY0cniCVg" count="1901" nullCount="4" computed="true" distinctValueCount="10" valueToFreq="ACED0005737200116A6176612E7574696C2E486173684D61700507DAC1C31660D103000246000A6C6F6164466163746F724900097468726573686F6C6478703F4000000000000C7708000000100000000A707372000E6A6176612E6C616E672E4C6F6E673B8BE490CC8F23DF0200014A000576616C7565787200106A6176612E6C616E672E4E756D62657286AC951D0B94E08B020000787000000000000000047400033929227371007E0002000000000000000174001D393939412041412041412041414141414141204141412039392D3939227371007E0002000000000000000274000539393939397371007E0002000000000000005D7400094161616161616161617371007E000200000000000006F074000A2039393941203939394171007E0006740041393920414141412041414141414120414141414141414141204141412041414141204141414141414141414120414141414120414141414141412041414141412271007E000674002520414141412041412E2041414141414141204141414141414141204141412E2039392D393971007E000674000920414141414141412271007E00087400163939412041412041414141414141414141203939392271007E000678">
        <parameters xmi:id="_5WsZy34eEei25uY0cniCVg"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om77CX4IEei25uY0cniCVg"/>
        <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Pattern Frequency Statistics/Pattern_Frequency_Table_0.1.definition#_kQzTsJR-Ed2XO-JvLwVAwg"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_50ZowH4eEei25uY0cniCVg" body="SELECT * FROM (SELECT TRANSLATE(&quot;MERCHANT_COUNTRY&quot; , 'abcdefghijklmnopqrstuvwxyzçâêîôûéèùïöüABCDEFGHIJKLMNOPQRSTUVWXYZÇÂÊÎÔÛÉÈÙÏÖÜ0123456789' , 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999'), COUNT(*) AS c FROM &quot;ORACLE&quot;.&quot;MERCHANT_TABLE&quot; t  GROUP BY TRANSLATE(&quot;MERCHANT_COUNTRY&quot; , 'abcdefghijklmnopqrstuvwxyzçâêîôûéèùïöüABCDEFGHIJKLMNOPQRSTUVWXYZÇÂÊÎÔÛÉÈÙÏÖÜ0123456789' , 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999') ORDER BY c DESC) WHERE ROWNUM &lt;= 10" language="Oracle"/>
        <builtInIndicatorDefinition xmi:id="_50AAEH4eEei25uY0cniCVg" name="Pattern Frequency Table" label="Pattern Frequency Table">
          <taggedValue xmi:id="_50AAEX4eEei25uY0cniCVg" tag="Description" value="counts the number of records for each distinct pattern"/>
          <taggedValue xmi:id="_50AAEn4eEei25uY0cniCVg" tag="Purpose" value="evaluates the most frequent patterns"/>
          <sqlGenericExpression xmi:id="_50AAE34eEei25uY0cniCVg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY c DESC" language="SQL"/>
          <sqlGenericExpression xmi:id="_50AAFH4eEei25uY0cniCVg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY c DESC" language="MySQL"/>
          <sqlGenericExpression xmi:id="_50AAFX4eEei25uY0cniCVg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) AS c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY c DESC" language="Oracle"/>
          <sqlGenericExpression xmi:id="_50AAFn4eEei25uY0cniCVg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) AS c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY c DESC" language="PostgreSQL"/>
          <sqlGenericExpression xmi:id="_50AAF34eEei25uY0cniCVg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY c DESC" language="DB2"/>
          <sqlGenericExpression xmi:id="_50AAGH4eEei25uY0cniCVg" body="SELECT &lt;%=__COLUMN_NAMES__%> , COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY c DESC" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_50AAGX4eEei25uY0cniCVg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) AS c FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY c DESC" language="Informix"/>
          <sqlGenericExpression xmi:id="_50AAGn4eEei25uY0cniCVg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY c DESC" language="AS/400"/>
          <sqlGenericExpression xmi:id="_50AAG34eEei25uY0cniCVg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY c DESC" language="Teradata"/>
          <sqlGenericExpression xmi:id="_50AAHH4eEei25uY0cniCVg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) AS c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY c DESC" language="Vertica Database"/>
          <sqlGenericExpression xmi:id="_50AAHX4eEei25uY0cniCVg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) AS c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY c DESC" language="Netezza"/>
          <charactersMapping xmi:id="_50AAHn4eEei25uY0cniCVg" language="SQL" charactersToReplace="abcdefghijklmnopqrstuvwxyzçâêîôûéèùïöüABCDEFGHIJKLMNOPQRSTUVWXYZÇÂÊÎÔÛÉÈÙÏÖÜ0123456789" replacementCharacters="aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999"/>
          <charactersMapping xmi:id="_50AAH34eEei25uY0cniCVg" name="Characters mapping on MySQL" language="MySQL" charactersToReplace="abcdefghijklmnopqrstuvwxyzçâêîôûéèùïöüABCDEFGHIJKLMNOPQRSTUVWXYZÇÂÊÎÔÛÉÈÙÏÖÜ0123456789" replacementCharacters="aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999"/>
          <charactersMapping xmi:id="_50AAIH4eEei25uY0cniCVg" name="Characters mapping on Oracle" language="Oracle" charactersToReplace="abcdefghijklmnopqrstuvwxyzçâêîôûéèùïöüABCDEFGHIJKLMNOPQRSTUVWXYZÇÂÊÎÔÛÉÈÙÏÖÜ0123456789" replacementCharacters="aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999"/>
          <charactersMapping xmi:id="_50AAIX4eEei25uY0cniCVg" name="Characters mapping on PostgreSQL" language="PostgreSQL" charactersToReplace="abcdefghijklmnopqrstuvwxyzçâêîôûéèùïöüABCDEFGHIJKLMNOPQRSTUVWXYZÇÂÊÎÔÛÉÈÙÏÖÜ0123456789" replacementCharacters="aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999"/>
          <charactersMapping xmi:id="_50AAIn4eEei25uY0cniCVg" name="Characters mapping on Microsoft SQL Server" language="Microsoft SQL Server" charactersToReplace="abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789" replacementCharacters="aaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999"/>
          <charactersMapping xmi:id="_50AAI34eEei25uY0cniCVg" name="Characters mapping on DB2" language="DB2" charactersToReplace="abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789" replacementCharacters="aaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999"/>
          <charactersMapping xmi:id="_50AAJH4eEei25uY0cniCVg" name="Characters mapping on AS/400" language="AS/400" charactersToReplace="abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789" replacementCharacters="aaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999"/>
          <charactersMapping xmi:id="_50AAJX4eEei25uY0cniCVg" name="Characters mapping on Informix" language="Informix" charactersToReplace="abcdefghijklmnopqrstuvwxyzçâêîôûéèùïöüABCDEFGHIJKLMNOPQRSTUVWXYZÇÂÊÎÔÛÉÈÙÏÖÜ0123456789" replacementCharacters="aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999"/>
          <charactersMapping xmi:id="_50AAJn4eEei25uY0cniCVg" name="Characters mapping on Teradata" language="Teradata" charactersToReplace="abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789" replacementCharacters="aaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999"/>
          <charactersMapping xmi:id="_50AAJ34eEei25uY0cniCVg" name="Characters mapping on Vertica" language="Vertica Database" charactersToReplace="abcdefghijklmnopqrstuvwxyzçâêîôûéèùïöüABCDEFGHIJKLMNOPQRSTUVWXYZÇÂÊÎÔÛÉÈÙÏÖÜ0123456789" replacementCharacters="aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999"/>
          <charactersMapping xmi:id="_50AAKH4eEei25uY0cniCVg" language="Netezza" charactersToReplace="abcdefghijklmnopqrstuvwxyzçâêîôûéèùïöüABCDEFGHIJKLMNOPQRSTUVWXYZÇÂÊÎÔÛÉÈÙÏÖÜ0123456789" replacementCharacters="aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999"/>
          <charactersMapping xmi:id="_50AAKX4eEei25uY0cniCVg" name="Characters mapping on Hive" language="Hive" charactersToReplace="0123456789abcdefghijklmnopqrstuvwxyz?aê???éèù??üABCDEFGHIJKLMNOPQRSTUVWXYZ??ê???éèù??ü" replacementCharacters="9999999999aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:SoundexFreqIndicator" xmi:id="_5WsZzH4eEei25uY0cniCVg" count="1901" nullCount="4" computed="true" distinctValueCount="10" valueToFreqvalueToDistinctFreq
        <parameters xmi:id="_5WsZzX4eEei25uY0cniCVg"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/oracle_133_0.1.item#_Om77CX4IEei25uY0cniCVg"/>
        <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Soundex/Soundex_Frequency_Table_0.1.definition#_VGep4Pa7Ed24-N3PsP_o-w"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_50ZowX4eEei25uY0cniCVg" body="SELECT * FROM (SELECT MAX(&quot;MERCHANT_COUNTRY&quot;), SOUNDEX(&quot;MERCHANT_COUNTRY&quot;), COUNT(*) c, COUNT(DISTINCT &quot;MERCHANT_COUNTRY&quot;) d FROM &quot;ORACLE&quot;.&quot;MERCHANT_TABLE&quot; t  GROUP BY SOUNDEX(&quot;MERCHANT_COUNTRY&quot;) ORDER BY d DESC,c DESC) WHERE ROWNUM &lt;= 10" language="Oracle"/>
        <builtInIndicatorDefinition xmi:id="_50FfoH4eEei25uY0cniCVg" name="Soundex Frequency Table" label="Soundex Frequency Table">
          <taggedValue xmi:id="_50FfoX4eEei25uY0cniCVg" tag="Description" value="counts the number of records for each record with a distinct soundex"/>
          <taggedValue xmi:id="_50Ffon4eEei25uY0cniCVg" tag="Purpose" value="evaluates the most frequent records with respect to their soundex value"/>
          <sqlGenericExpression xmi:id="_50Ffo34eEei25uY0cniCVg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>), COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SOUNDEX(&lt;%=__COLUMN_NAMES__%>) ORDER BY d DESC,c DESC" language="SQL"/>
          <sqlGenericExpression xmi:id="_50FfpH4eEei25uY0cniCVg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>) , COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY 2 ORDER BY d DESC,c DESC" language="MySQL"/>
          <sqlGenericExpression xmi:id="_50FfpX4eEei25uY0cniCVg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>), COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SOUNDEX(&lt;%=__COLUMN_NAMES__%>) ORDER BY d DESC,c DESC" language="Oracle"/>
          <sqlGenericExpression xmi:id="_50Ffpn4eEei25uY0cniCVg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>),  COUNT(*), COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SOUNDEX(&lt;%=__COLUMN_NAMES__%>) ORDER BY COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) DESC , COUNT(*) DESC" language="PostgreSQL"/>
          <sqlGenericExpression xmi:id="_50Ffp34eEei25uY0cniCVg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>), COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SOUNDEX(&lt;%=__COLUMN_NAMES__%>) ORDER BY d DESC,c DESC" language="DB2"/>
          <sqlGenericExpression xmi:id="_50FfqH4eEei25uY0cniCVg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>), COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SOUNDEX(&lt;%=__COLUMN_NAMES__%>) ORDER BY d DESC,c DESC" language="Teradata"/>
          <sqlGenericExpression xmi:id="_50FfqX4eEei25uY0cniCVg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>), COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SOUNDEX(&lt;%=__COLUMN_NAMES__%>) ORDER BY d DESC,c DESC" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_50Ffqn4eEei25uY0cniCVg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>) , COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY 2 ORDER BY d DESC,c DESC" language="Informix"/>
          <sqlGenericExpression xmi:id="_50Ffq34eEei25uY0cniCVg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>) , COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY 2 ORDER BY d DESC,c DESC" language="Ingres"/>
          <sqlGenericExpression xmi:id="_50FfrH4eEei25uY0cniCVg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), NYSIIS(&lt;%=__COLUMN_NAMES__%>) , COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY 2 ORDER BY d DESC,c DESC" language="Netezza"/>
        </builtInIndicatorDefinition>
      </indicators>
    </results>
    <parameters xmi:id="_ficX2X4eEei25uY0cniCVg" dataFilter="_5Wx4kH4eEei25uY0cniCVg" analysisType="Multiple Column Analysis"/>
    <contextType xmi:id="_5WioAH4eEei25uY0cniCVg" confirmationNeeded="false" name="Default"/>
  </dataquality.analysis:Analysis>
  <orgomg.cwm.objectmodel.core:Dependency xmi:id="_nVo8cH4gEei25uY0cniCVg" kind="Usage" supplier="_ficX0H4eEei25uY0cniCVg">
    <client xsi:type="dataquality.reports:TdReport" href="../Reports/merchant_reports_0.1.rep#_bu2fgH4gEei25uY0cniCVg"/>
  </orgomg.cwm.objectmodel.core:Dependency>
  <dataquality.domain:Domain xmi:id="_5Wx4kH4eEei25uY0cniCVg" name="merchant_analysis">
    <ranges xmi:id="_5Wx4kX4eEei25uY0cniCVg">
      <expressions xmi:id="_5WyfoH4eEei25uY0cniCVg">
        <expression xsi:type="relational:TdExpression" xmi:id="_5WyfoX4eEei25uY0cniCVg" body="" language="SQL"/>
      </expressions>
    </ranges>
  </dataquality.domain:Domain>
</xmi:XMI>
